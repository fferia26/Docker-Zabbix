{"version":3,"file":"datasource/module.js","mappings":"8RAGA,MAAMA,EAAU,EAAQ,MAElBC,EAAMC,OAAO,OACbC,EAASD,OAAO,UAChBE,EAAoBF,OAAO,oBAC3BG,EAAcH,OAAO,cACrBI,EAAUJ,OAAO,UACjBK,EAAUL,OAAO,WACjBM,EAAoBN,OAAO,kBAC3BO,EAAWP,OAAO,WAClBQ,EAAQR,OAAO,SACfS,EAAoBT,OAAO,kBAE3BU,EAAc,IAAM,EAkPpBC,EAAM,CAACC,EAAMC,EAAKC,KACtB,MAAMC,EAAOH,EAAKJ,GAAOG,IAAIE,GAC7B,GAAIE,EAAM,CACR,MAAMC,EAAMD,EAAKE,MACjB,GAAIC,EAAQN,EAAMI,IAEhB,GADAG,EAAIP,EAAMG,IACLH,EAAKT,GACR,YAEEW,IACEF,EAAKH,KACPM,EAAKE,MAAMG,IAAMC,KAAKD,OACxBR,EAAKL,GAAUe,YAAYP,IAG/B,OAAOC,EAAIC,KACb,GAGIC,EAAU,CAACN,EAAMI,KACrB,IAAKA,IAASA,EAAIO,SAAWX,EAAKR,GAChC,OAAO,EAET,MAAMoB,EAAOH,KAAKD,MAAQJ,EAAII,IAC9B,OAAOJ,EAAIO,OAASC,EAAOR,EAAIO,OAC3BX,EAAKR,IAAaoB,EAAOZ,EAAKR,EAAQ,EAGtCqB,EAAOb,IACX,GAAIA,EAAKX,GAAUW,EAAKb,GACtB,IAAK,IAAI2B,EAASd,EAAKL,GAAUoB,KAC/Bf,EAAKX,GAAUW,EAAKb,IAAmB,OAAX2B,GAAkB,CAI9C,MAAME,EAAOF,EAAOE,KACpBT,EAAIP,EAAMc,GACVA,EAASE,CACX,CACF,EAGIT,EAAM,CAACP,EAAMG,KACjB,GAAIA,EAAM,CACR,MAAMC,EAAMD,EAAKE,MACbL,EAAKP,IACPO,EAAKP,GAASW,EAAIH,IAAKG,EAAIC,OAE7BL,EAAKX,IAAWe,EAAIa,OACpBjB,EAAKJ,GAAOsB,OAAOd,EAAIH,KACvBD,EAAKL,GAAUwB,WAAWhB,EAC5B,GAGF,MAAMiB,EACJC,YAAapB,EAAKI,EAAOY,EAAQT,EAAKG,GACpCW,KAAKrB,IAAMA,EACXqB,KAAKjB,MAAQA,EACbiB,KAAKL,OAASA,EACdK,KAAKd,IAAMA,EACXc,KAAKX,OAASA,GAAU,CAC1B,EAGF,MAAMY,EAAc,CAACvB,EAAMwB,EAAIrB,EAAMsB,KACnC,IAAIrB,EAAMD,EAAKE,MACXC,EAAQN,EAAMI,KAChBG,EAAIP,EAAMG,GACLH,EAAKT,KACRa,OAAMsB,IAENtB,GACFoB,EAAGG,KAAKF,EAAOrB,EAAIC,MAAOD,EAAIH,IAAKD,EAAI,EAG3C4B,EAAOC,QAnTP,MACER,YAAaS,GAOX,GANuB,iBAAZA,IACTA,EAAU,CAAEC,IAAKD,IAEdA,IACHA,EAAU,CAAC,GAETA,EAAQC,MAA+B,iBAAhBD,EAAQC,KAAoBD,EAAQC,IAAM,GACnE,MAAM,IAAIC,UAAU,qCAEVV,KAAKnC,GAAO2C,EAAQC,KAAOE,IAAvC,MAEMC,EAAKJ,EAAQb,QAAUnB,EAG7B,GAFAwB,KAAKhC,GAAoC,mBAAP4C,EAAqBpC,EAAcoC,EACrEZ,KAAK/B,GAAeuC,EAAQK,QAAS,EACjCL,EAAQnB,QAAoC,iBAAnBmB,EAAQnB,OACnC,MAAM,IAAIqB,UAAU,2BACtBV,KAAK9B,GAAWsC,EAAQnB,QAAU,EAClCW,KAAK7B,GAAWqC,EAAQM,QACxBd,KAAK5B,GAAqBoC,EAAQO,iBAAkB,EACpDf,KAAKzB,GAAqBiC,EAAQQ,iBAAkB,EACpDhB,KAAKiB,OACP,CAGIR,QAAKS,GACP,GAAkB,iBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAIR,UAAU,qCAEtBV,KAAKnC,GAAOqD,GAAMP,IAClBpB,EAAKS,KACP,CACIS,UACF,OAAOT,KAAKnC,EACd,CAEIsD,eAAYA,GACdnB,KAAK/B,KAAiBkD,CACxB,CACIA,iBACF,OAAOnB,KAAK/B,EACd,CAEIoB,WAAQ+B,GACV,GAAkB,iBAAPA,EACT,MAAM,IAAIV,UAAU,wCAEtBV,KAAK9B,GAAWkD,EAChB7B,EAAKS,KACP,CACIX,aACF,OAAOW,KAAK9B,EACd,CAGImD,qBAAkBC,GACF,mBAAPA,IACTA,EAAK9C,GAEH8C,IAAOtB,KAAKhC,KACdgC,KAAKhC,GAAqBsD,EAC1BtB,KAAKjC,GAAU,EACfiC,KAAK3B,GAAUkD,SAAQzC,IACrBA,EAAIa,OAASK,KAAKhC,GAAmBc,EAAIC,MAAOD,EAAIH,KACpDqB,KAAKjC,IAAWe,EAAIa,WAGxBJ,EAAKS,KACP,CACIqB,uBAAsB,OAAOrB,KAAKhC,EAAmB,CAErD2B,aAAY,OAAOK,KAAKjC,EAAQ,CAChCyD,gBAAe,OAAOxB,KAAK3B,GAAUsB,MAAO,CAEhD8B,SAAUvB,EAAIC,GACZA,EAAQA,GAASH,KACjB,IAAK,IAAIR,EAASQ,KAAK3B,GAAUoB,KAAiB,OAAXD,GAAkB,CACvD,MAAME,EAAOF,EAAOE,KACpBO,EAAYD,KAAME,EAAIV,EAAQW,GAC9BX,EAASE,CACX,CACF,CAEA6B,QAASrB,EAAIC,GACXA,EAAQA,GAASH,KACjB,IAAK,IAAIR,EAASQ,KAAK3B,GAAUqD,KAAiB,OAAXlC,GAAkB,CACvD,MAAMmC,EAAOnC,EAAOmC,KACpB1B,EAAYD,KAAME,EAAIV,EAAQW,GAC9BX,EAASmC,CACX,CACF,CAEAC,OACE,OAAO5B,KAAK3B,GAAUwD,UAAUC,KAAIC,GAAKA,EAAEpD,KAC7C,CAEAqD,SACE,OAAOhC,KAAK3B,GAAUwD,UAAUC,KAAIC,GAAKA,EAAEhD,OAC7C,CAEAkC,QACMjB,KAAK7B,IACL6B,KAAK3B,IACL2B,KAAK3B,GAAUsB,QACjBK,KAAK3B,GAAUkD,SAAQzC,GAAOkB,KAAK7B,GAASW,EAAIH,IAAKG,EAAIC,SAG3DiB,KAAK1B,GAAS,IAAI2D,IAClBjC,KAAK3B,GAAY,IAAIT,EACrBoC,KAAKjC,GAAU,CACjB,CAEAmE,OACE,OAAOlC,KAAK3B,GAAUyD,KAAIhD,IACxBE,EAAQgB,KAAMlB,IAAe,CAC3BiD,EAAGjD,EAAIH,IACPwD,EAAGrD,EAAIC,MACPqD,EAAGtD,EAAII,KAAOJ,EAAIO,QAAU,MAC3BwC,UAAUQ,QAAOC,GAAKA,GAC7B,CAEAC,UACE,OAAOvC,KAAK3B,EACd,CAEAmE,IAAK7D,EAAKI,EAAOM,GAGf,IAFAA,EAASA,GAAUW,KAAK9B,KAEQ,iBAAXmB,EACnB,MAAM,IAAIqB,UAAU,2BAEtB,MAAMxB,EAAMG,EAASF,KAAKD,MAAQ,EAC5BuD,EAAMzC,KAAKhC,GAAmBe,EAAOJ,GAE3C,GAAIqB,KAAK1B,GAAOoE,IAAI/D,GAAM,CACxB,GAAI8D,EAAMzC,KAAKnC,GAEb,OADAoB,EAAIe,KAAMA,KAAK1B,GAAOG,IAAIE,KACnB,EAGT,MACMgE,EADO3C,KAAK1B,GAAOG,IAAIE,GACXI,MAgBlB,OAZIiB,KAAK7B,KACF6B,KAAK5B,IACR4B,KAAK7B,GAASQ,EAAKgE,EAAK5D,QAG5B4D,EAAKzD,IAAMA,EACXyD,EAAKtD,OAASA,EACdsD,EAAK5D,MAAQA,EACbiB,KAAKjC,IAAW0E,EAAME,EAAKhD,OAC3BgD,EAAKhD,OAAS8C,EACdzC,KAAKvB,IAAIE,GACTY,EAAKS,OACE,CACT,CAEA,MAAMlB,EAAM,IAAIgB,EAAMnB,EAAKI,EAAO0D,EAAKvD,EAAKG,GAG5C,OAAIP,EAAIa,OAASK,KAAKnC,IAChBmC,KAAK7B,IACP6B,KAAK7B,GAASQ,EAAKI,IAEd,IAGTiB,KAAKjC,IAAWe,EAAIa,OACpBK,KAAK3B,GAAUuE,QAAQ9D,GACvBkB,KAAK1B,GAAOkE,IAAI7D,EAAKqB,KAAK3B,GAAUqD,MACpCnC,EAAKS,OACE,EACT,CAEA0C,IAAK/D,GACH,IAAKqB,KAAK1B,GAAOoE,IAAI/D,GAAM,OAAO,EAClC,MAAMG,EAAMkB,KAAK1B,GAAOG,IAAIE,GAAKI,MACjC,OAAQC,EAAQgB,KAAMlB,EACxB,CAEAL,IAAKE,GACH,OAAOF,EAAIuB,KAAMrB,GAAK,EACxB,CAEAkE,KAAMlE,GACJ,OAAOF,EAAIuB,KAAMrB,GAAK,EACxB,CAEAmE,MACE,MAAMjE,EAAOmB,KAAK3B,GAAUoB,KAC5B,OAAKZ,GAGLI,EAAIe,KAAMnB,GACHA,EAAKE,OAHH,IAIX,CAEAE,IAAKN,GACHM,EAAIe,KAAMA,KAAK1B,GAAOG,IAAIE,GAC5B,CAEAoE,KAAMC,GAEJhD,KAAKiB,QAEL,MAAM/B,EAAMC,KAAKD,MAEjB,IAAK,IAAI+D,EAAID,EAAIrD,OAAS,EAAGsD,GAAK,EAAGA,IAAK,CACxC,MAAMnE,EAAMkE,EAAIC,GACVC,EAAYpE,EAAIsD,GAAK,EAC3B,GAAkB,IAAdc,EAEFlD,KAAKwC,IAAI1D,EAAIiD,EAAGjD,EAAIqD,OACjB,CACH,MAAM9C,EAAS6D,EAAYhE,EAEvBG,EAAS,GACXW,KAAKwC,IAAI1D,EAAIiD,EAAGjD,EAAIqD,EAAG9C,EAE3B,CACF,CACF,CAEA8D,QACEnD,KAAK1B,GAAOiD,SAAQ,CAACxC,EAAOJ,IAAQF,EAAIuB,KAAMrB,GAAK,IACrD,E,iBC/PF,MAAMyE,EAAMtF,OAAO,cAEnB,MAAMuF,EACOD,iBACT,OAAOA,CACT,CACArD,YAAauD,EAAM9C,GAGjB,GAFAA,EAAU+C,EAAa/C,GAEnB8C,aAAgBD,EAAY,CAC9B,GAAIC,EAAKE,UAAYhD,EAAQgD,MAC3B,OAAOF,EAEPA,EAAOA,EAAKvE,KAEhB,CAEA0E,EAAM,aAAcH,EAAM9C,GAC1BR,KAAKQ,QAAUA,EACfR,KAAKwD,QAAUhD,EAAQgD,MACvBxD,KAAK0D,MAAMJ,GAEPtD,KAAK2D,SAAWP,EAClBpD,KAAKjB,MAAQ,GAEbiB,KAAKjB,MAAQiB,KAAK4D,SAAW5D,KAAK2D,OAAOE,QAG3CJ,EAAM,OAAQzD,KAChB,CAEA0D,MAAOJ,GACL,MAAMQ,EAAI9D,KAAKQ,QAAQgD,MAAQO,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YACtDC,EAAIb,EAAKc,MAAMN,GAErB,IAAKK,EACH,MAAM,IAAIzD,UAAU,uBAAuB4C,KAG7CtD,KAAK4D,cAAoBxD,IAAT+D,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBnE,KAAK4D,WACP5D,KAAK4D,SAAW,IAIbO,EAAE,GAGLnE,KAAK2D,OAAS,IAAIU,EAAOF,EAAE,GAAInE,KAAKQ,QAAQgD,OAF5CxD,KAAK2D,OAASP,CAIlB,CAEAkB,WACE,OAAOtE,KAAKjB,KACd,CAEAwF,KAAMV,GAGJ,GAFAJ,EAAM,kBAAmBI,EAAS7D,KAAKQ,QAAQgD,OAE3CxD,KAAK2D,SAAWP,GAAOS,IAAYT,EACrC,OAAO,EAGT,GAAuB,iBAAZS,EACT,IACEA,EAAU,IAAIQ,EAAOR,EAAS7D,KAAKQ,QAGrC,CAFE,MAAOgE,GACP,OAAO,CACT,CAGF,OAAOC,EAAIZ,EAAS7D,KAAK4D,SAAU5D,KAAK2D,OAAQ3D,KAAKQ,QACvD,CAEAkE,WAAYpB,EAAM9C,GAChB,KAAM8C,aAAgBD,GACpB,MAAM,IAAI3C,UAAU,4BAUtB,GAPKF,GAA8B,iBAAZA,IACrBA,EAAU,CACRgD,QAAShD,EACTmE,mBAAmB,IAID,KAAlB3E,KAAK4D,SACP,MAAmB,KAAf5D,KAAKjB,OAGF,IAAI6F,EAAMtB,EAAKvE,MAAOyB,GAAS+D,KAAKvE,KAAKjB,OAC3C,GAAsB,KAAlBuE,EAAKM,SACd,MAAmB,KAAfN,EAAKvE,OAGF,IAAI6F,EAAM5E,KAAKjB,MAAOyB,GAAS+D,KAAKjB,EAAKK,QAGlD,MAAMkB,IACe,OAAlB7E,KAAK4D,UAAuC,MAAlB5D,KAAK4D,UACb,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC5BkB,IACe,OAAlB9E,KAAK4D,UAAuC,MAAlB5D,KAAK4D,UACb,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC5BmB,EAAa/E,KAAK2D,OAAOE,UAAYP,EAAKK,OAAOE,QACjDmB,IACe,OAAlBhF,KAAK4D,UAAuC,OAAlB5D,KAAK4D,UACb,OAAlBN,EAAKM,UAAuC,OAAlBN,EAAKM,UAC5BqB,EACJR,EAAIzE,KAAK2D,OAAQ,IAAKL,EAAKK,OAAQnD,KAChB,OAAlBR,KAAK4D,UAAuC,MAAlB5D,KAAK4D,YACX,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC9BsB,EACJT,EAAIzE,KAAK2D,OAAQ,IAAKL,EAAKK,OAAQnD,KAChB,OAAlBR,KAAK4D,UAAuC,MAAlB5D,KAAK4D,YACX,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAEpC,OACEiB,GACAC,GACCC,GAAcC,GACfC,GACAC,CAEJ,EAGF5E,EAAOC,QAAU8C,EAEjB,MAAME,EAAe,EAAQ,OACvB,GAACQ,EAAE,EAAEC,GAAK,EAAQ,MAClBS,EAAM,EAAQ,MACdhB,EAAQ,EAAQ,MAChBY,EAAS,EAAQ,MACjBO,EAAQ,EAAQ,K,iBCrItB,MAAMA,EACJ7E,YAAaoF,EAAO3E,GAGlB,GAFAA,EAAU+C,EAAa/C,GAEnB2E,aAAiBP,EACnB,OACEO,EAAM3B,UAAYhD,EAAQgD,OAC1B2B,EAAMR,sBAAwBnE,EAAQmE,kBAE/BQ,EAEA,IAAIP,EAAMO,EAAMC,IAAK5E,GAIhC,GAAI2E,aAAiB9B,EAKnB,OAHArD,KAAKoF,IAAMD,EAAMpG,MACjBiB,KAAKwC,IAAM,CAAC,CAAC2C,IACbnF,KAAKqF,SACErF,KAkBT,GAfAA,KAAKQ,QAAUA,EACfR,KAAKwD,QAAUhD,EAAQgD,MACvBxD,KAAK2E,oBAAsBnE,EAAQmE,kBAGnC3E,KAAKoF,IAAMD,EACXnF,KAAKwC,IAAM2C,EACRG,MAAM,cAENxD,KAAIqD,GAASnF,KAAKuF,WAAWJ,EAAM5F,UAInC8C,QAAOmD,GAAKA,EAAE7F,UAEZK,KAAKwC,IAAI7C,OACZ,MAAM,IAAIe,UAAU,yBAAyByE,KAI/C,GAAInF,KAAKwC,IAAI7C,OAAS,EAAG,CAEvB,MAAM8F,EAAQzF,KAAKwC,IAAI,GAEvB,GADAxC,KAAKwC,IAAMxC,KAAKwC,IAAIH,QAAOmD,IAAME,EAAUF,EAAE,MACrB,IAApBxF,KAAKwC,IAAI7C,OACXK,KAAKwC,IAAM,CAACiD,QACT,GAAIzF,KAAKwC,IAAI7C,OAAS,EAEzB,IAAK,MAAM6F,KAAKxF,KAAKwC,IACnB,GAAiB,IAAbgD,EAAE7F,QAAgBgG,EAAMH,EAAE,IAAK,CACjCxF,KAAKwC,IAAM,CAACgD,GACZ,KACF,CAGN,CAEAxF,KAAKqF,QACP,CAEAA,SAOE,OANArF,KAAKmF,MAAQnF,KAAKwC,IACfV,KAAK8D,GACGA,EAAMC,KAAK,KAAKtG,SAExBsG,KAAK,MACLtG,OACIS,KAAKmF,KACd,CAEAb,WACE,OAAOtE,KAAKmF,KACd,CAEAI,WAAYJ,GACVA,EAAQA,EAAM5F,OAId,MACMuG,EAAU,cADCC,OAAOnE,KAAK5B,KAAKQ,SAASqF,KAAK,QACNV,IACpCa,EAASC,EAAMxH,IAAIqH,GACzB,GAAIE,EACF,OAAOA,EAET,MAAMxC,EAAQxD,KAAKQ,QAAQgD,MAErB0C,EAAK1C,EAAQO,EAAGC,EAAEmC,kBAAoBpC,EAAGC,EAAEoC,aACjDjB,EAAQA,EAAMkB,QAAQH,EAAII,EAActG,KAAKQ,QAAQmE,oBACrDlB,EAAM,iBAAkB0B,GAExBA,EAAQA,EAAMkB,QAAQtC,EAAGC,EAAEuC,gBAAiBC,GAC5C/C,EAAM,kBAAmB0B,EAAOpB,EAAGC,EAAEuC,iBASrCpB,GAHAA,GAHAA,EAAQA,EAAMkB,QAAQtC,EAAGC,EAAEyC,WAAYC,IAGzBL,QAAQtC,EAAGC,EAAE2C,WAAYC,IAGzBtB,MAAM,OAAOO,KAAK,KAKhC,MAAMgB,EAASrD,EAAQO,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YAC9C4C,EAAY3B,EACfG,MAAM,KACNxD,KAAIwB,GAAQyD,EAAgBzD,EAAMtD,KAAKQ,WACvCqF,KAAK,KACLP,MAAM,OAENxD,KAAIwB,GAAQ0D,EAAY1D,EAAMtD,KAAKQ,WAEnC6B,OAAOrC,KAAKQ,QAAQgD,MAAQF,KAAUA,EAAKc,MAAMyC,GAAU,KAAM,GACjE/E,KAAIwB,GAAQ,IAAID,EAAWC,EAAMtD,KAAKQ,WAMnCyG,GADIH,EAAUnH,OACH,IAAIsC,KACrB,IAAK,MAAMqB,KAAQwD,EAAW,CAC5B,GAAIpB,EAAUpC,GACZ,MAAO,CAACA,GACV2D,EAASzE,IAAIc,EAAKvE,MAAOuE,EAC3B,CACI2D,EAASC,KAAO,GAAKD,EAASvE,IAAI,KACpCuE,EAASrH,OAAO,IAElB,MAAMuH,EAAS,IAAIF,EAASjF,UAE5B,OADAiE,EAAMzD,IAAIsD,EAASqB,GACZA,CACT,CAEAzC,WAAYS,EAAO3E,GACjB,KAAM2E,aAAiBP,GACrB,MAAM,IAAIlE,UAAU,uBAGtB,OAAOV,KAAKwC,IAAI4E,MAAMC,GAElBC,EAAcD,EAAiB7G,IAC/B2E,EAAM3C,IAAI4E,MAAMG,GAEZD,EAAcC,EAAkB/G,IAChC6G,EAAgBG,OAAOC,GACdF,EAAiBC,OAAOE,GACtBD,EAAe/C,WAAWgD,EAAiBlH,UAOhE,CAGA+D,KAAMV,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,iBAAZA,EACT,IACEA,EAAU,IAAIQ,EAAOR,EAAS7D,KAAKQ,QAGrC,CAFE,MAAOgE,GACP,OAAO,CACT,CAGF,IAAK,IAAImD,EAAI,EAAGA,EAAI3H,KAAKwC,IAAI7C,OAAQgI,IACnC,GAAIC,EAAQ5H,KAAKwC,IAAImF,GAAI9D,EAAS7D,KAAKQ,SACrC,OAAO,EAGX,OAAO,CACT,EAEFF,EAAOC,QAAUqE,EAEjB,MACMqB,EAAQ,IADF,EAAQ,MACN,CAAQ,CAAExF,IAAK,MAEvB8C,EAAe,EAAQ,MACvBF,EAAa,EAAQ,MACrBI,EAAQ,EAAQ,MAChBY,EAAS,EAAQ,OACjB,GACJN,EAAE,EACFC,EAAC,sBACDwC,EAAqB,iBACrBE,EAAgB,iBAChBE,GACE,EAAQ,MAENlB,EAAYF,GAAiB,aAAZA,EAAEzG,MACnB4G,EAAQH,GAAiB,KAAZA,EAAEzG,MAIfuI,EAAgB,CAACO,EAAarH,KAClC,IAAI2G,GAAS,EACb,MAAMW,EAAuBD,EAAYE,QACzC,IAAIC,EAAiBF,EAAqBhF,MAE1C,KAAOqE,GAAUW,EAAqBnI,QACpCwH,EAASW,EAAqBN,OAAOS,GAC5BD,EAAetD,WAAWuD,EAAiBzH,KAGpDwH,EAAiBF,EAAqBhF,MAGxC,OAAOqE,GAMHJ,EAAkB,CAACzD,EAAM9C,KAC7BiD,EAAM,OAAQH,EAAM9C,GACpB8C,EAAO4E,EAAc5E,EAAM9C,GAC3BiD,EAAM,QAASH,GACfA,EAAO6E,EAAc7E,EAAM9C,GAC3BiD,EAAM,SAAUH,GAChBA,EAAO8E,EAAe9E,EAAM9C,GAC5BiD,EAAM,SAAUH,GAChBA,EAAO+E,EAAa/E,EAAM9C,GAC1BiD,EAAM,QAASH,GACRA,GAGHgF,EAAMC,IAAOA,GAA2B,MAArBA,EAAGC,eAAgC,MAAPD,EAQ/CJ,EAAgB,CAAC7E,EAAM9C,IAC3B8C,EAAK/D,OAAO+F,MAAM,OAAOxD,KAAKwB,GACrBmF,EAAanF,EAAM9C,KACzBqF,KAAK,KAEJ4C,EAAe,CAACnF,EAAM9C,KAC1B,MAAMsD,EAAItD,EAAQgD,MAAQO,EAAGC,EAAE0E,YAAc3E,EAAGC,EAAE2E,OAClD,OAAOrF,EAAK+C,QAAQvC,GAAG,CAAC8E,EAAGC,EAAG1E,EAAG2E,EAAGC,KAElC,IAAIC,EAoBJ,OArBAvF,EAAM,QAASH,EAAMsF,EAAGC,EAAG1E,EAAG2E,EAAGC,GAG7BT,EAAIO,GACNG,EAAM,GACGV,EAAInE,GACb6E,EAAM,KAAKH,WAAWA,EAAI,UACjBP,EAAIQ,GAEbE,EAAM,KAAKH,KAAK1E,QAAQ0E,MAAM1E,EAAI,QACzB4E,GACTtF,EAAM,kBAAmBsF,GACzBC,EAAM,KAAKH,KAAK1E,KAAK2E,KAAKC,MACrBF,MAAM1E,EAAI,SAGf6E,EAAM,KAAKH,KAAK1E,KAAK2E,MAChBD,MAAM1E,EAAI,QAGjBV,EAAM,eAAgBuF,GACfA,IACR,EASGd,EAAgB,CAAC5E,EAAM9C,IAC3B8C,EAAK/D,OAAO+F,MAAM,OAAOxD,KAAKwB,GACrB2F,EAAa3F,EAAM9C,KACzBqF,KAAK,KAEJoD,EAAe,CAAC3F,EAAM9C,KAC1BiD,EAAM,QAASH,EAAM9C,GACrB,MAAMsD,EAAItD,EAAQgD,MAAQO,EAAGC,EAAEkF,YAAcnF,EAAGC,EAAEmF,OAC5CC,EAAI5I,EAAQmE,kBAAoB,KAAO,GAC7C,OAAOrB,EAAK+C,QAAQvC,GAAG,CAAC8E,EAAGC,EAAG1E,EAAG2E,EAAGC,KAElC,IAAIC,EA2CJ,OA5CAvF,EAAM,QAASH,EAAMsF,EAAGC,EAAG1E,EAAG2E,EAAGC,GAG7BT,EAAIO,GACNG,EAAM,GACGV,EAAInE,GACb6E,EAAM,KAAKH,QAAQO,OAAOP,EAAI,UACrBP,EAAIQ,GAEXE,EADQ,MAANH,EACI,KAAKA,KAAK1E,MAAMiF,MAAMP,MAAM1E,EAAI,QAEhC,KAAK0E,KAAK1E,MAAMiF,OAAOP,EAAI,UAE1BE,GACTtF,EAAM,kBAAmBsF,GAGrBC,EAFM,MAANH,EACQ,MAAN1E,EACI,KAAK0E,KAAK1E,KAAK2E,KAAKC,MACrBF,KAAK1E,MAAM2E,EAAI,MAEd,KAAKD,KAAK1E,KAAK2E,KAAKC,MACrBF,MAAM1E,EAAI,QAGX,KAAK0E,KAAK1E,KAAK2E,KAAKC,OACpBF,EAAI,YAGZpF,EAAM,SAGFuF,EAFM,MAANH,EACQ,MAAN1E,EACI,KAAK0E,KAAK1E,KAAK2E,IAClBM,MAAMP,KAAK1E,MAAM2E,EAAI,MAElB,KAAKD,KAAK1E,KAAK2E,IAClBM,MAAMP,MAAM1E,EAAI,QAGf,KAAK0E,KAAK1E,KAAK2E,OACfD,EAAI,WAIdpF,EAAM,eAAgBuF,GACfA,IACR,EAGGZ,EAAiB,CAAC9E,EAAM9C,KAC5BiD,EAAM,iBAAkBH,EAAM9C,GACvB8C,EAAKgC,MAAM,OAAOxD,KAAKwB,GACrB+F,EAAc/F,EAAM9C,KAC1BqF,KAAK,MAGJwD,EAAgB,CAAC/F,EAAM9C,KAC3B8C,EAAOA,EAAK/D,OACZ,MAAMuE,EAAItD,EAAQgD,MAAQO,EAAGC,EAAEsF,aAAevF,EAAGC,EAAEuF,QACnD,OAAOjG,EAAK+C,QAAQvC,GAAG,CAACkF,EAAKQ,EAAMX,EAAG1E,EAAG2E,EAAGC,KAC1CtF,EAAM,SAAUH,EAAM0F,EAAKQ,EAAMX,EAAG1E,EAAG2E,EAAGC,GAC1C,MAAMU,EAAKnB,EAAIO,GACTa,EAAKD,GAAMnB,EAAInE,GACfwF,EAAKD,GAAMpB,EAAIQ,GACfc,EAAOD,EA8Db,MA5Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAKvI,EAAQmE,kBAAoB,KAAO,GAEpC8E,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFvF,EAAI,GAEN2E,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACT1E,EAAI,EACJ2E,EAAI,IAEJ3E,GAAKA,EAAI,EACT2E,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAET1E,GAAKA,EAAI,GAIA,MAATqF,IACFT,EAAK,MAEPC,EAAM,GAAGQ,EAAOX,KAAK1E,KAAK2E,IAAIC,KACrBW,EACTV,EAAM,KAAKH,QAAQE,OAAQF,EAAI,UACtBc,IACTX,EAAM,KAAKH,KAAK1E,MAAM4E,MACjBF,MAAM1E,EAAI,SAGjBV,EAAM,gBAAiBuF,GAEhBA,IACR,EAKGX,EAAe,CAAC/E,EAAM9C,KAC1BiD,EAAM,eAAgBH,EAAM9C,GAErB8C,EAAK/D,OAAO8G,QAAQtC,EAAGC,EAAE6F,MAAO,KAGnC7C,EAAc,CAAC1D,EAAM9C,KACzBiD,EAAM,cAAeH,EAAM9C,GACpB8C,EAAK/D,OACT8G,QAAQtC,EAAGvD,EAAQmE,kBAAoBX,EAAE8F,QAAU9F,EAAE+F,MAAO,KAQ3DzD,EAAgB0D,GAAS,CAACC,EAC9BC,EAAMC,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,IA2Bd,GAzBLX,EADE5B,EAAI6B,GACC,GACE7B,EAAI8B,GACN,KAAKD,QAASH,EAAQ,KAAO,KAC3B1B,EAAI+B,GACN,KAAKF,KAAMC,MAAOJ,EAAQ,KAAO,KAC/BM,EACF,KAAKJ,IAEL,KAAKA,IAAOF,EAAQ,KAAO,QAIlCQ,EADElC,EAAImC,GACD,GACInC,EAAIoC,GACR,KAAKD,EAAK,UACNnC,EAAIqC,GACR,IAAIF,MAAOC,EAAK,QACZE,EACJ,KAAKH,KAAMC,KAAMC,KAAMC,IACnBZ,EACJ,IAAIS,KAAMC,MAAOC,EAAK,MAEtB,KAAKH,MAGajL,OAGrBqI,EAAU,CAACpF,EAAKqB,EAASrD,KAC7B,IAAK,IAAImH,EAAI,EAAGA,EAAInF,EAAI7C,OAAQgI,IAC9B,IAAKnF,EAAImF,GAAGpD,KAAKV,GACf,OAAO,EAIX,GAAIA,EAAQiH,WAAWnL,SAAWa,EAAQmE,kBAAmB,CAM3D,IAAK,IAAIgD,EAAI,EAAGA,EAAInF,EAAI7C,OAAQgI,IAE9B,GADAlE,EAAMjB,EAAImF,GAAGhE,QACTnB,EAAImF,GAAGhE,SAAWN,EAAWD,KAI7BZ,EAAImF,GAAGhE,OAAOmH,WAAWnL,OAAS,EAAG,CACvC,MAAMoL,EAAUvI,EAAImF,GAAGhE,OACvB,GAAIoH,EAAQC,QAAUnH,EAAQmH,OAC1BD,EAAQE,QAAUpH,EAAQoH,OAC1BF,EAAQG,QAAUrH,EAAQqH,MAC5B,OAAO,CAEX,CAIF,OAAO,CACT,CAEA,OAAO,E,iBC5fT,MAAMzH,EAAQ,EAAQ,OAChB,WAAE0H,EAAU,iBAAEC,GAAqB,EAAQ,KAC3C,GAAErH,EAAE,EAAEC,GAAM,EAAQ,MAEpBT,EAAe,EAAQ,OACvB,mBAAE8H,GAAuB,EAAQ,MACvC,MAAMhH,EACJtE,YAAa8D,EAASrD,GAGpB,GAFAA,EAAU+C,EAAa/C,GAEnBqD,aAAmBQ,EAAQ,CAC7B,GAAIR,EAAQL,UAAYhD,EAAQgD,OAC5BK,EAAQc,sBAAwBnE,EAAQmE,kBAC1C,OAAOd,EAEPA,EAAUA,EAAQA,OAEtB,MAAO,GAAuB,iBAAZA,EAChB,MAAM,IAAInD,UAAU,oBAAoBmD,KAG1C,GAAIA,EAAQlE,OAASwL,EACnB,MAAM,IAAIzK,UACR,0BAA0ByK,gBAI9B1H,EAAM,SAAUI,EAASrD,GACzBR,KAAKQ,QAAUA,EACfR,KAAKwD,QAAUhD,EAAQgD,MAGvBxD,KAAK2E,oBAAsBnE,EAAQmE,kBAEnC,MAAMR,EAAIN,EAAQtE,OAAO6E,MAAM5D,EAAQgD,MAAQO,EAAGC,EAAEsH,OAASvH,EAAGC,EAAEuH,OAElE,IAAKpH,EACH,MAAM,IAAIzD,UAAU,oBAAoBmD,KAU1C,GAPA7D,KAAKoF,IAAMvB,EAGX7D,KAAKgL,OAAS7G,EAAE,GAChBnE,KAAKiL,OAAS9G,EAAE,GAChBnE,KAAKkL,OAAS/G,EAAE,GAEZnE,KAAKgL,MAAQI,GAAoBpL,KAAKgL,MAAQ,EAChD,MAAM,IAAItK,UAAU,yBAGtB,GAAIV,KAAKiL,MAAQG,GAAoBpL,KAAKiL,MAAQ,EAChD,MAAM,IAAIvK,UAAU,yBAGtB,GAAIV,KAAKkL,MAAQE,GAAoBpL,KAAKkL,MAAQ,EAChD,MAAM,IAAIxK,UAAU,yBAIjByD,EAAE,GAGLnE,KAAK8K,WAAa3G,EAAE,GAAGmB,MAAM,KAAKxD,KAAKyG,IACrC,GAAI,WAAWhE,KAAKgE,GAAK,CACvB,MAAMiD,GAAOjD,EACb,GAAIiD,GAAO,GAAKA,EAAMJ,EACpB,OAAOI,CAEX,CACA,OAAOjD,KATTvI,KAAK8K,WAAa,GAapB9K,KAAKyL,MAAQtH,EAAE,GAAKA,EAAE,GAAGmB,MAAM,KAAO,GACtCtF,KAAKqF,QACP,CAEAA,SAKE,OAJArF,KAAK6D,QAAU,GAAG7D,KAAKgL,SAAShL,KAAKiL,SAASjL,KAAKkL,QAC/ClL,KAAK8K,WAAWnL,SAClBK,KAAK6D,SAAW,IAAI7D,KAAK8K,WAAWjF,KAAK,QAEpC7F,KAAK6D,OACd,CAEAS,WACE,OAAOtE,KAAK6D,OACd,CAEA6H,QAASC,GAEP,GADAlI,EAAM,iBAAkBzD,KAAK6D,QAAS7D,KAAKQ,QAASmL,KAC9CA,aAAiBtH,GAAS,CAC9B,GAAqB,iBAAVsH,GAAsBA,IAAU3L,KAAK6D,QAC9C,OAAO,EAET8H,EAAQ,IAAItH,EAAOsH,EAAO3L,KAAKQ,QACjC,CAEA,OAAImL,EAAM9H,UAAY7D,KAAK6D,QAClB,EAGF7D,KAAK4L,YAAYD,IAAU3L,KAAK6L,WAAWF,EACpD,CAEAC,YAAaD,GAKX,OAJMA,aAAiBtH,IACrBsH,EAAQ,IAAItH,EAAOsH,EAAO3L,KAAKQ,UAI/B6K,EAAmBrL,KAAKgL,MAAOW,EAAMX,QACrCK,EAAmBrL,KAAKiL,MAAOU,EAAMV,QACrCI,EAAmBrL,KAAKkL,MAAOS,EAAMT,MAEzC,CAEAW,WAAYF,GAMV,GALMA,aAAiBtH,IACrBsH,EAAQ,IAAItH,EAAOsH,EAAO3L,KAAKQ,UAI7BR,KAAK8K,WAAWnL,SAAWgM,EAAMb,WAAWnL,OAC9C,OAAQ,EACH,IAAKK,KAAK8K,WAAWnL,QAAUgM,EAAMb,WAAWnL,OACrD,OAAO,EACF,IAAKK,KAAK8K,WAAWnL,SAAWgM,EAAMb,WAAWnL,OACtD,OAAO,EAGT,IAAIgI,EAAI,EACR,EAAG,CACD,MAAMmE,EAAI9L,KAAK8K,WAAWnD,GACpBoE,EAAIJ,EAAMb,WAAWnD,GAE3B,GADAlE,EAAM,qBAAsBkE,EAAGmE,EAAGC,QACxB3L,IAAN0L,QAAyB1L,IAAN2L,EACrB,OAAO,EACF,QAAU3L,IAAN2L,EACT,OAAO,EACF,QAAU3L,IAAN0L,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAOV,EAAmBS,EAAGC,EAEjC,SAAWpE,EACb,CAEAqE,aAAcL,GACNA,aAAiBtH,IACrBsH,EAAQ,IAAItH,EAAOsH,EAAO3L,KAAKQ,UAGjC,IAAImH,EAAI,EACR,EAAG,CACD,MAAMmE,EAAI9L,KAAKyL,MAAM9D,GACfoE,EAAIJ,EAAMF,MAAM9D,GAEtB,GADAlE,EAAM,qBAAsBkE,EAAGmE,EAAGC,QACxB3L,IAAN0L,QAAyB1L,IAAN2L,EACrB,OAAO,EACF,QAAU3L,IAAN2L,EACT,OAAO,EACF,QAAU3L,IAAN0L,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAOV,EAAmBS,EAAGC,EAEjC,SAAWpE,EACb,CAIAsE,IAAKC,EAASC,GACZ,OAAQD,GACN,IAAK,WACHlM,KAAK8K,WAAWnL,OAAS,EACzBK,KAAKkL,MAAQ,EACblL,KAAKiL,MAAQ,EACbjL,KAAKgL,QACLhL,KAAKiM,IAAI,MAAOE,GAChB,MACF,IAAK,WACHnM,KAAK8K,WAAWnL,OAAS,EACzBK,KAAKkL,MAAQ,EACblL,KAAKiL,QACLjL,KAAKiM,IAAI,MAAOE,GAChB,MACF,IAAK,WAIHnM,KAAK8K,WAAWnL,OAAS,EACzBK,KAAKiM,IAAI,QAASE,GAClBnM,KAAKiM,IAAI,MAAOE,GAChB,MAGF,IAAK,aAC4B,IAA3BnM,KAAK8K,WAAWnL,QAClBK,KAAKiM,IAAI,QAASE,GAEpBnM,KAAKiM,IAAI,MAAOE,GAChB,MAEF,IAAK,QAMc,IAAfnM,KAAKiL,OACU,IAAfjL,KAAKkL,OACsB,IAA3BlL,KAAK8K,WAAWnL,QAEhBK,KAAKgL,QAEPhL,KAAKiL,MAAQ,EACbjL,KAAKkL,MAAQ,EACblL,KAAK8K,WAAa,GAClB,MACF,IAAK,QAKgB,IAAf9K,KAAKkL,OAA0C,IAA3BlL,KAAK8K,WAAWnL,QACtCK,KAAKiL,QAEPjL,KAAKkL,MAAQ,EACblL,KAAK8K,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3B9K,KAAK8K,WAAWnL,QAClBK,KAAKkL,QAEPlL,KAAK8K,WAAa,GAClB,MAGF,IAAK,MACH,GAA+B,IAA3B9K,KAAK8K,WAAWnL,OAClBK,KAAK8K,WAAa,CAAC,OACd,CACL,IAAInD,EAAI3H,KAAK8K,WAAWnL,OACxB,OAASgI,GAAK,GACsB,iBAAvB3H,KAAK8K,WAAWnD,KACzB3H,KAAK8K,WAAWnD,KAChBA,GAAK,IAGE,IAAPA,GAEF3H,KAAK8K,WAAWsB,KAAK,EAEzB,CACID,IAGEnM,KAAK8K,WAAW,KAAOqB,EACrBE,MAAMrM,KAAK8K,WAAW,MACxB9K,KAAK8K,WAAa,CAACqB,EAAY,IAGjCnM,KAAK8K,WAAa,CAACqB,EAAY,IAGnC,MAEF,QACE,MAAM,IAAIG,MAAM,+BAA+BJ,KAInD,OAFAlM,KAAKqF,SACLrF,KAAKoF,IAAMpF,KAAK6D,QACT7D,IACT,EAGFM,EAAOC,QAAU8D,C,iBC9RjB,MAAMX,EAAQ,EAAQ,MAKtBpD,EAAOC,QAJO,CAACsD,EAASrD,KACtB,MAAM+L,EAAI7I,EAAMG,EAAQtE,OAAO8G,QAAQ,SAAU,IAAK7F,GACtD,OAAO+L,EAAIA,EAAE1I,QAAU,K,iBCHzB,MAAM2I,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdC,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdC,EAAK,EAAQ,KACbC,EAAM,EAAQ,MA0CpBvM,EAAOC,QAxCK,CAACuL,EAAGgB,EAAIf,EAAGvI,KACrB,OAAQsJ,GACN,IAAK,MAKH,MAJiB,iBAANhB,IACTA,EAAIA,EAAEjI,SACS,iBAANkI,IACTA,EAAIA,EAAElI,SACDiI,IAAMC,EAEf,IAAK,MAKH,MAJiB,iBAAND,IACTA,EAAIA,EAAEjI,SACS,iBAANkI,IACTA,EAAIA,EAAElI,SACDiI,IAAMC,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAOS,EAAGV,EAAGC,EAAGvI,GAElB,IAAK,KACH,OAAOiJ,EAAIX,EAAGC,EAAGvI,GAEnB,IAAK,IACH,OAAOkJ,EAAGZ,EAAGC,EAAGvI,GAElB,IAAK,KACH,OAAOmJ,EAAIb,EAAGC,EAAGvI,GAEnB,IAAK,IACH,OAAOoJ,EAAGd,EAAGC,EAAGvI,GAElB,IAAK,KACH,OAAOqJ,EAAIf,EAAGC,EAAGvI,GAEnB,QACE,MAAM,IAAI9C,UAAU,qBAAqBoM,KAC7C,C,iBC7CF,MAAMzI,EAAS,EAAQ,MACjBX,EAAQ,EAAQ,OAChB,GAACK,EAAE,EAAEC,GAAK,EAAQ,MAgDxB1D,EAAOC,QA9CQ,CAACsD,EAASrD,KACvB,GAAIqD,aAAmBQ,EACrB,OAAOR,EAOT,GAJuB,iBAAZA,IACTA,EAAUkJ,OAAOlJ,IAGI,iBAAZA,EACT,OAAO,KAKT,IAAIO,EAAQ,KACZ,IAHA5D,EAAUA,GAAW,CAAC,GAGTwM,IAEN,CASL,IAAIrL,EACJ,MAAQA,EAAOoC,EAAGC,EAAEiJ,WAAWC,KAAKrJ,OAC9BO,GAASA,EAAM+I,MAAQ/I,EAAM,GAAGzE,SAAWkE,EAAQlE,SAElDyE,GACCzC,EAAKwL,MAAQxL,EAAK,GAAGhC,SAAWyE,EAAM+I,MAAQ/I,EAAM,GAAGzE,SAC3DyE,EAAQzC,GAEVoC,EAAGC,EAAEiJ,WAAWG,UAAYzL,EAAKwL,MAAQxL,EAAK,GAAGhC,OAASgC,EAAK,GAAGhC,OAGpEoE,EAAGC,EAAEiJ,WAAWG,WAAa,CAC/B,MAtBEhJ,EAAQP,EAAQO,MAAML,EAAGC,EAAEqJ,SAwB7B,OAAc,OAAVjJ,EACK,KAEFV,EAAM,GAAGU,EAAM,MAAMA,EAAM,IAAM,OAAOA,EAAM,IAAM,MAAO5D,EAAO,C,iBChD3E,MAAM6D,EAAS,EAAQ,MAMvB/D,EAAOC,QALc,CAACuL,EAAGC,EAAGvI,KAC1B,MAAM8J,EAAW,IAAIjJ,EAAOyH,EAAGtI,GACzB+J,EAAW,IAAIlJ,EAAO0H,EAAGvI,GAC/B,OAAO8J,EAAS5B,QAAQ6B,IAAaD,EAAStB,aAAauB,EAAQ,C,iBCJrE,MAAM7B,EAAU,EAAQ,MAExBpL,EAAOC,QADc,CAACuL,EAAGC,IAAML,EAAQI,EAAGC,GAAG,E,iBCD7C,MAAM1H,EAAS,EAAQ,MAIvB/D,EAAOC,QAHS,CAACuL,EAAGC,EAAGvI,IACrB,IAAIa,EAAOyH,EAAGtI,GAAOkI,QAAQ,IAAIrH,EAAO0H,EAAGvI,G,iBCF7C,MAAME,EAAQ,EAAQ,MAChB8I,EAAK,EAAQ,MAqBnBlM,EAAOC,QAnBM,CAACiN,EAAUC,KACtB,GAAIjB,EAAGgB,EAAUC,GACf,OAAO,KACF,CACL,MAAMC,EAAKhK,EAAM8J,GACXG,EAAKjK,EAAM+J,GACXG,EAASF,EAAG5C,WAAWnL,QAAUgO,EAAG7C,WAAWnL,OAC/CkO,EAASD,EAAS,MAAQ,GAC1BE,EAAgBF,EAAS,aAAe,GAC9C,IAAK,MAAMjP,KAAO+O,EAChB,IAAY,UAAR/O,GAA2B,UAARA,GAA2B,UAARA,IACpC+O,EAAG/O,KAASgP,EAAGhP,GACjB,OAAOkP,EAASlP,EAItB,OAAOmP,CACT,E,iBCpBF,MAAMpC,EAAU,EAAQ,MAExBpL,EAAOC,QADI,CAACuL,EAAGC,EAAGvI,IAAmC,IAAzBkI,EAAQI,EAAGC,EAAGvI,E,iBCD1C,MAAMkI,EAAU,EAAQ,MAExBpL,EAAOC,QADI,CAACuL,EAAGC,EAAGvI,IAAUkI,EAAQI,EAAGC,EAAGvI,GAAS,C,iBCDnD,MAAMkI,EAAU,EAAQ,MAExBpL,EAAOC,QADK,CAACuL,EAAGC,EAAGvI,IAAUkI,EAAQI,EAAGC,EAAGvI,IAAU,C,gBCDrD,MAAMa,EAAS,EAAQ,MAcvB/D,EAAOC,QAZK,CAACsD,EAASqI,EAAS1L,EAAS2L,KACb,iBAAd,IACTA,EAAa3L,EACbA,OAAUJ,GAGZ,IACE,OAAO,IAAIiE,EAAOR,EAASrD,GAASyL,IAAIC,EAASC,GAAYtI,OAG/D,CAFE,MAAOW,GACP,OAAO,IACT,E,gBCZF,MAAMkH,EAAU,EAAQ,MAExBpL,EAAOC,QADI,CAACuL,EAAGC,EAAGvI,IAAUkI,EAAQI,EAAGC,EAAGvI,GAAS,C,iBCDnD,MAAMkI,EAAU,EAAQ,MAExBpL,EAAOC,QADK,CAACuL,EAAGC,EAAGvI,IAAUkI,EAAQI,EAAGC,EAAGvI,IAAU,C,iBCDrD,MAAMa,EAAS,EAAQ,MAEvB/D,EAAOC,QADO,CAACuL,EAAGtI,IAAU,IAAIa,EAAOyH,EAAGtI,GAAOwH,K,iBCDjD,MAAM3G,EAAS,EAAQ,MAEvB/D,EAAOC,QADO,CAACuL,EAAGtI,IAAU,IAAIa,EAAOyH,EAAGtI,GAAOyH,K,iBCDjD,MAAMS,EAAU,EAAQ,MAExBpL,EAAOC,QADK,CAACuL,EAAGC,EAAGvI,IAAmC,IAAzBkI,EAAQI,EAAGC,EAAGvI,E,iBCD3C,MAAM,WAAC2H,GAAc,EAAQ,KACvB,GAAEpH,EAAE,EAAEC,GAAM,EAAQ,MACpBK,EAAS,EAAQ,MAEjBd,EAAe,EAAQ,MA4B7BjD,EAAOC,QA3BO,CAACsD,EAASrD,KAGtB,GAFAA,EAAU+C,EAAa/C,GAEnBqD,aAAmBQ,EACrB,OAAOR,EAGT,GAAuB,iBAAZA,EACT,OAAO,KAGT,GAAIA,EAAQlE,OAASwL,EACnB,OAAO,KAIT,KADU3K,EAAQgD,MAAQO,EAAGC,EAAEsH,OAASvH,EAAGC,EAAEuH,OACtChH,KAAKV,GACV,OAAO,KAGT,IACE,OAAO,IAAIQ,EAAOR,EAASrD,EAG7B,CAFE,MAAOgE,GACP,OAAO,IACT,E,iBC7BF,MAAMH,EAAS,EAAQ,MAEvB/D,EAAOC,QADO,CAACuL,EAAGtI,IAAU,IAAIa,EAAOyH,EAAGtI,GAAO0H,K,iBCDjD,MAAMxH,EAAQ,EAAQ,MAKtBpD,EAAOC,QAJY,CAACsD,EAASrD,KAC3B,MAAMuN,EAASrK,EAAMG,EAASrD,GAC9B,OAAQuN,GAAUA,EAAOjD,WAAWnL,OAAUoO,EAAOjD,WAAa,K,iBCHpE,MAAMY,EAAU,EAAQ,MAExBpL,EAAOC,QADU,CAACuL,EAAGC,EAAGvI,IAAUkI,EAAQK,EAAGD,EAAGtI,E,iBCDhD,MAAMwI,EAAe,EAAQ,MAE7B1L,EAAOC,QADO,CAACyN,EAAMxK,IAAUwK,EAAKC,MAAK,CAACnC,EAAGC,IAAMC,EAAaD,EAAGD,EAAGtI,I,iBCDtE,MAAMoB,EAAQ,EAAQ,MAStBtE,EAAOC,QARW,CAACsD,EAASsB,EAAO3E,KACjC,IACE2E,EAAQ,IAAIP,EAAMO,EAAO3E,EAG3B,CAFE,MAAOgE,GACP,OAAO,CACT,CACA,OAAOW,EAAMZ,KAAKV,EAAO,C,iBCP3B,MAAMmI,EAAe,EAAQ,MAE7B1L,EAAOC,QADM,CAACyN,EAAMxK,IAAUwK,EAAKC,MAAK,CAACnC,EAAGC,IAAMC,EAAaF,EAAGC,EAAGvI,I,gBCDrE,MAAME,EAAQ,EAAQ,MAKtBpD,EAAOC,QAJO,CAACsD,EAASrD,KACtB,MAAM2B,EAAIuB,EAAMG,EAASrD,GACzB,OAAO2B,EAAIA,EAAE0B,QAAU,K,iBCFzB,MAAMqK,EAAa,EAAQ,MAC3B5N,EAAOC,QAAU,CACfwD,GAAImK,EAAWnK,GACfoK,IAAKD,EAAWC,IAChBC,OAAQF,EAAWlK,EACnBqK,oBAAqB,0BACrBhK,OAAQ,EAAQ,MAChBgH,mBAAoB,2BACpBiD,oBAAqB,4BACrB5K,MAAO,EAAQ,MACf6K,MAAO,EAAQ,KACfC,MAAO,EAAQ,MACfvC,IAAK,EAAQ,KACb3M,KAAM,EAAQ,MACd0L,MAAO,EAAQ,MACfC,MAAO,EAAQ,MACfC,MAAO,EAAQ,MACfJ,WAAY,EAAQ,MACpBY,QAAS,EAAQ,MACjB+C,SAAU,EAAQ,MAClBC,aAAc,EAAQ,MACtB1C,aAAc,EAAQ,MACtBiC,KAAM,EAAQ,MACdU,MAAO,EAAQ,MACfjC,GAAI,EAAQ,MACZE,GAAI,EAAQ,KACZJ,GAAI,EAAQ,MACZC,IAAK,EAAQ,MACbE,IAAK,EAAQ,MACbE,IAAK,EAAQ,MACbpI,IAAK,EAAQ,MACbmK,OAAQ,EAAQ,MAChBvL,WAAY,EAAQ,MACpBuB,MAAO,EAAQ,MACfiK,UAAW,EAAQ,MACnBC,cAAe,EAAQ,MACvBC,cAAe,EAAQ,MACvBC,cAAe,EAAQ,MACvBC,WAAY,EAAQ,IACpBC,WAAY,EAAQ,MACpBC,QAAS,EAAQ,MACjBC,IAAK,EAAQ,MACbC,IAAK,EAAQ,MACb3K,WAAY,EAAQ,MACpB4K,cAAe,EAAQ,MACvBC,OAAQ,EAAQ,M,SC5ClB,MAGMnE,EAAmBoE,OAAOpE,kBACH,iBAK7B9K,EAAOC,QAAU,CACf8N,oBAV0B,QAW1BlD,WATiB,IAUjBC,mBACAqE,0BANgC,G,WCTlC,MAAMhM,EACe,iBAAZiM,SACPA,QAAQC,KACRD,QAAQC,IAAIC,YACZ,cAAcrL,KAAKmL,QAAQC,IAAIC,YAC7B,IAAIC,IAASC,QAAQC,MAAM,YAAaF,GACxC,OAEJvP,EAAOC,QAAUkD,C,WCRjB,MAAMuM,EAAU,WACV3E,EAAqB,CAACS,EAAGC,KAC7B,MAAMkE,EAAOD,EAAQzL,KAAKuH,GACpBoE,EAAOF,EAAQzL,KAAKwH,GAO1B,OALIkE,GAAQC,IACVpE,GAAKA,EACLC,GAAKA,GAGAD,IAAMC,EAAI,EACZkE,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClBnE,EAAIC,GAAK,EACT,GAKNzL,EAAOC,QAAU,CACf8K,qBACAiD,oBAJ0B,CAACxC,EAAGC,IAAMV,EAAmBU,EAAGD,G,WCf5D,MAAMqE,EAAO,CAAC,oBAAqB,QAAS,OAQ5C7P,EAAOC,QAPcC,GAClBA,EACoB,iBAAZA,EAAuB,CAAEgD,OAAO,GACvC2M,EAAK9N,QAAON,GAAKvB,EAAQuB,KAAIqO,QAAO,CAAC5P,EAASuB,KAC9CvB,EAAQuB,IAAK,EACNvB,IACN,CAAC,GALO,CAAC,C,iBCJd,MAAM,0BAAEiP,GAA8B,EAAQ,IACxChM,EAAQ,EAAQ,MAIhBM,GAHNxD,EAAUD,EAAOC,QAAU,CAAC,GAGTwD,GAAK,GAClBoK,EAAM5N,EAAQ4N,IAAM,GACpBnK,EAAIzD,EAAQyD,EAAI,CAAC,EACvB,IAAIqM,EAAI,EAER,MAAMC,EAAc,CAACC,EAAMxR,EAAOyR,KAChC,MAAMrD,EAAQkD,IACd5M,EAAM0J,EAAOpO,GACbiF,EAAEuM,GAAQpD,EACVgB,EAAIhB,GAASpO,EACbgF,EAAGoJ,GAAS,IAAIsD,OAAO1R,EAAOyR,EAAW,SAAMpQ,EAAS,EAS1DkQ,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAe,IAAInC,EAAInK,EAAE0M,0BACdvC,EAAInK,EAAE0M,0BACNvC,EAAInK,EAAE0M,uBAE7BJ,EAAY,mBAAoB,IAAInC,EAAInK,EAAE2M,+BACdxC,EAAInK,EAAE2M,+BACNxC,EAAInK,EAAE2M,4BAKlCL,EAAY,uBAAwB,MAAMnC,EAAInK,EAAE0M,sBAC5CvC,EAAInK,EAAE4M,0BAEVN,EAAY,4BAA6B,MAAMnC,EAAInK,EAAE2M,2BACjDxC,EAAInK,EAAE4M,0BAMVN,EAAY,aAAc,QAAQnC,EAAInK,EAAE6M,8BAC/B1C,EAAInK,EAAE6M,6BAEfP,EAAY,kBAAmB,SAASnC,EAAInK,EAAE8M,mCACrC3C,EAAInK,EAAE8M,kCAKfR,EAAY,kBAAmB,iBAM/BA,EAAY,QAAS,UAAUnC,EAAInK,EAAE+M,yBAC5B5C,EAAInK,EAAE+M,wBAWfT,EAAY,YAAa,KAAKnC,EAAInK,EAAEgN,eACjC7C,EAAInK,EAAEiN,eACP9C,EAAInK,EAAEkN,WAERZ,EAAY,OAAQ,IAAInC,EAAInK,EAAEmN,eAK9Bb,EAAY,aAAc,WAAWnC,EAAInK,EAAEoN,oBACxCjD,EAAInK,EAAEqN,oBACPlD,EAAInK,EAAEkN,WAERZ,EAAY,QAAS,IAAInC,EAAInK,EAAEsN,gBAE/BhB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAyB,GAAGnC,EAAInK,EAAE2M,mCAC9CL,EAAY,mBAAoB,GAAGnC,EAAInK,EAAE0M,8BAEzCJ,EAAY,cAAe,YAAYnC,EAAInK,EAAEuN,4BAChBpD,EAAInK,EAAEuN,4BACNpD,EAAInK,EAAEuN,wBACVpD,EAAInK,EAAEiN,gBACV9C,EAAInK,EAAEkN,eAG3BZ,EAAY,mBAAoB,YAAYnC,EAAInK,EAAEwN,iCAChBrD,EAAInK,EAAEwN,iCACNrD,EAAInK,EAAEwN,6BACVrD,EAAInK,EAAEqN,qBACVlD,EAAInK,EAAEkN,eAGhCZ,EAAY,SAAU,IAAInC,EAAInK,EAAEyN,YAAYtD,EAAInK,EAAE0N,iBAClDpB,EAAY,cAAe,IAAInC,EAAInK,EAAEyN,YAAYtD,EAAInK,EAAE2N,sBAIvDrB,EAAY,SAAU,oBACIb,mBACIA,qBACAA,qBAE9Ba,EAAY,YAAanC,EAAInK,EAAEqJ,SAAS,GAIxCiD,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASnC,EAAInK,EAAE4N,kBAAkB,GAC1DrR,EAAQmG,iBAAmB,MAE3B4J,EAAY,QAAS,IAAInC,EAAInK,EAAE4N,aAAazD,EAAInK,EAAE0N,iBAClDpB,EAAY,aAAc,IAAInC,EAAInK,EAAE4N,aAAazD,EAAInK,EAAE2N,sBAIvDrB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASnC,EAAInK,EAAE6N,kBAAkB,GAC1DtR,EAAQqG,iBAAmB,MAE3B0J,EAAY,QAAS,IAAInC,EAAInK,EAAE6N,aAAa1D,EAAInK,EAAE0N,iBAClDpB,EAAY,aAAc,IAAInC,EAAInK,EAAE6N,aAAa1D,EAAInK,EAAE2N,sBAGvDrB,EAAY,kBAAmB,IAAInC,EAAInK,EAAEyN,aAAatD,EAAInK,EAAEsN,oBAC5DhB,EAAY,aAAc,IAAInC,EAAInK,EAAEyN,aAAatD,EAAInK,EAAEmN,mBAIvDb,EAAY,iBAAkB,SAASnC,EAAInK,EAAEyN,aACrCtD,EAAInK,EAAEsN,eAAenD,EAAInK,EAAE0N,iBAAiB,GACpDnR,EAAQiG,sBAAwB,SAMhC8J,EAAY,cAAe,SAASnC,EAAInK,EAAE0N,0BAEnBvD,EAAInK,EAAE0N,sBAG7BpB,EAAY,mBAAoB,SAASnC,EAAInK,EAAE2N,+BAEnBxD,EAAInK,EAAE2N,2BAIlCrB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,yBACpBA,EAAY,UAAW,0B,iBCpLvB,MAAMnB,EAAU,EAAQ,MAExB7O,EAAOC,QADK,CAACsD,EAASsB,EAAO3E,IAAY2O,EAAQtL,EAASsB,EAAO,IAAK3E,E,iBCFtE,MAAMoE,EAAQ,EAAQ,MAMtBtE,EAAOC,QALY,CAACuR,EAAIC,EAAIvR,KAC1BsR,EAAK,IAAIlN,EAAMkN,EAAItR,GACnBuR,EAAK,IAAInN,EAAMmN,EAAIvR,GACZsR,EAAGpN,WAAWqN,G,iBCJvB,MAAM5C,EAAU,EAAQ,MAGxB7O,EAAOC,QADK,CAACsD,EAASsB,EAAO3E,IAAY2O,EAAQtL,EAASsB,EAAO,IAAK3E,E,iBCFtE,MAAM6D,EAAS,EAAQ,MACjBO,EAAQ,EAAQ,MAuBtBtE,EAAOC,QArBe,CAACyR,EAAU7M,EAAO3E,KACtC,IAAIC,EAAM,KACNwR,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAItN,EAAMO,EAAO3E,EAG9B,CAFE,MAAOgE,GACP,OAAO,IACT,CAWA,OAVAwN,EAASzQ,SAASY,IACZ+P,EAAS3N,KAAKpC,KAEX1B,IAA6B,IAAtBwR,EAAMvG,QAAQvJ,KAExB1B,EAAM0B,EACN8P,EAAQ,IAAI5N,EAAO5D,EAAKD,IAE5B,IAEKC,E,iBCtBT,MAAM4D,EAAS,EAAQ,MACjBO,EAAQ,EAAQ,MAsBtBtE,EAAOC,QArBe,CAACyR,EAAU7M,EAAO3E,KACtC,IAAI2R,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAItN,EAAMO,EAAO3E,EAG9B,CAFE,MAAOgE,GACP,OAAO,IACT,CAWA,OAVAwN,EAASzQ,SAASY,IACZ+P,EAAS3N,KAAKpC,KAEXgQ,GAA4B,IAArBC,EAAM1G,QAAQvJ,KAExBgQ,EAAMhQ,EACNiQ,EAAQ,IAAI/N,EAAO8N,EAAK3R,IAE5B,IAEK2R,E,eCrBT,MAAM9N,EAAS,EAAQ,MACjBO,EAAQ,EAAQ,MAChB8H,EAAK,EAAQ,MAyDnBpM,EAAOC,QAvDY,CAAC4E,EAAO3B,KACzB2B,EAAQ,IAAIP,EAAMO,EAAO3B,GAEzB,IAAI6O,EAAS,IAAIhO,EAAO,SACxB,GAAIc,EAAMZ,KAAK8N,GACb,OAAOA,EAIT,GADAA,EAAS,IAAIhO,EAAO,WAChBc,EAAMZ,KAAK8N,GACb,OAAOA,EAGTA,EAAS,KACT,IAAK,IAAI1K,EAAI,EAAGA,EAAIxC,EAAM3C,IAAI7C,SAAUgI,EAAG,CACzC,MAAME,EAAc1C,EAAM3C,IAAImF,GAE9B,IAAI2K,EAAS,KACbzK,EAAYtG,SAASgR,IAEnB,MAAMC,EAAU,IAAInO,EAAOkO,EAAW5O,OAAOE,SAC7C,OAAQ0O,EAAW3O,UACjB,IAAK,IAC+B,IAA9B4O,EAAQ1H,WAAWnL,OACrB6S,EAAQtH,QAERsH,EAAQ1H,WAAWsB,KAAK,GAE1BoG,EAAQpN,IAAMoN,EAAQnN,SAExB,IAAK,GACL,IAAK,KACEiN,IAAU5F,EAAG8F,EAASF,KACzBA,EAASE,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAIlG,MAAM,yBAAyBiG,EAAW3O,YACxD,KAEE0O,GAAYD,IAAU3F,EAAG2F,EAAQC,KACnCD,EAASC,EACb,CAEA,OAAID,GAAUlN,EAAMZ,KAAK8N,GAChBA,EAGF,K,iBCzDT,MAAMhO,EAAS,EAAQ,MACjBhB,EAAa,EAAQ,OACrB,IAACD,GAAOC,EACRuB,EAAQ,EAAQ,MAChBiK,EAAY,EAAQ,MACpBnC,EAAK,EAAQ,MACbE,EAAK,EAAQ,KACbC,EAAM,EAAQ,MACdF,EAAM,EAAQ,MAuEpBrM,EAAOC,QArES,CAACsD,EAASsB,EAAOsN,EAAMjS,KAIrC,IAAIkS,EAAMC,EAAOC,EAAMtP,EAAMuP,EAC7B,OAJAhP,EAAU,IAAIQ,EAAOR,EAASrD,GAC9B2E,EAAQ,IAAIP,EAAMO,EAAO3E,GAGjBiS,GACN,IAAK,IACHC,EAAOhG,EACPiG,EAAQ9F,EACR+F,EAAOhG,EACPtJ,EAAO,IACPuP,EAAQ,KACR,MACF,IAAK,IACHH,EAAO9F,EACP+F,EAAQhG,EACRiG,EAAOlG,EACPpJ,EAAO,IACPuP,EAAQ,KACR,MACF,QACE,MAAM,IAAInS,UAAU,yCAIxB,GAAImO,EAAUhL,EAASsB,EAAO3E,GAC5B,OAAO,EAMT,IAAK,IAAImH,EAAI,EAAGA,EAAIxC,EAAM3C,IAAI7C,SAAUgI,EAAG,CACzC,MAAME,EAAc1C,EAAM3C,IAAImF,GAE9B,IAAImL,EAAO,KACPC,EAAM,KAiBV,GAfAlL,EAAYtG,SAASgR,IACfA,EAAW5O,SAAWP,IACxBmP,EAAa,IAAIlP,EAAW,YAE9ByP,EAAOA,GAAQP,EACfQ,EAAMA,GAAOR,EACTG,EAAKH,EAAW5O,OAAQmP,EAAKnP,OAAQnD,GACvCsS,EAAOP,EACEK,EAAKL,EAAW5O,OAAQoP,EAAIpP,OAAQnD,KAC7CuS,EAAMR,EACR,IAKEO,EAAKlP,WAAaN,GAAQwP,EAAKlP,WAAaiP,EAC9C,OAAO,EAKT,KAAME,EAAInP,UAAYmP,EAAInP,WAAaN,IACnCqP,EAAM9O,EAASkP,EAAIpP,QACrB,OAAO,EACF,GAAIoP,EAAInP,WAAaiP,GAASD,EAAK/O,EAASkP,EAAIpP,QACrD,OAAO,CAEX,CACA,OAAO,E,iBCzET,MAAMkL,EAAY,EAAQ,MACpBnD,EAAU,EAAQ,MACxBpL,EAAOC,QAAU,CAACyR,EAAU7M,EAAO3E,KACjC,MAAMgC,EAAM,GACZ,IAAI2P,EAAM,KACNzS,EAAO,KACX,MAAMyC,EAAI6P,EAAS/D,MAAK,CAACnC,EAAGC,IAAML,EAAQI,EAAGC,EAAGvL,KAChD,IAAK,MAAMqD,KAAW1B,EACH0M,EAAUhL,EAASsB,EAAO3E,IAEzCd,EAAOmE,EACFsO,IACHA,EAAMtO,KAEJnE,GACF8C,EAAI4J,KAAK,CAAC+F,EAAKzS,IAEjBA,EAAO,KACPyS,EAAM,MAGNA,GACF3P,EAAI4J,KAAK,CAAC+F,EAAK,OAEjB,MAAMa,EAAS,GACf,IAAK,MAAOb,EAAK1R,KAAQ+B,EACnB2P,IAAQ1R,EACVuS,EAAO5G,KAAK+F,GACJ1R,GAAO0R,IAAQhQ,EAAE,GAEjB1B,EAED0R,IAAQhQ,EAAE,GACjB6Q,EAAO5G,KAAK,KAAK3L,KAEjBuS,EAAO5G,KAAK,GAAG+F,OAAS1R,KAJxBuS,EAAO5G,KAAK,KAAK+F,KAFjBa,EAAO5G,KAAK,KAQhB,MAAM6G,EAAaD,EAAOnN,KAAK,QACzBqN,EAAgC,iBAAd/N,EAAMC,IAAmBD,EAAMC,IAAM2H,OAAO5H,GACpE,OAAO8N,EAAWtT,OAASuT,EAASvT,OAASsT,EAAa9N,E,iBC1C5D,MAAMP,EAAQ,EAAQ,OAChB,IAAExB,GAAQ,EAAQ,MAClByL,EAAY,EAAQ,MACpBnD,EAAU,EAAQ,MAqDlByH,EAAe,CAACC,EAAKC,EAAK7S,KAC9B,GAAI4S,IAAQC,EACV,OAAO,EAET,GAAmB,IAAfD,EAAIzT,QAAgByT,EAAI,GAAGzP,SAAWP,EACxC,OAAsB,IAAfiQ,EAAI1T,QAAgB0T,EAAI,GAAG1P,SAAWP,EAE/C,MAAMkQ,EAAQ,IAAIC,IAClB,IAAI7G,EAAIE,EAaJ4G,EAyBAC,EAAQC,EACRC,EAAUC,EAtCd,IAAK,MAAMpO,KAAK4N,EACK,MAAf5N,EAAE5B,UAAmC,OAAf4B,EAAE5B,SAC1B8I,EAAKmH,EAASnH,EAAIlH,EAAGhF,GACC,MAAfgF,EAAE5B,UAAmC,OAAf4B,EAAE5B,SAC/BgJ,EAAKkH,EAAQlH,EAAIpH,EAAGhF,GAEpB8S,EAAMS,IAAIvO,EAAE7B,QAGhB,GAAI2P,EAAMpM,KAAO,EACf,OAAO,KAGT,GAAIwF,GAAME,EAAI,CAEZ,GADA4G,EAAW9H,EAAQgB,EAAG/I,OAAQiJ,EAAGjJ,OAAQnD,GACrCgT,EAAW,EACb,OAAO,KACJ,GAAiB,IAAbA,IAAmC,OAAhB9G,EAAG9I,UAAqC,OAAhBgJ,EAAGhJ,UACrD,OAAO,IACX,CAGA,IAAK,MAAM4I,KAAM8G,EAAO,CACtB,GAAI5G,IAAOmC,EAAUrC,EAAIO,OAAOL,GAAKlM,GACnC,OAAO,KAET,GAAIoM,IAAOiC,EAAUrC,EAAIO,OAAOH,GAAKpM,GACnC,OAAO,KAET,IAAK,MAAMgF,KAAK6N,EACd,IAAKxE,EAAUrC,EAAIO,OAAOvH,GAAIhF,GAC5B,OAAO,EAGX,OAAO,CACT,CAIA,IAAK,MAAMgF,KAAK6N,EAAK,CAGnB,GAFAO,EAAWA,GAA2B,MAAfpO,EAAE5B,UAAmC,OAAf4B,EAAE5B,SAC/C+P,EAAWA,GAA2B,MAAfnO,EAAE5B,UAAmC,OAAf4B,EAAE5B,SAC3C8I,EACF,GAAmB,MAAflH,EAAE5B,UAAmC,OAAf4B,EAAE5B,UAE1B,GADA6P,EAASI,EAASnH,EAAIlH,EAAGhF,GACrBiT,IAAWjO,GAAKiO,IAAW/G,EAC7B,OAAO,OACJ,GAAoB,OAAhBA,EAAG9I,WAAsBiL,EAAUnC,EAAG/I,OAAQoJ,OAAOvH,GAAIhF,GAClE,OAAO,EAEX,GAAIoM,EACF,GAAmB,MAAfpH,EAAE5B,UAAmC,OAAf4B,EAAE5B,UAE1B,GADA8P,EAAQI,EAAQlH,EAAIpH,EAAGhF,GACnBkT,IAAUlO,GAAKkO,IAAU9G,EAC3B,OAAO,OACJ,GAAoB,OAAhBA,EAAGhJ,WAAsBiL,EAAUjC,EAAGjJ,OAAQoJ,OAAOvH,GAAIhF,GAClE,OAAO,EAEX,IAAKgF,EAAE5B,WAAagJ,GAAMF,IAAoB,IAAb8G,EAC/B,OAAO,CACX,CAKA,QAAI9G,GAAMiH,IAAa/G,GAAmB,IAAb4G,GAGzB5G,GAAMgH,IAAalH,GAAmB,IAAb8G,EAGtB,EAIHK,EAAW,CAAC/H,EAAGC,EAAGvL,KACtB,IAAKsL,EACH,OAAOC,EACT,MAAMzI,EAAOoI,EAAQI,EAAEnI,OAAQoI,EAAEpI,OAAQnD,GACzC,OAAO8C,EAAO,EAAIwI,EACdxI,EAAO,GACQ,MAAfyI,EAAEnI,UAAmC,OAAfkI,EAAElI,SADbmI,EAEXD,GAIAgI,EAAU,CAAChI,EAAGC,EAAGvL,KACrB,IAAKsL,EACH,OAAOC,EACT,MAAMzI,EAAOoI,EAAQI,EAAEnI,OAAQoI,EAAEpI,OAAQnD,GACzC,OAAO8C,EAAO,EAAIwI,EACdxI,EAAO,GACQ,MAAfyI,EAAEnI,UAAmC,OAAfkI,EAAElI,SADbmI,EAEXD,GAGNxL,EAAOC,QAlIQ,CAAC6S,EAAKC,EAAK7S,KACxB,GAAI4S,IAAQC,EACV,OAAO,EAETD,EAAM,IAAIxO,EAAMwO,EAAK5S,GACrB6S,EAAM,IAAIzO,EAAMyO,EAAK7S,GACrB,IAAIwT,GAAa,EAEjBC,EAAO,IAAK,MAAMC,KAAad,EAAI5Q,IAAK,CACtC,IAAK,MAAM2R,KAAad,EAAI7Q,IAAK,CAC/B,MAAM4R,EAAQjB,EAAae,EAAWC,EAAW3T,GAEjD,GADAwT,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,CACb,CAKA,GAAID,EACF,OAAO,CACX,CACA,OAAO,E,iBCrDT,MAAMpP,EAAQ,EAAQ,MAOtBtE,EAAOC,QAJe,CAAC4E,EAAO3E,IAC5B,IAAIoE,EAAMO,EAAO3E,GAASgC,IACvBV,KAAIwB,GAAQA,EAAKxB,KAAI0D,GAAKA,EAAEzG,QAAO8G,KAAK,KAAKtG,OAAO+F,MAAM,M,iBCL/D,MAAMV,EAAQ,EAAQ,MAUtBtE,EAAOC,QATY,CAAC4E,EAAO3E,KACzB,IAGE,OAAO,IAAIoE,EAAMO,EAAO3E,GAAS2E,OAAS,GAG5C,CAFE,MAAOX,GACP,OAAO,IACT,E,wBCPFlE,EAAOC,QAAU,SAAU3C,GACzBA,EAAQyW,UAAUvW,OAAOwW,UAAY,YACnC,IAAK,IAAI9U,EAASQ,KAAK0B,KAAMlC,EAAQA,EAASA,EAAOmC,WAC7CnC,EAAOT,KAEjB,CACF,C,8BCDA,SAASnB,EAASoQ,GAChB,IAAItP,EAAOsB,KASX,GARMtB,aAAgBd,IACpBc,EAAO,IAAId,GAGbc,EAAKe,KAAO,KACZf,EAAKgD,KAAO,KACZhD,EAAKiB,OAAS,EAEVqO,GAAgC,mBAAjBA,EAAKzM,QACtByM,EAAKzM,SAAQ,SAAUoB,GACrBjE,EAAK0N,KAAKzJ,EACZ,SACK,GAAI4R,UAAU5U,OAAS,EAC5B,IAAK,IAAIgI,EAAI,EAAG1E,EAAIsR,UAAU5U,OAAQgI,EAAI1E,EAAG0E,IAC3CjJ,EAAK0N,KAAKmI,UAAU5M,IAIxB,OAAOjJ,CACT,CAoWA,SAAS0N,EAAM1N,EAAMiE,GACnBjE,EAAKe,KAAO,IAAI+U,EAAK7R,EAAMjE,EAAKe,KAAM,KAAMf,GACvCA,EAAKgD,OACRhD,EAAKgD,KAAOhD,EAAKe,MAEnBf,EAAKiB,QACP,CAEA,SAASiD,EAASlE,EAAMiE,GACtBjE,EAAKgD,KAAO,IAAI8S,EAAK7R,EAAM,KAAMjE,EAAKgD,KAAMhD,GACvCA,EAAKe,OACRf,EAAKe,KAAOf,EAAKgD,MAEnBhD,EAAKiB,QACP,CAEA,SAAS6U,EAAMzV,EAAOW,EAAMiC,EAAMqM,GAChC,KAAMhO,gBAAgBwU,GACpB,OAAO,IAAIA,EAAKzV,EAAOW,EAAMiC,EAAMqM,GAGrChO,KAAKgO,KAAOA,EACZhO,KAAKjB,MAAQA,EAETW,GACFA,EAAKiC,KAAO3B,KACZA,KAAKN,KAAOA,GAEZM,KAAKN,KAAO,KAGViC,GACFA,EAAKjC,KAAOM,KACZA,KAAK2B,KAAOA,GAEZ3B,KAAK2B,KAAO,IAEhB,CAnaArB,EAAOC,QAAU3C,EAEjBA,EAAQ4W,KAAOA,EACf5W,EAAQ6W,OAAS7W,EAyBjBA,EAAQyW,UAAUxU,WAAa,SAAUhB,GACvC,GAAIA,EAAKmP,OAAShO,KAChB,MAAM,IAAIsM,MAAM,oDAGlB,IAAI3K,EAAO9C,EAAK8C,KACZjC,EAAOb,EAAKa,KAsBhB,OApBIiC,IACFA,EAAKjC,KAAOA,GAGVA,IACFA,EAAKiC,KAAOA,GAGV9C,IAASmB,KAAK0B,OAChB1B,KAAK0B,KAAOC,GAEV9C,IAASmB,KAAKP,OAChBO,KAAKP,KAAOC,GAGdb,EAAKmP,KAAKrO,SACVd,EAAK8C,KAAO,KACZ9C,EAAKa,KAAO,KACZb,EAAKmP,KAAO,KAELrM,CACT,EAEA/D,EAAQyW,UAAUjV,YAAc,SAAUP,GACxC,GAAIA,IAASmB,KAAK0B,KAAlB,CAII7C,EAAKmP,MACPnP,EAAKmP,KAAKnO,WAAWhB,GAGvB,IAAI6C,EAAO1B,KAAK0B,KAChB7C,EAAKmP,KAAOhO,KACZnB,EAAK8C,KAAOD,EACRA,IACFA,EAAKhC,KAAOb,GAGdmB,KAAK0B,KAAO7C,EACPmB,KAAKP,OACRO,KAAKP,KAAOZ,GAEdmB,KAAKL,QAjBL,CAkBF,EAEA/B,EAAQyW,UAAUK,SAAW,SAAU7V,GACrC,GAAIA,IAASmB,KAAKP,KAAlB,CAIIZ,EAAKmP,MACPnP,EAAKmP,KAAKnO,WAAWhB,GAGvB,IAAIY,EAAOO,KAAKP,KAChBZ,EAAKmP,KAAOhO,KACZnB,EAAKa,KAAOD,EACRA,IACFA,EAAKkC,KAAO9C,GAGdmB,KAAKP,KAAOZ,EACPmB,KAAK0B,OACR1B,KAAK0B,KAAO7C,GAEdmB,KAAKL,QAjBL,CAkBF,EAEA/B,EAAQyW,UAAUjI,KAAO,WACvB,IAAK,IAAIzE,EAAI,EAAG1E,EAAIsR,UAAU5U,OAAQgI,EAAI1E,EAAG0E,IAC3CyE,EAAKpM,KAAMuU,UAAU5M,IAEvB,OAAO3H,KAAKL,MACd,EAEA/B,EAAQyW,UAAUzR,QAAU,WAC1B,IAAK,IAAI+E,EAAI,EAAG1E,EAAIsR,UAAU5U,OAAQgI,EAAI1E,EAAG0E,IAC3C/E,EAAQ5C,KAAMuU,UAAU5M,IAE1B,OAAO3H,KAAKL,MACd,EAEA/B,EAAQyW,UAAUvR,IAAM,WACtB,GAAK9C,KAAKP,KAAV,CAIA,IAAIkV,EAAM3U,KAAKP,KAAKV,MAQpB,OAPAiB,KAAKP,KAAOO,KAAKP,KAAKC,KAClBM,KAAKP,KACPO,KAAKP,KAAKkC,KAAO,KAEjB3B,KAAK0B,KAAO,KAEd1B,KAAKL,SACEgV,CAVP,CAWF,EAEA/W,EAAQyW,UAAUO,MAAQ,WACxB,GAAK5U,KAAK0B,KAAV,CAIA,IAAIiT,EAAM3U,KAAK0B,KAAK3C,MAQpB,OAPAiB,KAAK0B,KAAO1B,KAAK0B,KAAKC,KAClB3B,KAAK0B,KACP1B,KAAK0B,KAAKhC,KAAO,KAEjBM,KAAKP,KAAO,KAEdO,KAAKL,SACEgV,CAVP,CAWF,EAEA/W,EAAQyW,UAAU9S,QAAU,SAAUrB,EAAIC,GACxCA,EAAQA,GAASH,KACjB,IAAK,IAAIR,EAASQ,KAAK0B,KAAMiG,EAAI,EAAc,OAAXnI,EAAiBmI,IACnDzH,EAAGG,KAAKF,EAAOX,EAAOT,MAAO4I,EAAG3H,MAChCR,EAASA,EAAOmC,IAEpB,EAEA/D,EAAQyW,UAAUQ,eAAiB,SAAU3U,EAAIC,GAC/CA,EAAQA,GAASH,KACjB,IAAK,IAAIR,EAASQ,KAAKP,KAAMkI,EAAI3H,KAAKL,OAAS,EAAc,OAAXH,EAAiBmI,IACjEzH,EAAGG,KAAKF,EAAOX,EAAOT,MAAO4I,EAAG3H,MAChCR,EAASA,EAAOE,IAEpB,EAEA9B,EAAQyW,UAAU5V,IAAM,SAAUqW,GAChC,IAAK,IAAInN,EAAI,EAAGnI,EAASQ,KAAK0B,KAAiB,OAAXlC,GAAmBmI,EAAImN,EAAGnN,IAE5DnI,EAASA,EAAOmC,KAElB,GAAIgG,IAAMmN,GAAgB,OAAXtV,EACb,OAAOA,EAAOT,KAElB,EAEAnB,EAAQyW,UAAUU,WAAa,SAAUD,GACvC,IAAK,IAAInN,EAAI,EAAGnI,EAASQ,KAAKP,KAAiB,OAAXD,GAAmBmI,EAAImN,EAAGnN,IAE5DnI,EAASA,EAAOE,KAElB,GAAIiI,IAAMmN,GAAgB,OAAXtV,EACb,OAAOA,EAAOT,KAElB,EAEAnB,EAAQyW,UAAUvS,IAAM,SAAU5B,EAAIC,GACpCA,EAAQA,GAASH,KAEjB,IADA,IAAI2U,EAAM,IAAI/W,EACL4B,EAASQ,KAAK0B,KAAiB,OAAXlC,GAC3BmV,EAAIvI,KAAKlM,EAAGG,KAAKF,EAAOX,EAAOT,MAAOiB,OACtCR,EAASA,EAAOmC,KAElB,OAAOgT,CACT,EAEA/W,EAAQyW,UAAUW,WAAa,SAAU9U,EAAIC,GAC3CA,EAAQA,GAASH,KAEjB,IADA,IAAI2U,EAAM,IAAI/W,EACL4B,EAASQ,KAAKP,KAAiB,OAAXD,GAC3BmV,EAAIvI,KAAKlM,EAAGG,KAAKF,EAAOX,EAAOT,MAAOiB,OACtCR,EAASA,EAAOE,KAElB,OAAOiV,CACT,EAEA/W,EAAQyW,UAAUjE,OAAS,SAAUlQ,EAAI+U,GACvC,IAAIC,EACA1V,EAASQ,KAAK0B,KAClB,GAAI6S,UAAU5U,OAAS,EACrBuV,EAAMD,MACD,KAAIjV,KAAK0B,KAId,MAAM,IAAIhB,UAAU,8CAHpBlB,EAASQ,KAAK0B,KAAKC,KACnBuT,EAAMlV,KAAK0B,KAAK3C,KAGlB,CAEA,IAAK,IAAI4I,EAAI,EAAc,OAAXnI,EAAiBmI,IAC/BuN,EAAMhV,EAAGgV,EAAK1V,EAAOT,MAAO4I,GAC5BnI,EAASA,EAAOmC,KAGlB,OAAOuT,CACT,EAEAtX,EAAQyW,UAAUc,cAAgB,SAAUjV,EAAI+U,GAC9C,IAAIC,EACA1V,EAASQ,KAAKP,KAClB,GAAI8U,UAAU5U,OAAS,EACrBuV,EAAMD,MACD,KAAIjV,KAAKP,KAId,MAAM,IAAIiB,UAAU,8CAHpBlB,EAASQ,KAAKP,KAAKC,KACnBwV,EAAMlV,KAAKP,KAAKV,KAGlB,CAEA,IAAK,IAAI4I,EAAI3H,KAAKL,OAAS,EAAc,OAAXH,EAAiBmI,IAC7CuN,EAAMhV,EAAGgV,EAAK1V,EAAOT,MAAO4I,GAC5BnI,EAASA,EAAOE,KAGlB,OAAOwV,CACT,EAEAtX,EAAQyW,UAAUxS,QAAU,WAE1B,IADA,IAAImB,EAAM,IAAIoS,MAAMpV,KAAKL,QAChBgI,EAAI,EAAGnI,EAASQ,KAAK0B,KAAiB,OAAXlC,EAAiBmI,IACnD3E,EAAI2E,GAAKnI,EAAOT,MAChBS,EAASA,EAAOmC,KAElB,OAAOqB,CACT,EAEApF,EAAQyW,UAAUgB,eAAiB,WAEjC,IADA,IAAIrS,EAAM,IAAIoS,MAAMpV,KAAKL,QAChBgI,EAAI,EAAGnI,EAASQ,KAAKP,KAAiB,OAAXD,EAAiBmI,IACnD3E,EAAI2E,GAAKnI,EAAOT,MAChBS,EAASA,EAAOE,KAElB,OAAOsD,CACT,EAEApF,EAAQyW,UAAUtM,MAAQ,SAAUmC,EAAMM,IACxCA,EAAKA,GAAMxK,KAAKL,QACP,IACP6K,GAAMxK,KAAKL,SAEbuK,EAAOA,GAAQ,GACJ,IACTA,GAAQlK,KAAKL,QAEf,IAAIqJ,EAAM,IAAIpL,EACd,GAAI4M,EAAKN,GAAQM,EAAK,EACpB,OAAOxB,EAELkB,EAAO,IACTA,EAAO,GAELM,EAAKxK,KAAKL,SACZ6K,EAAKxK,KAAKL,QAEZ,IAAK,IAAIgI,EAAI,EAAGnI,EAASQ,KAAK0B,KAAiB,OAAXlC,GAAmBmI,EAAIuC,EAAMvC,IAC/DnI,EAASA,EAAOmC,KAElB,KAAkB,OAAXnC,GAAmBmI,EAAI6C,EAAI7C,IAAKnI,EAASA,EAAOmC,KACrDqH,EAAIoD,KAAK5M,EAAOT,OAElB,OAAOiK,CACT,EAEApL,EAAQyW,UAAUiB,aAAe,SAAUpL,EAAMM,IAC/CA,EAAKA,GAAMxK,KAAKL,QACP,IACP6K,GAAMxK,KAAKL,SAEbuK,EAAOA,GAAQ,GACJ,IACTA,GAAQlK,KAAKL,QAEf,IAAIqJ,EAAM,IAAIpL,EACd,GAAI4M,EAAKN,GAAQM,EAAK,EACpB,OAAOxB,EAELkB,EAAO,IACTA,EAAO,GAELM,EAAKxK,KAAKL,SACZ6K,EAAKxK,KAAKL,QAEZ,IAAK,IAAIgI,EAAI3H,KAAKL,OAAQH,EAASQ,KAAKP,KAAiB,OAAXD,GAAmBmI,EAAI6C,EAAI7C,IACvEnI,EAASA,EAAOE,KAElB,KAAkB,OAAXF,GAAmBmI,EAAIuC,EAAMvC,IAAKnI,EAASA,EAAOE,KACvDsJ,EAAIoD,KAAK5M,EAAOT,OAElB,OAAOiK,CACT,EAEApL,EAAQyW,UAAUkB,OAAS,SAAUC,EAAOC,KAAgBC,GACtDF,EAAQxV,KAAKL,SACf6V,EAAQxV,KAAKL,OAAS,GAEpB6V,EAAQ,IACVA,EAAQxV,KAAKL,OAAS6V,GAGxB,IAAK,IAAI7N,EAAI,EAAGnI,EAASQ,KAAK0B,KAAiB,OAAXlC,GAAmBmI,EAAI6N,EAAO7N,IAChEnI,EAASA,EAAOmC,KAGlB,IAgCejD,EAAMG,EAAME,EACvB4W,EAjCA3M,EAAM,GACV,IAASrB,EAAI,EAAGnI,GAAUmI,EAAI8N,EAAa9N,IACzCqB,EAAIoD,KAAK5M,EAAOT,OAChBS,EAASQ,KAAKH,WAAWL,GAU3B,IARe,OAAXA,IACFA,EAASQ,KAAKP,MAGZD,IAAWQ,KAAK0B,MAAQlC,IAAWQ,KAAKP,OAC1CD,EAASA,EAAOE,MAGTiI,EAAI,EAAGA,EAAI+N,EAAM/V,OAAQgI,IAmBnBjJ,EAlBGsB,KAkBGnB,EAlBGW,EAkBGT,EAlBK2W,EAAM/N,GAmBlCgO,SAIkB,QAJlBA,EAAW9W,IAASH,EAAKgD,KAC3B,IAAI8S,EAAKzV,EAAO,KAAMF,EAAMH,GAC5B,IAAI8V,EAAKzV,EAAOF,EAAMA,EAAK8C,KAAMjD,IAEtBiD,OACXjD,EAAKe,KAAOkW,GAEQ,OAAlBA,EAASjW,OACXhB,EAAKgD,KAAOiU,GAGdjX,EAAKiB,SA9BHH,EAgCKmW,EA9BP,OAAO3M,CACT,EAEApL,EAAQyW,UAAUuB,QAAU,WAG1B,IAFA,IAAIlU,EAAO1B,KAAK0B,KACZjC,EAAOO,KAAKP,KACPD,EAASkC,EAAiB,OAAXlC,EAAiBA,EAASA,EAAOE,KAAM,CAC7D,IAAIoJ,EAAItJ,EAAOE,KACfF,EAAOE,KAAOF,EAAOmC,KACrBnC,EAAOmC,KAAOmH,CAChB,CAGA,OAFA9I,KAAK0B,KAAOjC,EACZO,KAAKP,KAAOiC,EACL1B,IACT,EA0DA,IAEE,EAAQ,KAAR,CAAyBpC,EACb,CAAZ,MAAO4G,GAAK,C,wBCzadlE,EAAOC,QAAUsV,C,wBCAjBvV,EAAOC,QAAUuV,C,wBCAjBxV,EAAOC,QAAUwV,C,wBCAjBzV,EAAOC,QAAUyV,C,uBCAjB1V,EAAOC,QAAU0V,C,wBCAjB3V,EAAOC,QAAU2V,C,wBCAjB5V,EAAOC,QAAU4V,C,wBCAjB7V,EAAOC,QAAU6V,C,wBCAjB9V,EAAOC,QAAU8V,C,wBCAjB/V,EAAOC,QAAU+V,C,wBCAjBhW,EAAOC,QAAUgW,C,wBCAjBjW,EAAOC,QAAUiW,C,wBCAjBlW,EAAOC,QAAUkW,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBxW,IAAjByW,EACH,OAAOA,EAAatW,QAGrB,IAAID,EAASoW,EAAyBE,GAAY,CAGjDrW,QAAS,CAAC,GAOX,OAHAuW,EAAoBF,GAAUtW,EAAQA,EAAOC,QAASoW,GAG/CrW,EAAOC,OACf,CCrBAoW,EAAoB7B,EAAKxU,IACxB,IAAIyW,EAASzW,GAAUA,EAAO0W,WAC7B,IAAO1W,EAAiB,QACxB,IAAM,EAEP,OADAqW,EAAoBM,EAAEF,EAAQ,CAAEjL,EAAGiL,IAC5BA,CAAM,ECLdJ,EAAoBM,EAAI,CAAC1W,EAAS2W,KACjC,IAAI,IAAIvY,KAAOuY,EACXP,EAAoBQ,EAAED,EAAYvY,KAASgY,EAAoBQ,EAAE5W,EAAS5B,IAC5EoH,OAAOqR,eAAe7W,EAAS5B,EAAK,CAAE0Y,YAAY,EAAM5Y,IAAKyY,EAAWvY,IAE1E,ECNDgY,EAAoBQ,EAAI,CAACG,EAAKC,IAAUxR,OAAOsO,UAAUmD,eAAenX,KAAKiX,EAAKC,GCClFZ,EAAoB7S,EAAKvD,IACH,oBAAXzC,QAA0BA,OAAO2Z,aAC1C1R,OAAOqR,eAAe7W,EAASzC,OAAO2Z,YAAa,CAAE1Y,MAAO,WAE7DgH,OAAOqR,eAAe7W,EAAS,aAAc,CAAExB,OAAO,GAAO,E,0JCJvD,MAQM2Y,EAAe,IACfC,EAAiB,IACjBC,EAAY,IACZC,EAAc,IACdC,EAAgB,IAChBC,EAAgB,IAChBC,EAAc,IAqBdC,EAAmB,CAC9B,CAAEC,IAAK,EAAGC,KAAM,kBAChB,CAAED,IAAK,EAAGC,KAAM,eAChB,CAAED,IAAK,EAAGC,KAAM,WAChB,CAAED,IAAK,EAAGC,KAAM,WAChB,CAAED,IAAK,EAAGC,KAAM,QAChB,CAAED,IAAK,EAAGC,KAAM,aAMLC,EAAuB,e,ICsJ7B,EAUA,G,SAVKC,GAAAA,EACVC,MAAQ,QADED,EAEVE,KAAO,OAFGF,EAGVG,YAAc,cAHJH,EAIVI,MAAQ,QAJEJ,EAKVK,QAAU,UALAL,EAMVM,KAAO,OANGN,EAOVO,WAAa,Y,EAPHP,IAAAA,EAAAA,CAAAA,I,SAUAQ,GAAAA,EACVC,SAAW,WADDD,EAEVE,OAAS,SAFCF,EAGVG,QAAU,S,EAHAH,IAAAA,EAAAA,CAAAA,IAsML,MAAMI,UAA6BC,EAAAA,qBC3WnC,SAASC,EAAYC,GAM1B,OALAxQ,IAAAA,QAAUwQ,GAAQzW,IAChBA,EAAKA,KAAOA,EAAK4N,KACjB5N,EAAK4N,KAhBF,SAAwBA,EAAc5R,GAG3C,MACM0a,EAkBR,SAAwBC,GACtB,MAAMC,EAAS,GACf,IAAIC,GAAS,EACTC,GAAW,EAEXC,EAAQ,GAsBZ,OApBA9Q,IAAAA,QAAU0Q,GAAWK,IACJ,MAAXA,GAAkBF,EACpBC,GAASC,EACW,MAAXA,GAAkBH,EAC3BA,GAAS,EACW,MAAXG,GAAmBH,EAER,MAAXG,GAAmBH,EAER,MAAXG,GAAmBH,EAZX,MAcRG,GAA4BH,GAAWC,EAIhDC,GAASC,GAHTJ,EAAOnN,KAAKsN,GACZA,EAAQ,IAHRD,GAAW,EAFXA,GAAW,EAFXD,GAAS,CAUX,IAGFD,EAAOnN,KAAKsN,GACLH,CACT,CA9CqBK,CADIjb,EAAIkb,UAAUlb,EAAImb,QAAQ,KAAO,EAAGnb,EAAIob,YAAY,OAI3E,IAAK,IAAIpS,EAAI0R,EAAW1Z,OAAQgI,GAAK,EAAGA,IACtC4I,EAAOA,EAAKlK,QAAQ,IAAMsB,EAAG0R,EAAW1R,EAAI,IAE9C,OAAO4I,CACT,CAKgByJ,CAAerX,EAAKA,KAAMA,EAAKsX,MACpCtX,KAEFyW,CACT,CDoWaH,EACJiB,KAAO,oBCrUhB,MAAMC,EAAgB,oBAMf,SAASC,EAAazX,EAAM0X,EAAQC,GACzC,IAAIC,EAAWD,EAAgB3X,EAAK6X,IAAM7X,EAAK4N,KAC/C,MAAMkK,EAAcF,EAASnW,MAAM+V,GAgCnC,OA/BAvR,IAAAA,QAAU6R,GAAcC,IACtB,MAAMC,EAAc/R,IAAAA,OAASyR,GAASlW,IACpC,GAAIA,EAAEyW,OAAQ,CACZ,GAAIN,EAAe,CAGjB,IAAIO,GAAc,EAMlB,OALAjS,IAAAA,QAAUjG,EAAKmY,OAAQxY,IACjBA,EAAEsY,SAAWzW,EAAEyW,SACjBC,GAAc,EAChB,IAEKA,CACT,CAEE,OAAO1W,EAAEyW,SAAWjY,EAAKiY,MAE7B,CAEE,OAAO,CACT,IAGIG,EAAYnS,IAAAA,KAAO+R,EAAa,CAAED,MAAOA,IAC/C,GAAIK,GAAaA,EAAUhc,MAAO,CAChC,MAAMic,EAAcD,EAAUhc,MACxBkc,EAAc,IAAIxK,OAQ9B,SAAqBiK,GAEnB,OADQA,EAAMrU,QAAQ,KAAM,MAE9B,CAXqC6U,CAAYR,IAC3CH,EAAWA,EAASlU,QAAQ4U,EAAaD,EAC3C,KAGKT,CACT,CAOO,SAASY,EAAyBC,GACvC,IAAIC,EACJ,MAAMC,EAAQ,GAGd1S,IAAAA,KA6CK,SAA4BwS,GACjC,MAAMG,EAAe,2BACrB,IAAIjW,EAEJ,GAYF,SAA0B8V,GAExB,MADsB,WACD7W,KAAK6W,EAC5B,CAfMI,CAAiBJ,GAAQ,CAC3B,MAAMjU,EAASiU,EAAMhX,MAAMmX,GAC3BjW,EAAQsD,IAAAA,IAAMzB,GAASsU,GACd7S,IAAAA,KAAO6S,EAAM,OAExB,MACEnW,EAAQ8V,EAAM9V,MAAM,KAGtB,OAAOA,CACT,CA3DSoW,CAAmBN,IAASK,IAEpB,MAATA,IACFA,EAAO,QAETH,EAAMlP,KAAKqP,EAAK,IAElB,MAAME,EAAW/S,IAAAA,UAAY,CAAC,QAAS,OAAQ,MAAO,QAAS0S,GAO/D,OALqB,IAAjBA,EAAM3b,QAAiC,SAAjBgc,EAASC,MAEjCD,EAASC,IAAM,IAGTN,EAAM3b,QACZ,KAAK,EACH0b,EAAYhD,EAAmBC,MAC/B,MACF,KAAK,EACH+C,EAAYhD,EAAmBE,KAC/B,MACF,KAAK,EACH8C,EAAYhD,EAAmBG,YAC/B,MACF,KAAK,EACH6C,EAAYhD,EAAmBM,KAYnC,MARqC,CACnC0C,YACAQ,MAAOF,EAASE,OAAS,GACzBC,KAAMH,EAASG,MAAQ,GACvBC,YAAaJ,EAASC,KAAO,GAC7BjZ,KAAMgZ,EAAShZ,MAAQ,GAI3B,CA6BO,MAAMqZ,EAAe,sBAErB,SAASC,EAAQC,GACtB,OAAOF,EAAazX,KAAK2X,EAC3B,CAcO,SAASC,EAAmBhX,GACjC,MAAMiX,EAAUjX,EAAMqF,GAAGlL,KAAK6F,EAAM+E,MAC9BmS,EAASC,KAAKC,MAAMH,EAAU,KAC9BI,EAAeC,EAAAA,UAAAA,aAAuBL,EAAU,KACtD,MAAO,CACLM,WAAY,CAAEvE,KAAMiE,EAASrd,MAAOqd,GACpCO,UAAW,CAAExE,KAAMkE,EAAQtd,MAAOsd,GAClCO,QAAS,CAAEzE,KAAMqE,EAAczd,MAAOyd,GACtCK,eAAgB,CAAE1E,KAAM3S,EAAwBzG,MAAOyG,GAE3D,CAEO,SAASsX,EAAWZ,GACzB,MAAMa,EAAUb,EAAI9X,MAAM4X,GACpBgB,EAAUD,EAAQ,GAClBE,EAAuB,KAAfF,EAAQ,GAAYA,EAAQ,QAAK3c,EAC/C,OAAO,IAAIqQ,OAAOuM,EAASC,EAC7B,CAIO,SAASC,EAAYne,GAC1B,OAAOA,EAAMsH,QAAQ,wBAAyB,OAChD,CAKO,SAAS8W,EAAkBC,GAChC,MAAMC,EAOD,SAAiCD,GACtC,MACME,EADkB,4BACepQ,KAAKkQ,GAC5C,OAAKE,IAAmBF,GAAaE,EAAe3d,OAAS,IAAM2d,EAAe,GACzE,GAEFA,EAAe,IAAMA,EAAe3d,OAAS,EAAI2d,EAAe,GAAK,IAC9E,CAd6BC,CAAwBH,GACnD,OAAIC,EACKG,EAAcH,GAEhB,CACT,CAYO,SAASG,EAAcJ,GAC5B,MACMK,EADkB,2BACsBvQ,KAAKkQ,GAEnD,OADiBM,IAAAA,SAAgBlO,OAAOiO,EAAe,IAAKA,EAAe,IAC3DE,SAClB,CA6FO,SAASC,EAASC,GACvB,OAAO,SAAU1W,GACf,IAAK,IAAIQ,EAAI,EAAGA,EAAIkW,EAAWle,OAAQgI,IACrCR,EAAS0W,EAAWlW,GAAGtH,KAAKL,KAAMmH,GAEpC,OAAOA,CACT,CACF,CAuBO,SAAS2W,EAAa1C,GAC3B,OAAOA,EAAM/U,QAAQ,OAAQ,KAAK9G,MACpC,CAuBO,SAASwe,EAAUC,GACxB,IAAKA,EACH,MAAO,GAGT,IAAIC,EAAcrV,IAAAA,IAAMoV,EAAO1Y,MAAM,MAAO4Y,GAAQA,EAAI3e,SAKxD,OAJA0e,EAAOrV,IAAAA,IAAMqV,GAAOC,I,IAEJC,EAA4BA,EAD1C,MAAMA,EAAWD,EAAI5Y,MAAM,KAC3B,MAAO,CAAE4Y,IAAgB,QAAXC,EAAAA,EAAS,UAATA,IAAAA,OAAAA,EAAAA,EAAa5e,OAAQR,MAAkB,QAAXof,EAAAA,EAAS,UAATA,IAAAA,OAAAA,EAAAA,EAAa5e,OAAQ,IAE1D0e,CACT,CAGO,SAASG,EAAaJ,GAC3B,MAAMK,EAAsB,CAAEH,IAAK,GAAInf,MAAO,IACxCuf,EAAWN,EAAOlE,QAAQ,KAOhC,OANIwE,EAAW,GACbD,EAAQH,IAAMF,EAAOjW,MAAM,EAAGuW,GAAU/e,OACxC8e,EAAQtf,MAAQif,EAAOjW,MAAMuU,KAAKnK,IAAImM,EAAW,EAAGN,EAAOre,SAASJ,QAEpE8e,EAAQH,IAAMF,EAAOze,OAEhB8e,CACT,CAEO,SAASE,EAAgBva,GAC9B,OAAOA,EAAEjF,MAAQ,GAAGiF,EAAEka,QAAQla,EAAEjF,QAAUiF,EAAEka,GAC9C,CAEO,SAASM,EAAUrX,GACxB,OAAOA,GAAU,EACnB,CAEA,MA6BMsX,EA7BqB,CACzB,IAAK,UACL1S,EAAG,UACH2S,IAAK,MACLC,EAAG,QACHC,IAAK,SAELC,OAAQ,SACRC,IAAK,MACLC,KAAM,OACNC,GAAI,QACJC,EAAG,OACHC,EAAG,UACHC,IAAK,SACLC,IAAK,OAgBDC,EAbuB,MAC3B,MAAMC,EAAQ,CAAC,EACTC,GAAaC,EAAAA,EAAAA,mBACnB,IAAK,MAAMC,KAAYF,EACrB,IAAK,MAAMG,KAAYD,EAASE,QAAS,CACvC,MAAMC,EAAOF,EAAS3gB,MACtBugB,EAAMM,GAAQA,CAChB,CAEF,OAAON,CAAK,EAIYO,GAEnB,SAASC,EAAkBC,GAChC,IAAIH,EAAOnB,EAASsB,GAIpB,OAHKH,IACHA,EAAOP,EAAkBU,IAEpBH,CACT,CAqCO,SAASI,EAAQhS,EAAW8G,EAAW/S,GAC5C,GAAa,OAATiM,GAAiBA,EAAKrO,OAAS,GAAKoC,EAAIiM,EAAKrO,OAAS,GAAKoC,EAAI,GAAK+S,EAAI9G,EAAKrO,OAAS,GAAKmV,EAAI,EACjG,OAAO9G,EAGT,MAAMiS,EAAe,IAAI7K,MAAMpH,EAAKrO,QACpC,IAAK,IAAIgI,EAAI,EAAGA,EAAIqG,EAAKrO,OAAQgI,IAE7BsY,EAAQtY,GADNA,IAAMmN,EACK9G,EAAKjM,GACT4F,IAAM5F,EACFiM,EAAK8G,GAEL9G,EAAKrG,GAGtB,OAAOsY,CACT,CChiBA,kB,8aA8HO,SAASC,EAAQC,GAGtB,OAFAA,EAAOC,aAAeD,EAAOC,cAAgB,cAnHxC,SAA0BD,GAC/B,QAAKA,EAAOE,MAAwB,IAAhBF,EAAOE,MAA8B,IAAhBF,EAAOE,QAE3CF,EAAOG,YAAcH,EAAOI,YAAcJ,EAAOK,oBAAuBL,EAAOrE,MAAQqE,EAAOrE,KAAKA,YAC7E1b,IAAvB+f,EAAOxd,KAAKN,aACWjC,IAAvB+f,EAAOrE,KAAKzZ,OASlB,CAuGMoe,CADJN,EAkBF,SAAwBA,GAItB,OAHIA,EAAOtE,OAASzG,MAAMsL,QAAQP,EAAOtE,SACvCsE,EAAOtE,MAAQ,CAAExZ,OAAQ,KAEpB8d,CACT,CAvBWQ,CAAeR,IApGnB,SAAgCA,GAMrC,OALAA,EAAOtE,MAAMxZ,OAA+B,MAAtB8d,EAAOtE,MAAMtL,KAAe,OAAS4P,EAAOtE,MAAMtL,KACxE4P,EAAOrE,KAAKzZ,OAA8B,MAArB8d,EAAOrE,KAAKvL,KAAeqQ,EAAeT,EAAOG,YAAcH,EAAOrE,KAAKvL,KAChG4P,EAAOpE,YAAY1Z,OAAqC,MAA5B8d,EAAOpE,YAAYxL,KAAe,GAAK4P,EAAOpE,YAAYxL,KACtF4P,EAAOxd,KAAKN,OAA8B,QAArB8d,EAAOxd,KAAK4N,KAAiBqQ,EAAeT,EAAOI,YAAcJ,EAAOxd,KAAK4N,KAClG4P,EAAOzF,MAAMrY,OAAgC,MAAvB8d,EAAOzF,MAAMA,MAAgBkG,EAAeT,EAAOU,aAAeV,EAAOzF,MAAMA,MAC9FyF,CACT,CA+FWW,CAAuBX,IA7FlC,SAA8BA,GAC5B,GAAIA,EAAOY,UACT,IAAK,MAAMC,KAAKb,EAAOY,UACjBC,EAAEC,KAAsB,cAAfD,EAAEC,IAAI1Q,OACjByQ,EAAEC,IAAI1Q,KAAO,aAIrB,CAuFE2Q,CAAqBf,GArFvB,SAA0BA,G,IAaFA,OAZG/f,IAArB+f,EAAO9E,YACW,YAAhB8E,EAAOE,KAETF,EAAO9E,UAAY7V,OACMpF,IAAhB+f,EAAOE,OAChBF,EAAO9E,UAAY8E,EAAOE,YACnBF,EAAOE,OAKc,iBAArBF,EAAO9E,YAChB8E,EAAO9E,UAA6B,QAAhB8E,EAAAA,EAAO9E,iBAAP8E,IAAAA,OAAD,IAA8B7b,WAErD,CAuEE6c,CAAiBhB,GArEnB,SAAoBA,GACdA,EAAO9E,YAAc7V,GAAqB2a,EAAOiB,cACnDjB,EAAOiB,YAAc,OAEzB,CAkEEC,CAAWlB,GAhEb,SAA4BA,G,IACtBA,EAAiC,cAAnB,QAAdA,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBmB,gBAClBnB,EAAO3f,QAAQ8gB,aAAe,WAElC,CA6DEC,CAAmBpB,GA3DrB,SAA6BA,G,IAGrBA,EACsCA,EAHvCA,EAAO9B,UACV8B,EAAO9B,QAAU,CAAEhc,OAAQ,KACL,QAAlB8d,EAAAA,EAAOpE,mBAAPoE,IAAAA,OAAAA,EAAAA,EAAoB9d,UACtB8d,EAAO9B,QAAQhc,OAAS,gBAAkC,QAAlB8d,EAAAA,EAAOpE,mBAAPoE,IAAAA,OAAAA,EAAAA,EAAoB9d,UAGlE,CAqDEmf,CAAoBrB,GAnDtB,SAA4BA,G,IACtBA,EACmBA,GADD,QAAlBA,EAAAA,EAAOsB,mBAAPtB,IAAAA,OAAAA,EAAAA,EAAoBuB,YACtBvB,EAAOsB,YAAgC,QAAlBtB,EAAAA,EAAOsB,mBAAPtB,IAAAA,OAAAA,EAAAA,EAAoBuB,SAE7C,CAgDEC,CAAmBxB,GA9CrB,SAA6BA,G,IACvBA,EAIAA,EAH2BA,EAINA,GALN,QAAfA,EAAAA,EAAOyB,gBAAPzB,IAAAA,OAAAA,EAAAA,EAAiB0B,eACnB1B,EAAO3f,QAAQqhB,YAA6B,QAAf1B,EAAAA,EAAOyB,gBAAPzB,IAAAA,OAAAA,EAAAA,EAAiB0B,mBACvC1B,EAAOyB,SAASC,cAEN,QAAf1B,EAAAA,EAAOyB,gBAAPzB,IAAAA,OAAAA,EAAAA,EAAiB2B,SACnB3B,EAAO3f,QAAQshB,MAAuB,QAAf3B,EAAAA,EAAOyB,gBAAPzB,IAAAA,OAAAA,EAAAA,EAAiB2B,aACjC3B,EAAOyB,SAASE,MAE3B,CAsCEC,CAAoB5B,GApCtB,SAAsCA,GAChCA,EAAO6B,QAAU,KAGI,MAArB7B,EAAO9E,WACT8E,EAAO9E,UAAY7V,EACnB2a,EAAO8B,gBAAkB,SACK,MAArB9B,EAAO9E,WAChB8E,EAAO9E,UAAY7V,EACnB2a,EAAO8B,gBAAkB,YACK,MAArB9B,EAAO9E,YAChB8E,EAAO9E,UAAY7V,GAEvB,CAwBE0c,CAA6B/B,GAtB/B,SAAiCA,G,IAI3BA,EAHAA,EAAO6B,QAAU,KAGjB7B,SAAe,QAAfA,EAAAA,EAAQ3f,eAAR2f,IAAAA,OAAAA,EAAAA,EAAiB0B,eACnB1B,EAAO3f,QAAQ2hB,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG9f,QAAQF,GAAMA,GAAKge,EAAO3f,QAAQqhB,cAErF,CAgBEO,CAAwBjC,GAExBA,EAAO6B,OA1IsB,GA2ItB7B,EACT,CASA,SAASS,EAAe1E,GACtB,OAAIA,EACK,IAAMA,EAAM,IAEZ,MAEX,CAsCA,MAeamG,EAAqBC,I,IASzBA,EARP,MAAMC,EAhB2B,CAACD,I,IAEfA,EACDA,EACOA,EACJA,EAEJA,EACCA,EACIA,EACJA,EATlB,MAAO,CACLzG,MAAO,CAAExZ,OAAkB,QAAVigB,EAAAA,EAAKzG,aAALyG,IAAAA,EAAAA,EAAc,IAC/BxG,KAAM,CAAEzZ,OAAiB,QAATigB,EAAAA,EAAKxG,YAALwG,IAAAA,EAAAA,EAAa,IAC7BvG,YAAa,CAAE1Z,OAAwB,QAAhBigB,EAAAA,EAAKvG,mBAALuG,IAAAA,EAAAA,EAAoB,IAC3CE,QAAS,CAAEngB,OAAoB,QAAZigB,EAAAA,EAAKE,eAALF,IAAAA,EAAAA,EAAgB,IACnC9hB,QAAS,CACPqhB,YAA6B,QAAhBS,EAAAA,EAAKG,mBAALH,IAAAA,EAAAA,EAAoB,EACjCI,aAA+B,QAAjBJ,EAAAA,EAAKI,oBAALJ,IAAAA,GAAAA,EACdK,iBAAuC,QAArBL,EAAAA,EAAKK,wBAALL,IAAAA,GAAAA,EAClBM,aAA+B,QAAjBN,EAAAA,EAAKM,oBAALN,IAAAA,GAAAA,GAEjB,EAIqBO,CAA2BP,GAYjD,OAVAA,EAAKnC,Q,EAAS,KACToC,EACAD,EAAKnC,Q,WAAM,CACd2C,iBAAiB,EACjBtiB,QAAS,KACJ+hB,EAAc/hB,QACH,QAAX8hB,EAAAA,EAAKnC,cAALmC,IAAAA,OAAAA,EAAAA,EAAa9hB,W,iVAIb8hB,E,OAAI,EC7NPnV,EAAQ,CAAC,EACToS,EAA2C,CAC/CwD,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,QAAS,IAGX,SAASC,EAAWC,GAClBA,EAAQhK,OAASgK,EAAQhK,QAAU,GACnCgK,EAAQC,cAAgBD,EAAQC,eAAiB,GAE7CD,EAAQ9D,UACVF,EAAWgE,EAAQ9D,UAAUrT,KAAKmX,GAEpCpW,EAAMoW,EAAQhT,MAAQgT,EACtBpW,EAAMoW,EAAQE,WAAaF,EAAQhT,MAAQgT,CAC7C,CAIAD,EAAW,CACT/S,KAAM,UACNkP,SAAU,YACVlG,OAAQ,CACN,CAAEhJ,KAAM,WAAY2J,KAAM,UAC1B,CAAE3J,KAAM,WAAY2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,QAAS,SAAU,QAAS,UAExGgjB,cAAe,CAAC,KAAM,SAGxBF,EAAW,CACT/S,KAAM,QACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,SAAU2J,KAAM,QAAS1Z,QAAS,CAAC,IAAK,IAAM,IAAK,KACpEgjB,cAAe,CAAC,OAGlBF,EAAW,CACT/S,KAAM,SACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,QAAS2J,KAAM,QAAS1Z,QAAS,EAAE,IAAK,OACzDgjB,cAAe,CAAC,OAGlBF,EAAW,CACT/S,KAAM,QACNkP,SAAU,YACVlG,OAAQ,GACRiK,cAAe,KAGjBF,EAAW,CACT/S,KAAM,OACNkP,SAAU,YACVlG,OAAQ,GACRiK,cAAe,KAGjBF,EAAW,CACT/S,KAAM,gBACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,SAAU2J,KAAM,MAAO1Z,QAAS,CAAC,EAAG,GAAI,GAAI,IAAK,OAClEgjB,cAAe,CAAC,MAGlBF,EAAW,CACT/S,KAAM,2BACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,YAAa2J,KAAM,QAAS1Z,QAAS,CAAC,EAAG,GAAI,GAAI,IAAK,OACvEgjB,cAAe,CAAC,MAGlBF,EAAW,CACT/S,KAAM,aACNkP,SAAU,YACVlG,OAAQ,CACN,CAAEhJ,KAAM,WAAY2J,KAAM,UAC1B,CAAE3J,KAAM,UAAW2J,KAAM,QAAS1Z,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAEtEgjB,cAAe,CAAC,KAAM,MAGxBF,EAAW,CACT/S,KAAM,mBACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,SAAU2J,KAAM,UACjCsJ,cAAe,CAAC,KAGlBF,EAAW,CACT/S,KAAM,mBACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,SAAU2J,KAAM,UACjCsJ,cAAe,CAAC,KAGlBF,EAAW,CACT/S,KAAM,gBACNkP,SAAU,YACVlG,OAAQ,CAAC,CAAEhJ,KAAM,SAAU2J,KAAM,UACjCsJ,cAAe,CAAC,KAKlBF,EAAW,CACT/S,KAAM,cACNkP,SAAU,YACVlG,OAAQ,CACN,CAAEhJ,KAAM,WAAY2J,KAAM,UAC1B,CAAE3J,KAAM,WAAY2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,QAAS,SAAU,QAAS,UAExGgjB,cAAe,CAAC,KAAM,SAGxBF,EAAW,CACT/S,KAAM,YACNkP,SAAU,YACVlG,OAAQ,GACRiK,cAAe,KAGjBF,EAAW,CACT/S,KAAM,gBACNkP,SAAU,YACVlG,OAAQ,CACN,CAAEhJ,KAAM,WAAY2J,KAAM,UAC1B,CAAE3J,KAAM,UAAW2J,KAAM,QAAS1Z,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAEtEgjB,cAAe,CAAC,KAAM,MAKxBF,EAAW,CACT/S,KAAM,MACNkP,SAAU,SACVlG,OAAQ,CACN,CAAEhJ,KAAM,SAAU2J,KAAM,OACxB,CAAE3J,KAAM,QAAS2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,QAAS,SAAU,QAAS,UAErGgjB,cAAe,CAAC,EAAG,SAGrBF,EAAW,CACT/S,KAAM,SACNkP,SAAU,SACVlG,OAAQ,CACN,CAAEhJ,KAAM,SAAU2J,KAAM,OACxB,CAAE3J,KAAM,QAAS2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,QAAS,SAAU,QAAS,UAErGgjB,cAAe,CAAC,EAAG,SAGrBF,EAAW,CACT/S,KAAM,aACNkP,SAAU,SACVlG,OAAQ,CAAC,CAAEhJ,KAAM,YAAa2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,UAC/DgjB,cAAe,CAAC,SAKlBF,EAAW,CACT/S,KAAM,aACNkP,SAAU,SACVlG,OAAQ,CAAC,CAAEhJ,KAAM,OAAQ2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,WAC/EgjB,cAAe,CAAC,SAKlBF,EAAW,CACT/S,KAAM,YACNkP,SAAU,OACVlG,OAAQ,CAAC,CAAEhJ,KAAM,WAAY2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,KAAM,KAAM,OAAQ,UAClFgjB,cAAe,CAAC,SAKlBF,EAAW,CACT/S,KAAM,WACNkP,SAAU,QACVlG,OAAQ,CAAC,CAAEhJ,KAAM,QAAS2J,KAAM,WAChCsJ,cAAe,KAGjBF,EAAW,CACT/S,KAAM,kBACNkP,SAAU,QACVlG,OAAQ,CAAC,CAAEhJ,KAAM,eAAgB2J,KAAM,WACvCsJ,cAAe,KAGjBF,EAAW,CACT/S,KAAM,eACNkP,SAAU,QACVlG,OAAQ,CACN,CAAEhJ,KAAM,SAAU2J,KAAM,UACxB,CAAE3J,KAAM,WAAY2J,KAAM,WAE5BsJ,cAAe,CAAC,SAAU,QAI5BF,EAAW,CACT/S,KAAM,gBACNkP,SAAU,UACVlG,OAAQ,CAAC,CAAEhJ,KAAM,OAAQ2J,KAAM,SAAU1Z,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,WAC/EgjB,cAAe,CAAC,SAGlB5a,IAAAA,KAAO2W,GAAY,CAACmE,EAAUC,KAC5BpE,EAAWoE,GAAW/a,IAAAA,OAAS8a,EAAU,OAAO,IAGlD,MAAME,EAoBJC,aAAaC,GACX,MAAMC,EAAOD,EAAgB9jB,KAAKihB,IAAI1Q,MACtC,GAAIwT,EAAM,CAER,IACIrK,EADAsK,EAAaD,EAEjB,IAAK,IAAIpc,EAAI,EAAGA,EAAI3H,KAAKuZ,OAAO5Z,OAAQgI,IACtC+R,EAAQ1Z,KAAKuZ,OAAO5R,GAGY,QAA5B3H,KAAKihB,IAAI1H,OAAO5R,GAAGuS,MAA8C,UAA5Bla,KAAKihB,IAAI1H,OAAO5R,GAAGuS,OAC1DR,EAAQlK,OAAOkK,IAEjBsK,EAAapb,IAAAA,QAAUob,EAAYtK,GAErC,OAAOsK,CACT,CACE,KAAM,CAAEC,QAAS,oBAAsBjkB,KAAKihB,IAAI1Q,KAEpD,CAEA2T,OAAOC,GACL,MAAMjI,EAAMlc,KAAKihB,IAAI1Q,KAAO,IACtB6T,EAAaxb,IAAAA,IAAM5I,KAAKuZ,QAAQ,CAACxa,EAAOoO,KAC5C,MAAMkX,EAAYrkB,KAAKihB,IAAI1H,OAAOpM,GAAO+M,KACzC,MAAkB,QAAdmK,GAAqC,UAAdA,GAAuC,oBAAdA,GAAiD,YAAdA,GAE9D,oBAAdA,IF4ISvP,EE5IoC/V,GF6IpDsN,MAAMiY,WAAWxP,KAAOyP,SAASzP,IE9I5B/V,EAKF,IAAMA,EAAQ,IFwIpB,IAAmB+V,CExII,IAO1B,OAJIqP,GACFC,EAAWxhB,QAAQuhB,GAGdjI,EAAMkI,EAAWve,KAAK,MAAQ,GACvC,CAEA2e,2BAA2BC,EAAUtX,GACnC,OAA+B,IAA3BsX,EAAS3K,QAAQ,MAId9Z,KAAKihB,IAAI1H,OAAOpM,EAAQ,IAAMnN,KAAKihB,IAAI1H,OAAOpM,EAAQ,GAAGuX,QAClE,CAEAC,YAAYF,EAAUtX,GAGhBnN,KAAKwkB,2BAA2BC,EAAUtX,GAC5CvE,IAAAA,KAAO6b,EAASnf,MAAM,MAAM,CAACsf,EAASC,KACpC7kB,KAAK2kB,YAAYC,EAAQrlB,OAAQslB,EAAI,KAKxB,KAAbJ,GAAmBzkB,KAAKihB,IAAI1H,OAAOpM,GAAOuX,SAC5C1kB,KAAKuZ,OAAOhE,OAAOpI,EAAO,GAE1BnN,KAAKuZ,OAAOpM,GAASsX,EAGvBzkB,KAAK8kB,aACP,CAEAA,aACE,GAA2B,IAAvB9kB,KAAKuZ,OAAO5Z,OAEd,YADAK,KAAKmY,KAAOnY,KAAKihB,IAAI1Q,KAAO,MAI9B,IAAI4H,EAAOnY,KAAKihB,IAAI1Q,KAAO,IAC3B4H,GAAQnY,KAAKuZ,OAAO1T,KAAK,MACzBsS,GAAQ,IACRnY,KAAKmY,KAAOA,CACd,CA5FApY,YAAYwjB,EAAShK,GACnBvZ,KAAKihB,IAAMsC,EAEPhK,EACFvZ,KAAKuZ,OAASA,GAGdvZ,KAAKuZ,OAAS,GACdvZ,KAAKuZ,OAASgK,EAAQC,cAAczb,MAAM,IAG5C/H,KAAK8kB,YACP,EAmFK,SAASC,EAAmBxB,EAAShK,GAC1C,GAAI3Q,IAAAA,SAAW2a,GAAU,CACvB,IAAKpW,EAAMoW,GACT,KAAM,CAAEU,QAAS,oBAAsB1T,MAEzCgT,EAAUpW,EAAMoW,EAClB,CACA,OAAO,IAAIK,EAAaL,EAAShK,EACnC,CAMO,SAASyL,KACd,OAAOzF,CACT,C,eC5PA,SAAS0F,GAAY/I,EAAac,GAGhC,OAFuB,IAAIvM,OAAOuM,GACI9P,KAAKgP,GACrB,EACxB,CASA,MAAM4H,GAAkB,CACtBoB,UARF,SAAmB9H,EAAUjY,GAC3B,MAAMyP,EHgLD,SAAgCwI,GACrC,MACMK,EADkB,oCACsBvQ,KAAKkQ,GACnD,IAAI+H,EAAgB,EAQpB,OALEA,EADwB,MAAtB1H,EAAe,GACN,EAAKC,IAAAA,SAAgBlO,OAAOiO,EAAe,IAAKA,EAAe,IAAIE,UAEnED,IAAAA,SAAgBlO,OAAOiO,EAAe,IAAKA,EAAe,IAAIE,UAGpEwH,CACT,CG5LgBC,CAA6BhI,GAAY,IACvD,OAAOxU,IAAAA,IAAMzD,GAAQkgB,GACZA,EAAOzQ,GAElB,EAIE0Q,SApGF,SAAkBC,EAAeC,G,IAC3BA,EAAJ,IAAgB,QAAZA,EAAAA,EAAMC,cAAND,IAAAA,OAAAA,EAAAA,EAAc7lB,SAAU,EAAG,C,IAEzB+lB,EAAAA,EADJ,MAAMA,EAAaF,EAAMC,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASqV,EAAAA,+B,IAEbF,EAAAA,EAM1C,OAPIA,SAAkB,QAAlBA,EAAAA,EAAYG,cAAZH,IAAAA,GAAoBI,QAApBJ,EAAAA,EAAoBI,cAAAA,IAAAA,OAApBJ,EAAAA,EAA4BK,cAC9BR,GAAQS,EAAAA,GAAAA,kBAAiB3f,QAAQkf,EAAOG,SAAkB,QAAlBA,EAAAA,EAAYG,cAAZH,IAAAA,GAAoBI,QAApBJ,EAAAA,EAAoBI,cAAAA,IAAAA,OAApBJ,EAAAA,EAA4BK,aAElEL,IACFA,EAAWG,OAAOI,kBAAoBV,GAExCC,EAAMjV,KAAOgV,EACNC,CACT,CAEA,IAAK,IAAIU,EAAa,EAAGA,EAAaV,EAAMC,OAAO9lB,OAAQumB,IAAc,CACvE,MAAMC,EAAQX,EAAMC,OAAOS,G,IAErBC,EAAAA,EACsCA,EAAAA,EAF5C,GAAIA,EAAMjM,OAASkM,EAAAA,UAAAA,MACbD,SAAa,QAAbA,EAAAA,EAAON,cAAPM,IAAAA,GAAeL,QAAfK,EAAAA,EAAeL,cAAAA,IAAAA,OAAfK,EAAAA,EAAuBJ,cACzBR,GAAQS,EAAAA,GAAAA,kBAAiB3f,QAAQkf,EAAOY,SAAa,QAAbA,EAAAA,EAAON,cAAPM,IAAAA,GAAeL,QAAfK,EAAAA,EAAeL,cAAAA,IAAAA,OAAfK,EAAAA,EAAuBJ,aAEjEI,EAAMN,OAAOI,kBAAoBV,CAErC,CACA,OAAOC,CACT,EA8EEa,gBA3CF,SAAyBd,EAAeC,G,IAClCA,EAAJ,IAAgB,QAAZA,EAAAA,EAAMC,cAAND,IAAAA,OAAAA,EAAAA,EAAc7lB,SAAU,EAAG,CAC7B,MAAM+lB,EAAaF,EAAMC,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASqV,EAAAA,+BACvD,I,IAEsDF,EADhDA,IACFA,EAAWG,OAAOI,kBAAoBhB,GAA6B,QAAjBS,EAAAA,EAAWG,cAAXH,IAAAA,OAAAA,EAAAA,EAAmBO,kBAAmBV,IAE1FC,EAAMjV,KAAO0U,GAAYO,EAAMjV,KAAMgV,EAGvC,CAFE,MAAOxV,GACPD,QAAQC,MAAM,2BAA2BA,aAAAA,EAAAA,EAAOkU,UAAWlU,EAC7D,CACA,OAAOyV,CACT,CAEA,IAAK,MAAMW,KAASX,EAAMC,OACxB,GAAIU,EAAMjM,OAASkM,EAAAA,UAAAA,KACjB,I,IAC+CD,EAA7CA,EAAMN,OAAOI,kBAAoBhB,GAAwB,QAAZkB,EAAAA,EAAMN,cAANM,IAAAA,OAAAA,EAAAA,EAAcF,kBAAmBV,EAGhF,CAFE,MAAOxV,GACPD,QAAQC,MAAM,2BAA2BA,aAAAA,EAAAA,EAAOkU,UAAWlU,EAC7D,CAIJ,OAAOyV,CACT,EAmBEc,aA7EF,SAAsBC,EAAgBC,EAAkBhB,G,IAQlDA,EAPJ,IAAIxI,EAOJ,GALEA,EADEoI,EAAcmB,GACNnB,EAAiBmB,GAEjBA,GAGI,QAAZf,EAAAA,EAAMC,cAAND,IAAAA,OAAAA,EAAAA,EAAc7lB,SAAU,EAAG,C,IAGzB+lB,EAFJ,IAAIH,EAAQC,EAAMjV,KAAKlK,QAAQ2W,EAASwJ,GACxC,MAAMd,EAAaF,EAAMC,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASqV,EAAAA,+B,IAEbF,EAM1C,OAPIA,SAAiB,QAAjBA,EAAAA,EAAYe,aAAZf,IAAAA,OAAAA,EAAAA,EAAmBK,cACrBR,GAAQS,EAAAA,GAAAA,kBAAiB3f,QAAQkf,EAAOG,SAAiB,QAAjBA,EAAAA,EAAYe,aAAZf,IAAAA,OAAAA,EAAAA,EAAmBK,aAEzDL,IACFA,EAAWG,OAAOI,kBAAoBV,GAExCC,EAAMjV,KAAOgV,EACNC,CACT,CAEA,IAAK,MAAMW,KAASX,EAAMC,OACxB,GAAIU,EAAMjM,OAASkM,EAAAA,UAAAA,KAAgB,C,IACrBD,EAAAA,EACRA,EADJ,IAAIZ,EAAoB,QAAZY,EAAAA,EAAMN,cAANM,IAAAA,GAAcF,QAAdE,EAAAA,EAAcF,yBAAAA,IAAAA,OAAdE,EAAAA,EAAiC9f,QAAQ2W,EAASwJ,G,IAEpBL,GADtCA,SAAY,QAAZA,EAAAA,EAAOM,aAAPN,IAAAA,OAAAA,EAAAA,EAAcJ,aAAcR,IAC9BA,GAAQS,EAAAA,GAAAA,kBAAiB3f,QAAQkf,EAAOY,SAAY,QAAZA,EAAAA,EAAOM,aAAPN,IAAAA,OAAAA,EAAAA,EAAcJ,aAExDI,EAAM5V,KAAOgV,GAASY,EAAM5V,IAC9B,CAEF,OAAOiV,CACT,GAiDA,IACM1B,sBACF,OAAOA,EACT,G,0BCpFF,SAAS4C,GAAeC,EAASvN,EAAOwN,EAAaC,GAYnD,MAAMC,EAAkBle,IAAAA,QAAU+d,EAAS,UACrC7L,EAAQlS,IAAAA,OAASA,IAAAA,QAAUA,IAAAA,IAAMwQ,EAAO,UAAW,UAEzD,OAAOxQ,IAAAA,IAAMke,GAAiB,CAACC,EAAMC,KACnC,MAAMrkB,EAAOiG,IAAAA,KAAOwQ,EAAO,CAAE4N,OAAQA,IACrC,IAAIzB,EAAQ5iB,EAAK4N,KAGjB,MAAMwV,EAAkB,CACtBkB,WAAY,CAAEloB,MAAO4D,EAAK4N,MAC1B2W,gBAAiB,CAAEnoB,MAAO4D,EAAK4N,MAC/B4W,eAAgB,CAAEpoB,MAAO4D,EAAKsX,MAC9BmN,oBAAqB,CAAEroB,MAAO4D,EAAK0kB,QAGrC,GAAIze,IAAAA,KAAOkS,GAAOnb,OAAS,EAAG,CAC5B,MAAMmc,EAAOlT,IAAAA,KAAOkS,EAAO,CAAEF,OAAQjY,EAAKiY,SAC1CmL,EAAuB,WAAI,CAAEhnB,MAAO+c,EAAKA,MACzCiK,EAA4B,gBAAI,CAAEhnB,MAAO+c,EAAKvL,MAG1C3H,IAAAA,KAAOkS,GAAOnb,OAAS,GAAKinB,IAC9BrB,EAAQzJ,EAAKvL,KAAO,KAAOgV,EAE/B,CAEA,MAAO,CACLpF,OAAQoF,EACR+B,WAAY1e,IAAAA,IAAMme,EAAMF,GACxBd,aACApjB,OACD,GAEL,CA0YA,SAAS4kB,GAAYpH,EAAQqH,GAC3B,IAAIzoB,EAAQyoB,EAAMzoB,MAOlB,OAJIohB,EAAOsH,aACT1oB,EAAQkmB,GAAYuC,EAAMzoB,MAAOohB,EAAOsH,WAAYtH,EAAOuH,mBAGtD,CAAC3oB,EAAqB,IAAdyoB,EAAMG,MAAerL,KAAKC,MAAMiL,EAAMI,GAAK,KAC5D,CAEA,SAAS3C,GAAY/I,EAAKc,EAAS0K,GACjC,MACMG,EADiB,IAAIpX,OAAOuM,GACI9P,KAAKgP,GAC3C,OAAI2L,EACEH,EACKG,EAAe,GAEfA,EAAe,GAGnB,EACT,CA4LA,SAASC,GAAoBN,GAE3B,MAAO,CAAChY,OAAOgY,EAAMzoB,OAAsB,IAAdyoB,EAAMG,MAAerL,KAAKC,MAAMiL,EAAMI,GAAK,KAC1E,CAEA,SAASG,GAAkBC,EAAWR,GACpC,IAAIzoB,EACJ,OAAQipB,GACN,IAAK,MACHjpB,EAAQyoB,EAAMS,UACd,MACF,IAAK,MACHlpB,EAAQyoB,EAAMU,UACd,MACF,IAAK,MASL,QACEnpB,EAAQyoB,EAAMW,gBAPhB,IAAK,MACHppB,EAAQyoB,EAAMW,UAAYX,EAAMhc,IAChC,MACF,IAAK,QACHzM,EAAQyoB,EAAMhc,IAMlB,MAAO,CAACgE,OAAOzQ,GAAsB,IAAdyoB,EAAMG,MAC/B,CAEA,SA7RA,SAAuBhB,EAASvN,EAAOwN,GAAc,GACnD,OAAOF,GAAeC,EAASvN,EAAOwN,EAAakB,GACrD,EA2RA,GAzRA,SAAsBnB,EAASvN,EAAO4O,EAAWpB,GAAc,GAE7D,OAAOF,GAAeC,EAASvN,EAAOwN,EADThe,IAAAA,QAAUmf,GAAmBC,GAE5D,EAsRA,GApRA,SAAoBrB,EAASvN,EAAO+G,EAAQyG,GAAc,GAExD,OAAOF,GAAeC,EAASvN,EAAOwN,EADVhe,IAAAA,QAAU2e,GAAapH,GAErD,EAiRA,GAxnBA,SAAqB9F,EAAQ8F,GAC3B,MAAMqF,EAAQ,IAAI4C,EAAAA,iBAAiB,CACjCC,MAAOlI,EAAOkI,MACd9X,KAAM,SACNkV,OAAQ,CACN,CAAElV,KAAM,OAAQ2J,KAAMkM,EAAAA,UAAAA,QACtB,CAAE7V,KAAM,SAAU2J,KAAMkM,EAAAA,UAAAA,QACxB,CAAE7V,KAAMqV,EAAAA,6BAA8B1L,KAAMkM,EAAAA,UAAAA,WAIhD,IAAK,IAAIze,EAAI,EAAGA,EAAI0S,EAAO1a,OAAQgI,IAAK,CACtC,MAAMxD,EAAIkW,EAAO1S,GACX2gB,EAAe,CACnB/P,KAAMpU,EAAE2W,MAAM,GAAIvK,KAClBgY,OAAQpkB,EAAEuW,MACV,CAACkL,EAAAA,8BAA+BzhB,EAAEpF,OAEpCymB,EAAMzR,IAAIuU,EACZ,CACA,OAAO9C,CACT,EAmmBA,GA/QA,SAA8BmB,EAASvN,EAAO+G,GAC5C,MAAMqI,EAAa,IAAIC,MACvBD,EAAME,UAAU,CAAEvQ,KAAM,SACxBqQ,EAAME,UAAU,CAAEvQ,KAAM,SACxBqQ,EAAME,UAAU,CAAEvQ,KAAM,QACxBqQ,EAAME,UAAU,CAAEvQ,KAAM,eAExB,MAAM2O,EAAkBle,IAAAA,QAAU+d,EAAS,UAqB3C,OApBA/d,IAAAA,KAAOwQ,GAAQzW,IACb,MAAMgmB,EAAc7B,EAAgBnkB,EAAKqkB,SAAW,GAC9C4B,EAAYhgB,IAAAA,KAAO+f,GACzB,IAAIE,EAAYD,EAAYA,EAAU7pB,MAAQ,KAE9C,GAAIohB,EAAO3f,QAAQsoB,mBAAqBD,GAA2B,KAAdA,GACnD,OAIE1I,EAAOsH,aACToB,EAAY5D,GAAY4D,EAAW1I,EAAOsH,WAAYtH,EAAOuH,mBAG/D,IAAI5L,EAAYlT,IAAAA,MAAQjG,EAAKmY,OAC7BgB,EAAOA,EAAOA,EAAKvL,KAAO,GAE1BiY,EAAMO,KAAK3c,KAAK,CAAC0P,EAAMnZ,EAAK4N,KAAM5N,EAAKsX,KAAM4O,GAAW,IAGnDL,CACT,EAkPA,GA5HO,SAA2BQ,EAAWvH,EAAawH,GACxD,MAAMC,EAAYD,EAAUD,EAAUG,WAAWC,IACjD,GAAoB,WAAhB3H,EAA0B,CAC5B,MAAM4H,EAAeC,SAASL,EAAUD,EAAUG,WAAWI,OAAQ,IACrE,MAAO,CACLpJ,OAAQ6I,EAAUzY,KAAO,IAAMkR,EAC/B6F,WAAY,CAAC,CAAC+B,EAAgC,IAAlBH,EAAU,GAAG1e,KAE7C,CAAO,CACL,IAAI7C,EACJ,MAAM6hB,EAAS,GACf,IAAK7hB,EAAI,EAAGA,EAAIuhB,EAAUvpB,OAAQgI,IACtB,IAANA,GACF6hB,EAAOpd,KAAK,CAAC8c,EAAUvhB,GAAG8Z,GAAkC,IAApByH,EAAUvhB,GAAGuC,OAEvDsf,EAAOpd,KAAK,CAAC8c,EAAUvhB,GAAG8Z,GAAgC,IAAlByH,EAAUvhB,GAAG6C,KAEvD,MAAO,CACL2V,OAAQ6I,EAAUzY,KAAO,IAAMkR,EAC/B6F,WAAYkC,EAEhB,CACF,EAsGA,GApGA,SAAgC5H,EAAwB6H,EAAoBC,EAAqBvJ,GAC/F,GAAKvX,IAAAA,QAAUgZ,GAoBR,CACL,MAAM+H,EAiCV,SAAyB/H,GACvB,MAAM6H,EAAS7gB,IAAAA,KAAOA,IAAAA,YAAcA,IAAAA,IAAMgZ,GAAWY,GAAY5Z,IAAAA,IAAM4Z,EAAQiH,OAAQ,YAEjFE,EAAQ,CAAC,EASf,OARA/gB,IAAAA,KAAO6gB,GAAS5N,IACd8N,EAAM9N,GAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvDjT,IAAAA,KAAOgZ,GAAWY,IAChB5Z,IAAAA,KAAO4Z,EAAQiH,QAAS5N,IACtB8N,EAAM9N,EAAMtL,MAAMiS,EAAQoH,WAAW,GACrC,IAEGD,CACT,CA9CkBE,CAAgBjI,GACxB4D,EAAQ,IAAI4C,EAAAA,iBAAiB,CACjC7X,KAAM,YAAY4P,EAAOkI,QACzBA,MAAOlI,EAAOkI,MACd5C,OAAQ,CAAC,CAAElV,KAAM,aAAc2J,KAAMkM,EAAAA,UAAAA,OAAkBpkB,OAAQ,IAAI8nB,EAAAA,gBAGrE,IAAK,IAAIniB,EAAInC,EAAAA,OAA4B,EAAGmC,GAAK,EAAGA,IAClD6d,EAAMC,OAAOrZ,KAAK,CAChBmE,KAAM/K,EAAmBmC,GAAGwQ,KAC5B+B,KAAMkM,EAAAA,UAAAA,OACNP,OAAQ,CAAEjG,KAAM,OAAQmK,SAAU,GAClC/nB,OAAQ,IAAI8nB,EAAAA,cAIhB,MAAME,EAAaP,aAAAA,EAAAA,EAAQ3nB,KAAKmoB,GAAMA,EAAE1Z,OAaxC,OAZAyZ,SAAAA,EAAYzoB,SAASsa,IACnB2J,EAAMzR,IAAI,CACR,aAAc8H,EACdqO,SAAUP,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,EAC3CsO,KAAMR,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,EACvCuO,QAAST,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,EAC1CwO,QAASV,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,EAC1CyO,YAAaX,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,EAC9C,iBAAkB8N,EAAM9N,GAAS8N,EAAM9N,GAAO,GAAK,GACnD,IAGG2J,CACT,CAnD0B,CAExB,IAAI+E,EAAgB,KACpB,IACEA,EAAgB/a,OAAOoS,EAGzB,CAFE,MAAO4I,GACP1a,QAAQ2a,IAAI,uCAAwCD,EACtD,CAYA,OAVc,IAAIpC,EAAAA,iBAAiB,CACjC7X,KAAM,SAAS4P,EAAOkI,QACtBA,MAAOlI,EAAOkI,MACd5C,OAAQ,CACN,CAAElV,KAAMma,EAAAA,4BAA6BxQ,KAAMkM,EAAAA,UAAAA,KAAgBpkB,OAAQ,IAAI8nB,EAAAA,YAAY,CAAgB,IAAfJ,EAAU,MAC9F,CAAEnZ,KAAMqV,EAAAA,6BAA8B1L,KAAMkM,EAAAA,UAAAA,OAAkBpkB,OAAQ,IAAI8nB,EAAAA,YAAY,CAACS,MAEzF5qB,OAAQ,GAIZ,CAgCF,EA+CA,GArSA,SAAwBgrB,GAKtB,OAHA/hB,IAAAA,QAAU+hB,GAAaC,IACrBA,EAAOtD,WAAa1e,IAAAA,OAASgiB,EAAOtD,YAAaE,GAAUA,EN5ZnC,IM4ZyD,IAE5EmD,CACT,EA+RA,GAjmBO,SACLA,EACAxK,EACA0K,EACAC,GAEA,MAAM,WAAExD,EAAU,WAAEvB,EAAY5F,OAAQ4K,EAAU,KAAEpoB,GAASgoB,EAEvDK,EAAmB,CACvBza,KAAMma,EAAAA,4BACNxQ,KAAMkM,EAAAA,UAAAA,KACNP,OAAQ,CACNC,OAAQ,CAAC,GAEX9jB,OAAQ,IAAI8nB,EAAAA,YAAoBxC,EAAWxlB,KAAKgH,GAAMA,EN3G9B,OM8G1B,IAAI9G,EACcokB,EAAAA,UAAAA,OAChBpkB,EAAS,IAAI8nB,EAAAA,YAAoBxC,EAAWxlB,KAAKgH,GAAMA,ENjH5B,MMsH7B,MAAMmiB,EAAoB,CACxB1a,KAAMqV,EAAAA,6BACN1L,KAAM4Q,QAAAA,EAAa1E,EAAAA,UAAAA,OACnB8E,OAAQ,CAAC,EACTrF,OAAQ,CACNI,kBAAmB8E,EACnBjF,OAAQ,CAAC,GAEX9jB,U,IAKgB+jB,EAIRA,EACAA,EACIA,EAIIA,EAIlB,GAhBIA,IACFiF,EAAUnF,OAAOC,OAAS,CACxBqF,aAA+C,QAAjCpF,EAAAA,EAAgC,2BAAhCA,IAAAA,OAAAA,EAAAA,EAAmChnB,OAGnDksB,EAAWC,OAAS,CAClBpP,KAAmC,QAA7BiK,EAAAA,EAA4B,uBAA5BA,IAAAA,OAAAA,EAAAA,EAA+BhnB,MACrC4D,KAA8B,QAAxBojB,EAAAA,EAAuB,kBAAvBA,IAAAA,OAAAA,EAAAA,EAA0BhnB,MAChCqsB,SAAsC,QAA5BrF,EAAAA,EAA2B,sBAA3BA,IAAAA,OAAAA,EAAAA,EAA8BhnB,OAG1CksB,EAAWpF,OAAOC,OAAS,CACzBqF,aAA+C,QAAjCpF,EAAAA,EAAgC,2BAAhCA,IAAAA,OAAAA,EAAAA,EAAmChnB,QAIjD4D,EAAM,C,IAeQwd,EAbhB,MAAMP,EAAOwF,EAAwBziB,EAAK2c,OACtCM,IACF9P,QAAQ2a,IAAI,8BAA8B7K,MAASjd,EAAK2c,UACxD2L,EAAWpF,OAAOjG,KAAOA,EAEZ,YAATA,IACFqL,EAAWpF,OAAO1T,IAAM,EACxB8Y,EAAWpF,OAAOplB,IAAM,MAK5B,MAAM4qB,EJyUH,SAAyB1oB,EAAMkoB,GACpC,MAAM,WAAES,GAAe3oB,EACjB4oB,EAAUV,aAAAA,EAAAA,EAAelF,MAAMxhB,GAAMA,EAAEmnB,aAAeA,IAC5D,OAAKC,EAIE,EAASF,SAAmBvpB,KAAI,CAACqC,EAAGwD,KACN,CAEjCuS,KAAMsR,EAAAA,YAAAA,YACNhrB,QAAS,CACPzB,MAAOoF,EAAEpF,MACToZ,KAAMhU,EAAEsnB,cATL,IAcX,CI3VqBrG,CAAsBziB,EAAMkoB,GACzCQ,IAA0B,QAAdlL,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBuL,yBAC9B5b,QAAQ2a,IAAI,0CACZQ,EAAWpF,OAAOwF,SAAWA,EAEjC,CAEA,MAAM5F,EAAkB,CAACuF,EAAWC,GAE9BzF,EAAmB,CACvBjV,KAAMwa,EACN1C,MAAOlI,EAAOkI,MACd5C,SACA9lB,OAAQ2nB,EAAW3nB,QAIrB,OADqB,IAAIyoB,EAAAA,iBAAiB5C,EAE5C,EA8gBA,GA3gBO,SAAkCmG,EAA2BvS,EAAOwS,GACzE,MAAMhB,EAAS,GACf,GAAwB,IAApBe,EAAShsB,OACX,MAAO,GAGT,IAAK,MAAMksB,KAAaF,EAAU,CAChC,MAAMnG,GAAQsG,EAAAA,EAAAA,mBAAkBD,IAC1B,UAAEE,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,cAAazG,GAC9C,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,EAAMC,OAAO9lB,OAAQgI,IAAK,C,IA2BxChF,EA1BJ,MAAMwjB,EAAQX,EAAMC,OAAO9d,GAC3B,GAAIA,IAAMqkB,IAAc7F,EAAMnkB,SAAWmkB,EAAMnkB,OAAOrC,OACpD,SAGF,MAAM4M,EAAI,GACV,IAAK,IAAI2f,EAAI,EAAGA,EAAI/F,EAAMnkB,OAAOrC,OAAQusB,IAAK,CAC5C,MAAM/pB,EAAIgkB,EAAMnkB,OAAOvD,IAAIytB,GACjB,OAAN/pB,GACFoK,EAAEH,KAAK,CAAEiZ,KAAM0G,EAAU/pB,OAAOvD,IAAIytB,GAAK,IAAMntB,MAAOoD,GAE1D,CAEA,MAAM6kB,EAASb,EAAM5V,KACf5N,EAAOiG,IAAAA,KAAOwQ,EAAO,CAAE4N,OAAQA,IAGrC,IAAI5J,EAAgC,IAArBwO,EAAQO,WACvB,MAAMhB,EAAqD,IAAtC/F,EAAwBziB,EAAK0kB,OAElDjK,EAAWd,KAAK7b,IAAI2c,EAAU+N,GACb,IAAb/N,IACFA,EAAW,MAGb,IAAI2N,EAAapoB,EAAK4N,MACR,QAAV5N,EAAAA,EAAKmY,aAALnY,IAAAA,OAAAA,EAAAA,EAAYhD,QAAS,IACvBorB,EAAa,GAAGpoB,EAAKmY,MAAM,GAAGvK,SAASwa,KAGzC,MAAMqB,EAAiB,CACrBC,GAAI9f,EACJ+f,KAAM,CACJ/b,KAAMwa,EACNpoB,OACAya,aAIJwN,EAAOxe,KAAKggB,EACd,CACF,CAEA,OAAOxB,CACT,EAqdA,GA7bO,SAAuCe,EAAevO,GAC3D,MAAMwN,EAAS,GACf,GAAwB,IAApBe,EAAShsB,OACX,MAAO,GAGT,IAAK,MAAM4M,KAAKof,EAAU,CACxB,MAAMU,EAAK,GAEX,IAAK9f,EAAE+a,WACL,SAGF,MAAMiF,EAAKhgB,EAAE+a,WACb,IAAK,IAAI3f,EAAI,EAAGA,EAAI4kB,EAAG5sB,OAAQgI,IAC7B0kB,EAAGjgB,KAAK,CAAEiZ,KAAMkH,EAAG5kB,GAAG,GAAK,IAAM5I,MAAOwtB,EAAG5kB,GAAG,KAIhD,IAAI6kB,EAAiD,IAApCpH,EAAwBhI,GACtB,IAAfoP,IACFA,EAAa,MAGf,MAAMJ,EAAiB,CACrBC,GAAIA,EACJC,KAAM,CACJ/b,KAAMhE,EAAE4T,OACR/C,SAAU,KACVza,KAAM,CAAC,IAIXioB,EAAOxe,KAAKggB,EACd,CAEA,OAAOxB,CACT,EAwZA,GAtZO,SAA6B6B,GAClC,IAAKA,GAAQA,EAAK9sB,OAAS,EACzB,OAAO,EAGT,MAAM8F,EAAQgnB,EAAK,GAAGhH,OAAOE,MAAM3E,GAAMA,EAAE9G,OAASkM,EAAAA,UAAAA,OACpD,IAAK3gB,EACH,OAAO,EAGT,IAAK,IAAIkC,EAAI,EAAGA,EAAI8kB,EAAK9sB,OAAQgI,IAAK,CACpC,MAAMokB,EAAYU,EAAK9kB,GAAG8d,OAAOE,MAAM3E,GAAMA,EAAE9G,OAASkM,EAAAA,UAAAA,OAExD,IAAK,IAAI8F,EAAI,EAAGA,EAAI5P,KAAKnK,IAAIsa,EAAK9sB,OAAQ,GAAIusB,IAC5C,GAAIH,EAAU/pB,OAAOvD,IAAIytB,KAAOzmB,EAAMzD,OAAOvD,IAAIytB,GAC/C,OAAO,CAGb,CAEA,OAAO,CACT,EAiYA,GApVO,SAAuBO,GAC5B,MAAMC,EAgCR,SAAyBD,GACvB,IAAIC,EAAiB,EACjBC,EAAY,EAChB,IAAK,IAAIhlB,EAAI,EAAGA,EAAI8kB,EAAK9sB,OAAQgI,IAAK,CACpC,MAAMokB,EAAYU,EAAK9kB,GAAG8d,OAAOE,MAAM3E,GAAMA,EAAE9G,OAASkM,EAAAA,UAAAA,OACpD2F,EAAU/pB,OAAOrC,OAASgtB,IAC5BA,EAAYZ,EAAU/pB,OAAOrC,OAC7B+sB,EAAiB/kB,EAErB,CAEA,OAAO+kB,CACT,CA5CyBE,CAAgBH,GACjCV,EAAYU,EAAKC,GAAgBjH,OAAOE,MAAM3E,GAAMA,EAAE9G,OAASkM,EAAAA,UAAAA,OACrE,IAAK2F,EACH,MAAO,GAGT,MAAMtG,EAAyB,CAACsG,GAEhC,IAAK,IAAIpkB,EAAI,EAAGA,EAAI8kB,EAAK9sB,OAAQgI,IAAK,CACpC,MAAM+d,EAAa+G,EAAK9kB,GAAG8d,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASqV,EAAAA,+BACpDF,IAILA,EAAWnV,KAAOkc,EAAK9kB,GAAG4I,KAGtBwb,EAAU/pB,OAAOrC,OAAS+lB,EAAW1jB,OAAOrC,QAAW,GACzD+lB,EAAW1jB,OAAO+R,IAAI,MAExB0R,EAAOrZ,KAAKsZ,GACd,CAQA,MAAO,CANkB,CACvBnV,KAAM,OACNkV,SACA9lB,OAAQosB,EAAU/pB,OAAOrC,QAI7B,EAqTA,GA/XO,SAAqB8sB,GAC1B,IAAKA,GAAwB,IAAhBA,EAAK9sB,OAChB,OAAO8sB,EAIT,IAAII,EAAeJ,EAAK,GAAGhH,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASma,EAAAA,8BAA6B1oB,OAAOvD,IAAI,GACjG,IAAK,IAAIkJ,EAAI,EAAGA,EAAI8kB,EAAK9sB,OAAQgI,IAAK,CACpC,MACMmlB,EADYL,EAAK9kB,GAAG8d,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASma,EAAAA,8BAC9B1oB,OAAOvD,IAAI,GACjCquB,EAAUD,IACZA,EAAeC,EAEnB,CAEA,IAAK,IAAInlB,EAAI,EAAGA,EAAI8kB,EAAK9sB,OAAQgI,IAAK,CACpC,MAAM6d,EAAQiH,EAAK9kB,GACbokB,EAAYvG,EAAMC,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASma,EAAAA,8BAChDhF,EAAaF,EAAMC,OAAOE,MAAM3E,GAAMA,EAAEzQ,OAASqV,EAAAA,+BACjDkH,EAAUf,EAAU/pB,OAAOvD,IAAI,GAErC,GAAIquB,EAAUD,EAAc,C,IAMId,EAL9Bjc,QAAQ2a,IAAI,sCACZ,IAAIsC,EAAahB,EAAU/pB,OAAOH,UAC9BG,EAAS0jB,EAAW1jB,OAAOH,UAC/B,MAAMmrB,EAAoB,GACpBC,EAAgB,GAChBC,EAA+C,QAAvBnB,EAAAA,EAAUlG,OAAOC,cAAjBiG,IAAAA,OAAAA,EAAAA,EAAyBZ,aACvD,IAAK,IAAIe,EAAIW,EAAcX,EAAIY,EAASZ,GAAKgB,EAC3CF,EAAkB5gB,KAAK8f,GACvBe,EAAc7gB,KAAK,MAGrB2gB,EAAaC,EAAkBG,OAAOJ,GACtC/qB,EAASirB,EAAcE,OAAOnrB,GAC9B+pB,EAAU/pB,OAAS,IAAI8nB,EAAAA,YAAYiD,GACnCrH,EAAW1jB,OAAS,IAAI8nB,EAAAA,YAAY9nB,EACtC,CACF,CAEA,OAAOyqB,CACT,EAsVA,GAldO,SAA4Bd,GACjC,IAAK,IAAIhkB,EAAI,EAAGA,EAAIgkB,EAASc,KAAK9sB,OAAQgI,IAAK,CAC7C,MAAM6d,EAAmBmG,EAASc,KAAK9kB,GACvC,IAAK,MAAMwe,KAASX,EAAMC,OAAQ,C,IACZU,EAApB,MAAMiH,EAAiC,QAAnBjH,EAAAA,EAAMN,OAAOC,cAAbK,IAAAA,OAAAA,EAAAA,EAAqB7G,MACzC,GAAI8N,EAAa,CACf,MAAMxN,EAAOwF,EAAwBgI,GACjCxN,IACFuG,EAAMN,OAAOjG,KAAOA,EAEP,YAATA,IACFuG,EAAMN,OAAO1T,IAAM,EACnBgU,EAAMN,OAAOplB,IAAM,KAGzB,CACF,CACF,CACA,OAAOkrB,CACT,EChQO,SAAS0B,GAAyBC,EAAwB1L,GAC/D,MAAM2L,EAA+B,GAErC,IAAK,IAAI5lB,EAAI,EAAGA,EAAI2lB,EAAS3tB,OAAQgI,IAAK,CACxC,MAAMmB,EAAIwkB,EAAS3lB,GAEb3D,EAAI4d,EADQpS,OAAO1G,EAAE0kB,WAG3B,GAAIxpB,EAAG,CACL,MAAMypB,EAAyB,CAC7BC,UAAWle,OAAO1G,EAAE6e,OACpBgG,UAAW7kB,EAAE0kB,SACbI,QAAS9kB,EAAE8kB,QACXrd,KAAMzH,EAAEyH,KACRsd,SAAU/kB,EAAE+kB,SACZC,aAAchlB,EAAEglB,aAChBC,aAAcjlB,EAAEilB,aAChB9P,KAAMnV,EAAEmV,KACR+P,WAAYllB,EAAEklB,WACdC,iBAAkBnlB,EAAEmlB,iBACpBC,YAAaplB,EAAEyH,MAAQvM,EAAEkqB,YACzBC,SAAUnqB,EAAEmqB,SACZpvB,MAAOiF,EAAEjF,MACTqvB,OAAQtlB,EAAEslB,OACV3E,OAAQzlB,EAAEylB,OACV3O,MAAO9W,EAAE8W,MACT1B,MAAOpV,EAAEoV,MACTiV,OAAQrqB,EAAEqqB,OACV7T,IAAKxW,EAAEwW,IACP8T,WAAYtqB,EAAEsqB,WACdC,iBAAkBvqB,EAAEuqB,iBACpBC,gBAAiBxqB,EAAEwqB,gBACnBC,aAAczqB,EAAEyqB,aAChBhI,MAAOziB,EAAEyiB,MACT1W,MAAO/L,EAAE+L,OAGXwd,EAAenhB,KAAKqhB,EACtB,CACF,CAEA,OAAOF,CACT,CAMO,SAASmB,GACdC,EACA/M,EACAphB,GAEA,MAAM,eAAEouB,GAAmBpuB,EACrB+sB,EAA+B,GAErC,IAAK,IAAI5lB,EAAI,EAAGA,EAAIgnB,EAAOhvB,OAAQgI,IAAK,CACtC,MAAMvF,EAAIusB,EAAOhnB,GAEX3D,EAAI4d,EADQpS,OAAOpN,EAAEorB,WAG3B,GAAIxpB,EAAG,CACL,MAAMypB,EAAyB,CAC7B1uB,MAAO6vB,EAAiBxsB,EAAErD,MAAQiF,EAAEjF,MACpC2uB,UAAWle,OAAOpN,EAAEulB,OACpBgG,UAAWvrB,EAAEorB,SACbI,QAASxrB,EAAEwrB,QACXrd,KAAMnO,EAAEmO,KACRsd,SAAUzrB,EAAEyrB,SACZC,aAAc1rB,EAAE0rB,aAChBC,aAAc3rB,EAAE2rB,aAChB9P,KAAM7b,EAAE6b,KACR+P,WAAY5rB,EAAE4rB,WACdE,YAAalqB,EAAEkqB,YACfC,SAAUnqB,EAAEmqB,SACZ1E,OAAQzlB,EAAEylB,OACV3O,MAAO9W,EAAE8W,MACT1B,MAAOpV,EAAEoV,MACTiV,OAAQrqB,EAAEqqB,OACV7T,IAAKxW,EAAEwW,IACP8T,WAAYtqB,EAAEsqB,WACdC,iBAAkBvqB,EAAEuqB,iBACpBC,gBAAiBxqB,EAAEwqB,gBACnBC,aAAczqB,EAAEyqB,aAChBhI,MAAOziB,EAAEyiB,MACT1W,MAAO/L,EAAE+L,OAGXwd,EAAenhB,KAAKqhB,EACtB,CACF,CAEA,OAAOF,CACT,CAiIA,MAaA,GA1HO,SAA8B3L,EAAUzB,GAI7C,OAHAvX,IAAAA,KAAOgZ,GAAWY,IAChBA,EAAQqM,WAAa1O,EAAO0O,UAAU,IAEjCjN,CACT,EAqHA,GAnHO,SAA6BA,EAAUkN,GAU5C,OATAlN,EAASrgB,SAASihB,IAChB,GAAIA,EAAQ1H,OAAS0H,EAAQ1H,MAAMnb,OAAQ,CACzC,MAAMmc,EAAO0G,EAAQ1H,MAAM,GAC3B,GAA0B,MAAtBgB,EAAKiT,aAAsB,CAC7B,MAAMC,EAAYF,EAAQhT,EAAKiT,cAC/BjT,EAAKmT,MAAQD,EAAYA,EAAUlT,KAAO,EAC5C,CACF,KAEK8F,CACT,EAwGA,GAtGO,SAA4BA,EAAUsN,GAC3C,GAAKA,EA2BL,OAxBAtN,EAASrgB,SAASihB,I,IACZA,EAAJ,GAAwB,QAApBA,EAAAA,EAAQuL,oBAARvL,IAAAA,OAAAA,EAAAA,EAAsB7iB,OACxB,IAAK,IAAIgI,EAAI,EAAGA,EAAI6a,EAAQuL,aAAapuB,OAAQgI,IAAK,CACpD,MAAMwnB,EAAM3M,EAAQuL,aAAapmB,GACjC,IAAIynB,EAAWF,EAAMC,EAAIE,QAGpBD,GAA2B,MAAfD,EAAIE,SACnBD,EAAW,CACTE,SAAU,UAIdH,EAAU,MAAIC,aAAAA,EAAAA,EAAUE,WAAY,GACpCH,EAAU,MAAIC,aAAAA,EAAAA,EAAU7e,OAAQ,GAChC4e,EAAa,SAAIC,aAAAA,EAAAA,EAAUG,UAAW,GAEtC,MAAMlD,EAAyB,IAApB7c,OAAO2f,EAAIxH,OACjBtb,MAAMggB,KACT8C,EAAU,MAAIK,EAAAA,EAAAA,UAASnD,GAAIhnB,OAAO,uBAEtC,CACF,IAEKuc,CACT,EAyEA,GA5IO,SAA8BA,GAQnC,OAPAhZ,IAAAA,KAAOgZ,GAAWY,IAChBA,EAAQiN,kBAAoB7mB,IAAAA,KAAO4Z,EAAQ1H,OAAQgB,GAAqC,MAA5BA,EAAK4T,qBACjElN,EAAQmN,aAAc,EACK,MAAvBnN,EAAQwL,aACVxL,EAAQmN,aAAc,EACxB,IAEK/N,CACT,EAmIA,GAjIO,SAA4BA,EAAUgO,GAI3C,OAHAhnB,IAAAA,KAAOgZ,GAAWY,IAChBA,EAAQoN,cAAgBA,CAAa,IAEhChO,CACT,EA4HA,GAvEO,SAA2BiO,EAAaC,GAE7C,MAAMC,EAAgBD,EAAetN,QAAQngB,OAU7C,OATI0tB,IACFF,EAWJ,SAAwBjO,EAAUmO,GAChC,OAAI3K,EAAc2K,GACTnnB,IAAAA,OAASgZ,GAAWY,GAClB4C,EAAiB2K,GAAexrB,KAAKie,EAAQ0L,eAG/CtlB,IAAAA,OAASgZ,GAAWY,GAClBA,EAAQ0L,cAAgB6B,GAGrC,CArBkBC,CAAeH,EAAaE,IAIvCD,EAAetvB,QAAQyvB,qBAC1BJ,EAAcjnB,IAAAA,OAASinB,GAAcrN,IAAaA,EAAQmN,eAGrDE,CACT,EA0DA,GA5CO,SAAsBvC,EAAwBnN,G,IAC/CA,EAEOA,EAGX,MALqC,cAAnB,QAAdA,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBmB,cAClBgM,EAAW1kB,IAAAA,QAAU0kB,EAAU,CAAC,WAAY,WAAY,CAAC,OAAQ,SACvB,gBAAnB,QAAdnN,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBmB,gBACzBgM,EAAW1kB,IAAAA,QAAU0kB,EAAU,CAAC,YAAa,WAAY,CAAC,OAAQ,UAE7DA,CACT,EAqCA,GAnCO,SAAqBA,EAAiBlS,GAC3C,MAAM8U,EAA4B,CAChC3f,KAAM,WACN2J,KAAMkM,EAAAA,UAAAA,MACNpkB,OAAQ,IAAI8nB,EAAAA,YAAYwD,GACxBzH,OAAQ,CACNC,OAAQ,CACN5L,KAAM,cAYZ,MAP4B,CAC1B3J,KAAM,WACN8X,OAAOjN,aAAAA,EAAAA,EAAOiN,QAAS,IACvB5C,OAAQ,CAACyK,GACTvwB,OAAQ2tB,EAAS3tB,OAIrB,E,0BC5NO,MAAMwwB,GAkBXC,aAAarM,EAAMsM,EAAUC,GAC3B,OAuDJ,SAAsBvM,EAAMsM,EAAUC,EAAW5xB,GAE/C,OAAO,WACAA,EAAKuH,MAAMoqB,KACd3xB,EAAKuH,MAAMoqB,GAAY,CAAC,GAG1B,MAAME,EAAc7xB,EAAKuH,MAAMoqB,GACzBG,EAAOC,GAAelc,WAC5B,OAAI7V,EAAKgyB,eAAiBhyB,EAAKiyB,WAAWJ,EAAYC,IAC7CI,QAAQC,QAAQN,EAAYC,GAAMzxB,OAElCglB,EAAK+M,MAAMR,EAAW/b,WAAWwc,MAAM5pB,SAC7B/G,IAAX+G,IACFopB,EAAYC,GAAQ,CAClBzxB,MAAOoI,EACPumB,UAAWvuB,KAAKD,QAGbiI,IAGb,CACF,CA9EWipB,CAAarM,EAAMsM,EAAUC,EAAWtwB,KACjD,CAKAgxB,QAAQjN,EAAMsM,EAAUC,GAKtB,OAJKtwB,KAAKixB,SAASZ,KACjBrwB,KAAKixB,SAASZ,GAAY,CAAC,GAyBjC,SAAkBtM,EAAMmN,EAAeZ,GAErC,OAAO,WACL,MAAME,EAAOC,GAAelc,WAe5B,OAdK2c,EAAcV,KACjBU,EAAcV,GAAQI,QAAQC,QAC5B9M,EACG+M,MAAMR,EAAW/b,WACjBwc,MAAM5pB,IACL+pB,EAAcV,GAAQ,KACfrpB,KAERgqB,OAAO3G,IAEN,MADA0G,EAAcV,GAAQ,KAChBhG,CAAG,MAIV0G,EAAcV,EACvB,CACF,CA1CWY,CAASrN,EADM/jB,KAAKixB,SAASZ,GACCC,EACvC,CAEAe,iBAAiBtN,EAAMsM,EAAUC,GAC/B,MAAMgB,EAAYtxB,KAAKgxB,QAAQjN,EAAMsM,EAAUC,GAC/C,OAAOtwB,KAAKowB,aAAakB,EAAWjB,EAAUC,EAChD,CAEAK,WAAWJ,GACT,GAAIA,EAAa,CACf,MAAMgB,EAAapyB,KAAKD,MAAQqxB,EAAY7C,UAC5C,QAAS6C,EAAY7C,WAAa6D,EAAavxB,KAAKwxB,IACtD,CACE,OAAO,CAEX,CAvCAzxB,YAAY0xB,GACVzxB,KAAK0wB,aAAee,EAAaC,QACjC1xB,KAAKwxB,IAAMC,EAAaD,KAAO,IAG/BxxB,KAAKiG,MAAQ,CAAC,EACdjG,KAAKixB,SAAW,CAAC,CACnB,EAsFF,SAASR,GAAe5gB,GAEtB,OAGF,SAAiBqM,GACf,IACEvU,EACAgqB,EACAlvB,EAHE+tB,EAAO,EAIX,GAAmB,IAAftU,EAAIvc,OACN,IAAKgI,EAAI,EAAGlF,EAAMyZ,EAAIvc,OAAQgI,EAAIlF,EAAKkF,IACrCgqB,EAAMzV,EAAI0V,WAAWjqB,GACrB6oB,GAAQA,GAAQ,GAAKA,EAAOmB,EAC5BnB,GAAQ,EAGZ,OAAOA,CACT,CAhBSqB,CADUC,KAAKC,UAAUliB,GAElC,CCxGO,MAEMmiB,GAAuB,CAClC,EAAK,UACL,EAAK,cACL,EAAK,cACL,EAAK,eACL,EAAK,gBAGMC,GAAqB,CAChC,EAAK,SACL,EAAK,eAWMC,GAA4B,CACvCC,IAAK,YACLhgB,IAAK,YACL1R,IAAK,YACL2xB,IAAK,iBAOA,MAAMC,GAaXC,sBAAsBC,EAAMC,GAC1B,IAAKA,QAAmBpyB,IAATmyB,EAAoB,CACjC,MAAME,EAAK7pB,IAAAA,MAAO8pB,EAAAA,GAAAA,oBAAmBC,UAAW,CAAEpqB,GAAIgqB,IACtD,IAAKE,EACH,OAAO7B,QAAQgC,OAAO,uBAAuBL,eAE/CC,EAASC,EAAGliB,IACd,CACA,OAAIiiB,GACKE,EAAAA,GAAAA,oBAAmBj0B,IAAI+zB,GAEvB5B,QAAQgC,OAAO,uCAE1B,CAEAC,mBACE,OAAOR,GAAYS,eAAe9yB,KAAK+yB,aAAc/yB,KAAKgzB,gBAAgBjC,MAAM0B,IAC9EzyB,KAAKizB,iBAAmBR,EAAGnG,KAAK/jB,GAE3BvI,KAAKgzB,iBACRhzB,KAAKgzB,eAAiBP,EAAGliB,MAEtBvQ,KAAK+yB,eACR/yB,KAAK+yB,aAAeN,EAAGlqB,IAElBkqB,IAEX,CAlCA1yB,YAAYS,GACVR,KAAK+yB,aAAevyB,EAAQuyB,aAC5B/yB,KAAKgzB,eAAiBxyB,EAAQwyB,eAC9BhzB,KAAKizB,iBAAmB,IAE1B,EAgCF,UACEZ,eACAa,oBA/EiC,IAgFjClB,wBACAC,sBACAkB,kBAnE+B,CAC/BhB,IAAK,MACLhgB,IAAK,MACL1R,IAAK,MACL2xB,IAAK,MACLtQ,MAAO,SA+DPoQ,8B,0BCtFF,2B,qSAWA,MAGMkB,IAAuD3W,OAATA,EAAAA,gBAASA,IAATA,EAAAA,eAAAA,EAAAA,EAAAA,UAAAA,gBAA4B4W,KAAAA,eAAqBA,KAAAA,eAO9F,MAAMC,GA2BX1H,QAAQ2H,EAAgBha,GACtB,OAAKvZ,KAAK6D,QAIH7D,KAAKwzB,kBAAkBD,EAAQha,GAH7BvZ,KAAKyzB,cAAc1C,MAAK,IAAM/wB,KAAK4rB,QAAQ2H,EAAQha,IAI9D,CAEMia,kBAAkBD,EAAgBha,EAAc,CAAC,G,kBAAvD,gB,IAwBSoS,EAvBP,MAAM+H,EAAoC,CACxClZ,IAAK,EAAKmZ,cACVJ,OAAQ,OACRK,QAAS,CACP,eAAgB,oBAElBC,mBAAmB,EACnBpH,KAAM,CACJsG,aAAc,EAAKA,aACnBQ,SACAha,YAKA,EAAKma,eAAeI,WAAa,EAAKJ,eAAeK,mBACvDL,EAAeK,iBAAkB,GAE/B,EAAKL,eAAeI,YACtBJ,EAAeE,QAAQI,cAAgB,EAAKN,eAAeI,WAG7D,MAAMnI,QAAiBsI,EAAAA,GAAAA,iBAAgBC,MAAWR,GAAgBS,YAClE,OAAOxI,SAAc,QAAdA,EAAAA,EAAUc,YAAVd,IAAAA,OAAAA,EAAAA,EAAgBxkB,MACzB,GAzBA,E,CA8BAitB,aACE,OAAOp0B,KAAKwzB,kBAAkB,kBAChC,CAEAC,cACE,OAAIzzB,KAAK6D,QACA+sB,QAAQC,QAAQ7wB,KAAK6D,UAGzB7D,KAAKq0B,oBACRr0B,KAAKq0B,kBAAoBzD,QAAQC,QAC/B7wB,KAAKo0B,aAAarD,MAAMltB,IAClBA,EACFiM,QAAQ2a,IAAI,4BAA4B5mB,KAExCiM,QAAQ2a,IAAI,sDAGdzqB,KAAK6D,QAAUA,GA7FM,QA8FrB7D,KAAKq0B,kBAAoB,KAClBxwB,OAIN7D,KAAKq0B,kBACd,CAEAC,qBACE,OAAO3wB,KAAAA,IAAW3D,KAAK6D,QAAS,QAClC,CAMA0wB,iBAAiB3G,EAAiB3J,EAAiBuQ,EAAiB3G,GAC7D2G,IACHA,EAAS7wB,KAAAA,IAAW3D,KAAK6D,QAAS,SV1FE,EAHP,GUgG/B,MAAM0V,EAAc,CAClBkb,SAAU7G,EACV3J,QAASA,EACTuQ,OAAQA,GAOV,YAJiBp0B,IAAbytB,IACFtU,EAAOsU,SAAWA,GAGb7tB,KAAK4rB,QAAQ,oBAAqBrS,EAC3C,CAEAmb,YAOE,OAAO10B,KAAK4rB,QAAQ,gBANL,CACb+I,OAAQ,CAAC,OAAQ,WACjBC,UAAW,OACXC,YAAY,GAIhB,CAEAC,SAASC,GACP,MAAMxb,EAAc,CAClBob,OAAQ,CAAC,SAAU,OAAQ,QAC3BC,UAAW,QAMb,OAJIG,IACFxb,EAAOwb,SAAWA,GAGb/0B,KAAK4rB,QAAQ,WAAYrS,EAClC,CAEMyb,QAAQC,G,kBAAd,gBACE,GAAI,EAAKX,qBACP,MAAO,GAGT,MAAM/a,EAAS,CACbob,OAAQ,SACRM,QAASA,GAGX,OAAO,EAAKrJ,QAAQ,kBAAmBrS,EACzC,GAXA,E,CAoBA2b,SAASD,EAASE,EAAQC,EAAUC,GAClC,MAAM9b,EAAc,CAClBob,OAAQ,CAAC,SAAU,OAAQ,OAAQ,aAAc,SAAU,SAAU,QAAS,QAAS,aAAc,SACrGC,UAAW,OACXU,UAAU,EACVjzB,OAAQ,CAAC,EACTkzB,YAAa,CAAC,SAAU,OAAQ,SAiBlC,GAfIN,IACF1b,EAAO0b,QAAUA,GAEfE,IACF5b,EAAOic,eAAiBL,GAET,QAAbC,IAEF7b,EAAOlX,OAAOozB,WAAa,CAAC,EAAG,IAEhB,SAAbL,IAEF7b,EAAOlX,OAAOozB,WAAa,CAAC,EAAG,EAAG,IAGhCz1B,KAAKs0B,uBACP/a,EAAOmc,WAAa,SAChBL,GAAe,CACjB,MAAMM,EAAUN,EAAc/vB,MAAM,KACpC,IAAIswB,EAAY,GAChB,IAAK,IAAIjuB,EAAI,EAAGA,EAAIguB,EAAQh2B,OAAQgI,IAAK,CACvC,MAAMuW,EAAME,EAAauX,EAAQhuB,IACjCiuB,EAAUxpB,KAAK,CAAE8R,IAAKA,EAAIA,IAAKnf,MAAOmf,EAAInf,MAAO6E,SAAU,KAC7D,CACA2V,EAAO0E,KAAO2X,EAEdrc,EAAOsc,SAAW,CACpB,CAGF,OAAO71B,KAAK4rB,QAAQ,WAAYrS,GAAQwX,KAAK3L,EAC/C,CAEA0Q,cAAcC,GACZ,MAAMxc,EAAc,CAClBwc,QAASA,EACTpB,OAAQ,CAAC,SAAU,OAAQ,OAAQ,aAAc,SAAU,SAAU,QAAS,QAAS,aAAc,SACrGW,UAAU,EACVC,YAAa,CAAC,SAAU,SAO1B,OAJIv1B,KAAKs0B,uBACP/a,EAAOmc,WAAa,UAGf11B,KAAK4rB,QAAQ,WAAYrS,GAAQwX,MAAM3X,GAAUgM,EAAkBhM,IAC5E,CAEA4c,UAAUf,GACR,MAAM1b,EAAS,CACbob,OAAQ,SACRM,QAASA,GAGX,OAAOj1B,KAAK4rB,QAAQ,gBAAiBrS,EACvC,CAEA0c,cAAcC,GACZ,MAAM3c,EAAS,CACbob,OAAQ,SACRuB,aAAcA,EACdX,YAAa,CAAC,SAAU,SAE1B,OAAOv1B,KAAK4rB,QAAQ,gBAAiBrS,EACvC,CAEA4c,kBAME,OAAOn2B,KAAK4rB,QAAQ,gBALL,CACb+I,OAAQ,SACRyB,aAAa,GAIjB,CAEAC,aAAarP,GACX,MAAMzN,EAAS,CACbob,OAAQ,CAAC,aACToB,QAAS/O,GAEX,OAAOhnB,KAAK4rB,QAAQ,WAAYrS,GAAQwX,MAAM3X,GAAWA,EAAMzZ,OAASyZ,EAAM,GAAGkd,UAAY,MAC/F,CAUAC,WAAWnd,EAAOod,EAAUC,GAE1B,MAAMC,EAAgB9tB,IAAAA,QAAUwQ,EAAO,cACjC6X,EAAWroB,IAAAA,IAAM8tB,GAAe,CAACtd,EAAOqc,KAC5C,MACMlc,EAAc,CAClBob,OAAQ,SACRhO,QAAS8O,EACTM,QAJcntB,IAAAA,IAAMwQ,EAAO,UAK3Bwb,UAAW,QACX+B,UAAW,MACXC,UAAWJ,GAQb,OAJIC,IACFld,EAAOsd,UAAYJ,GAGdz2B,KAAK4rB,QAAQ,cAAerS,EAAO,IAG5C,OAAOqX,QAAQkG,IAAI7F,GAAUF,KAAKnoB,IAAAA,QACpC,CAWAmuB,qBAAqB3d,EAAOod,EAAUC,GAEpC,MAAMC,EAAgB9tB,IAAAA,QAAUwQ,EAAO,cACjC6X,EAAWroB,IAAAA,IAAM8tB,GAAe,CAACtd,EAAOqc,KAC5C,MACMlc,EAAc,CAClBob,OAAQ,SACRqC,MAAOvB,EACPM,QAJcntB,IAAAA,IAAMwQ,EAAO,UAK3Bwb,UAAW,QACX+B,UAAW,MACXC,UAAWJ,GAQb,OAJIC,IACFld,EAAOsd,UAAYJ,GAGdz2B,KAAK4rB,QAAQ,YAAarS,EAAO,IAG1C,OAAOqX,QAAQkG,IAAI7F,GAAUF,KAAKnoB,IAAAA,QACpC,CAEAquB,YAAY7d,EAAOwd,EAAWC,EAAWpB,GACvC,MAGMlc,EAAc,CAClBob,OAAQ,CAAC,SAAU,QAASc,GAC5BM,QAJcntB,IAAAA,IAAMwQ,EAAO,UAK3Bwd,UAAWA,GAQb,OAJIC,IACFtd,EAAOsd,UAAYA,GAXR72B,KAcD4rB,QAAQ,YAAarS,EACnC,CAEA2d,aAAaC,GACX,MAAM5d,EAAS,CACbob,OAAQ,SACRwC,WAAYA,GAEd,OAAOn3B,KAAK4rB,QAAQ,cAAerS,EACrC,CAGA6d,YAAYD,GACV,MAAM5d,EAAS,CACbob,OAAQ,SACRwC,WAAYA,GAEd,OAAOn3B,KAAK4rB,QAAQ,cAAerS,EACrC,CAEA8d,aAIE,OAAOr3B,KAAK4rB,QAAQ,UAHL,CACb+I,OAAQ,UAGZ,CAEA2C,OAAOH,EAAYzN,EAAWlpB,GAC5B,MAAOg2B,EAAUe,GAAU7N,EAC3B,IAAI8N,EAAY,CAAC,CAAEttB,KAAMssB,EAAUhsB,GAAI+sB,IACX,SAAxB/2B,EAAQ4gB,YAEVoW,EAAYC,GAAkB/N,EADbgO,GAAel3B,EAAQ2rB,aAEP,SAAxB3rB,EAAQ4gB,cAEjBoW,EAAYC,GAAkB/N,EADbtE,EAAoB5kB,EAAQ4gB,aAAe,MAI9D,MAAM7H,EAAc,CAClB4d,aACAK,aAGF,OAAOx3B,KAAK4rB,QAAQ,iBAAkBrS,EACxC,CAEMoe,SAASR,EAAYzN,EAAWlpB,G,kBAAtC,gBACE,MAAOg2B,EAAUe,GAAU7N,EAC3B,IAAI8N,EAAY,CAAC,CAAEttB,KAAMssB,EAAUhsB,GAAI+sB,IACvC,GAA4B,SAAxB/2B,EAAQ4gB,YAAwB,CAClC,MAAMhE,EAAWsa,GAAel3B,EAAQ2rB,YACxCqL,EAAYC,GAAkB/N,EAAWtM,EAC3C,MAAO,GAA4B,SAAxB5c,EAAQ4gB,YAAwB,CACzC,MAAMhE,EAAWgI,EAAoB5kB,EAAQ4gB,aAAe,IAC5DoW,EAAYC,GAAkB/N,EAAWtM,EAC3C,CAEA,MAAM7D,EAAc,CAClBob,OAAQ,SACRwC,cAGIS,QAAmB,EAAKhM,QAAQ,UAAWrS,GACjD,GAA0B,IAAtBqe,EAAWj4B,OACb,MAAO,CAAC,EAEV,MAMMk4B,EAAiB,CACrBC,MAPUF,EAAW,GAOVE,MACXX,aACAY,YAAavB,EACbwB,UAAWT,EACXU,QAAS3b,KAAKnK,IAAIqlB,EAAU73B,OAAQ,MAGhCu4B,QAAoB,EAAKtM,QAAQ,aAAciM,GACrD,GAA2B,IAAvBK,EAAYv4B,OACd,MAAO,CAAC,EAGV,MAAMw4B,EAAuB,CAAC,EAiB9B,OAhBAD,EAAYf,WAAW51B,SAAS4nB,IAC9BgP,EAAgBhP,GAAa,CAC3BC,IAAK,GACN,IAEH8O,EAAYE,IAAI72B,SAAQ,CAAC82B,EAAS1wB,KAChC0wB,EAAQ92B,SAAQ,CAAC62B,EAAKlM,KACpBiM,EAAgBD,EAAYf,WAAWjL,IAAI9C,IAAIhd,KAAK,CAClDksB,aAAcF,EAAIG,SAClBC,OAAQJ,EAAIvZ,OACZuK,IAAKgP,EAAIA,IACTluB,KAAMguB,EAAYD,QAAQtwB,GAAGowB,YAC7BvtB,GAAI0tB,EAAYD,QAAQtwB,GAAGqwB,WAC3B,GACF,IAEGG,CACT,GAzDA,E,CA2DMM,OAAOX,EAAOX,EAAYzN,EAAWlpB,G,kBAA3C,gBACE,MAAOg2B,EAAUe,GAAU7N,EAC3B,IAAI8N,EAAY,CAAC,CAAEttB,KAAMssB,EAAUhsB,GAAI+sB,IACvC,GAA4B,SAAxB/2B,EAAQ4gB,YAAwB,CAClC,MAAMhE,EAAWsa,GAAel3B,EAAQ2rB,YACxCqL,EAAYC,GAAkB/N,EAAWtM,EAC3C,MAAO,GAA4B,SAAxB5c,EAAQ4gB,YAAwB,CACzC,MAAMhE,EAAWgI,EAAoB5kB,EAAQ4gB,aAAe,IAC5DoW,EAAYC,GAAkB/N,EAAWtM,EAC3C,CAEA,MAAMya,EAAiB,CACrBC,QACAX,aACAY,YAAavB,EACbwB,UAAWT,EACXU,QAAS3b,KAAKnK,IAAIqlB,EAAU73B,OAAQ,MAItC,aAD0B,EAAKisB,QAAQ,aAAciM,EAEvD,GArBA,E,CAuBAa,YAAY3D,EAAUE,EAASO,EAAgBh1B,GAC7C,MAAM,SAAEg2B,EAAQ,OAAEe,EAAM,OAAEoB,EAAM,WAAExW,EAAU,MAAEyW,EAAK,aAAE9K,EAAY,KAAE7P,GAASzd,EAEtE+Y,EAAc,CAClBob,OAAQ,SACRkE,mBAAoB,SACpBC,sBAAuB,SACvBpD,WAAY,SACZqD,OAAQ,IACRC,OAAQ,IACRpE,UAAW,CAAC,WACZ+B,UAAW,OACXd,SAAU,IAEVd,WACAE,UACAO,iBACAmD,UAwBF,OArBIxW,IACF5I,EAAO4I,WAAaA,QAGD/hB,IAAjB0tB,IACFvU,EAAOuU,aAAeA,GAGpB7P,IACF1E,EAAO0E,KAAOA,GAGZ2a,IACFrf,EAAOqf,MAAQA,IAGbpC,GAAYe,KACdhe,EAAOqd,UAAYJ,EACnBjd,EAAOsd,UAAYU,GAGdv3B,KAAK4rB,QAAQ,cAAerS,GAAQwX,KAAK3L,EAClD,CAEA6T,iBAAiBC,GACf,MAAM3f,EAAc,CAClBob,OAAQ,SACRuE,WAAYA,EACZC,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,aAAc,CAAC,OAAQ,WACvBlE,YAAa,CAAC,SAAU,OAAQ,OAAQ,qBAAsB,eAAgB,eAC9EmE,YAAa,CAAC,SAAU,OAAQ,OAAQ,aAGxCC,aAAc,KAGhB,OAAO35B,KAAK4rB,QAAQ,cAAerS,GAAQwX,KAAK3L,EAClD,CAEAwU,YAAY7E,EAAUE,EAASO,EAAgBh1B,GAC7C,MAAM,aAAEq5B,EAAY,YAAElK,EAAW,SAAE6G,EAAQ,OAAEe,GAAW/2B,EAElD+Y,EAAc,CAClBob,OAAQ,SACRI,SAAUA,EACVE,QAASA,EACTO,eAAgBA,EAChB2D,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfE,WAAW,EACXC,eAAe,EAEfn3B,OAAQ,CACNtD,MAAO,GAET06B,aAAc,CAAC,UAAW,QAC1BlE,YAAa,CAAC,SAAU,OAAQ,OAAQ,qBAAsB,gBAC9DmE,YAAa,CAAC,SAAU,OAAQ,OAAQ,aACxCI,gBAAiB,SACjBpE,WAAY,UAkBd,OAfImE,IAAiBhhB,EAAiBC,SACpCS,EAAOlX,OAAOtD,MAAQ,EACb86B,IAAiBhhB,EAAiBE,QAAU8gB,IAAiBhhB,EAAiBG,UACvFO,EAAOlX,OAAOtD,MAAQ,CAAC,EAAG,IAGxB4wB,IACFpW,EAAOoW,aAAc,IAGnB6G,GAAYe,KACdhe,EAAOwgB,gBAAkBvD,EACzBjd,EAAOygB,eAAiBzC,GAGnBv3B,KAAK4rB,QAAQ,cAAerS,EACrC,CAEA0gB,UAAUC,EAAW1D,EAAUe,EAAQ4C,EAAYvB,GACjD,MAAMrf,EAAc,CAClBob,OAAQ,SACRiC,UAAWJ,EACXK,UAAWU,EACX2C,UAAWA,EACXE,oBAAqB,SACrB7E,YAAa,SACbx2B,MAAOo7B,GAST,OANIvB,IACFrf,EAAOqf,MAAQA,EACfrf,EAAOqb,UAAY,QACnBrb,EAAOod,UAAY,QAGd32B,KAAK4rB,QAAQ,YAAarS,GAAQwX,KAAK3L,EAChD,CAEAiV,iBAAiBtF,EAAUE,EAASO,EAAgBh1B,GAClD,MAAM,SAAEg2B,EAAQ,OAAEe,EAAM,WAAEpV,EAAU,MAAEyW,EAAK,MAAE75B,EAAK,KAAEkf,GAASzd,EAEvD+Y,EAAc,CAClBob,OAAQ,SACRiC,UAAWJ,EACXK,UAAWU,EACXx4B,MAAO,IACPg6B,OAAQ,IACRC,OAAQ,IACRnD,SAAU,IACVjB,UAAW,CAAC,WACZ+B,UAAW,OACXyD,oBAAqB,SACrB1E,WAAY,SACZoD,sBAAuB,CAAC,gBAAiB,kBACzC/D,WACAE,UACAO,kBAmBF,OAhBIoD,IACFrf,EAAOqf,MAAQA,GAGbzW,IACF5I,EAAO4I,WAAaA,GAGlBpjB,IACFwa,EAAOxa,MAAQA,GAGbkf,IACF1E,EAAO0E,KAAOA,GAGTje,KAAK4rB,QAAQ,YAAarS,GAAQwX,KAAK3L,EAChD,CAEAkV,qBAAqB7F,GACnB,MAAMlb,EAAS,CACbob,OAAQ,SACRF,SAAUA,EACVkF,cAAc,EACdS,oBAAqB,SACrB1E,WAAY,SACZd,UAAW,QACX+B,UAAW,QAGb,OAAO32B,KAAK4rB,QAAQ,YAAarS,EACnC,CAEAghB,eAAe9F,GACb,MAAMlb,EAAS,CACbkb,SAAUA,EACVE,OAAQ,CAAC,UAAW,UAAW,UAAW,QAAS,SACnD6F,aAAa,GAGf,OAAOx6B,KAAK4rB,QAAQ,YAAarS,EACnC,CAEAkhB,gBAAgBhG,GACd,MAAMlb,EAAS,CACbob,OAAQ,SACRF,SAAUA,EACVkF,cAAc,EACdS,oBAAqB,SACrBxF,UAAW,QACX+B,UAAW,QAGb,OAAO32B,KAAK4rB,QAAQ,YAAarS,GAAQwX,MAAMpC,GACtC/lB,IAAAA,OAAS+lB,GAAS+L,GAAUA,EAAM3M,aAAapuB,UAE1D,CAEAg7B,UAAU5E,EAASS,EAAUe,GAC3B,MAAMhe,EAAc,CAClBob,OAAQ,SACRoB,QAASA,EACToD,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfE,WAAW,EACXC,eAAe,EAKfM,gBAAiB,UAQnB,OALItD,GAAYe,KACdhe,EAAOwgB,gBAAkBvD,EACzBjd,EAAOygB,eAAiBzC,GAGnBv3B,KAAK4rB,QAAQ,cAAerS,EACrC,CAEMqhB,cAAc3F,EAASO,EAAgBh1B,G,kBAA7C,gBACE,MAAM,YAAEqhB,EAAW,aAAEiM,EAAY,MAAEhM,EAAK,SAAE0U,EAAQ,OAAEe,GAAW/2B,EACzD+Y,EAAc,CAClBob,OAAQ,SACRM,QAASA,EACT4F,aAAchZ,EACdxf,OAAQ,CAAEtD,MAAO,GACjBo6B,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfE,WAAW,EACXC,eAAe,EACfM,gBAAiB,SACjBL,aAAc,SACdlE,YAAa,CAAC,SAAU,OAAQ,SAG9BzT,GAA0B,IAAjBgM,IACXvU,EAAOuhB,aAAc,EACA,IAAjBhN,IACFvU,EAAOwhB,6BAA8B,IAIrCvF,GAAkBA,EAAe71B,SACnC4Z,EAAOic,eAAiBA,IAGtBgB,GAAYe,KACdhe,EAAOwgB,gBAAkBvD,EACzBjd,EAAOygB,eAAiBzC,GAG1B,IAAI3V,QAAiB,EAAKgK,QAAQ,cAAerS,GAOjD,OANKuI,GAA0B,IAAjBgM,IACZlM,EAAWoZ,GAA4BpZ,EAAUkM,GAC7ChM,IACFF,EAAWA,EAASjiB,SAGjBiiB,CACT,GAzCA,E,CA2CAqZ,gBAAgBhG,EAASO,EAAgBO,EAASv1B,GAChD,MAAM,YAAEqhB,EAAW,aAAEiM,EAAY,MAAEhM,EAAK,SAAE0U,EAAQ,OAAEe,GAAW/2B,EACzD+Y,EAAc,CAClBob,OAAQ,SACRM,QAASA,EACT4F,aAAchZ,EACdxf,OAAQ,CAAEtD,MAAO,GACjBo6B,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfE,WAAW,EACXC,eAAe,EACfM,gBAAiB,SACjBL,aAAc,SACdlE,YAAa,CAAC,OAAQ,QACtBmE,YAAa,CAAC,OAAQ,SAuBxB,OApBI5X,GAA0B,IAAjBgM,IACXvU,EAAOuhB,aAAc,EACA,IAAjBhN,IACFvU,EAAOwhB,6BAA8B,IAIrCvF,GAAkBA,EAAe71B,SACnC4Z,EAAOic,eAAiBA,GAGtBO,GAAWA,EAAQp2B,SACrB4Z,EAAOwc,QAAUA,IAGfS,GAAYe,KACdhe,EAAOwgB,gBAAkBvD,EACzBjd,EAAOygB,eAAiBzC,GAGnBv3B,KAAK4rB,QAAQ,cAAerS,GAAQwX,MAAMnP,IAC1CE,GAA0B,IAAjBgM,IACZlM,EAAWoZ,GAA4BpZ,EAAUkM,GAC7ChM,IACFF,EAAWA,EAASjiB,SAGjBiiB,IAEX,CAEAsZ,gBAAgBjG,EAASO,EAAgB0D,EAAY14B,GACnD,MAAM,YAAEqhB,EAAW,aAAEiM,EAAY,MAAEhM,EAAK,SAAE0U,EAAQ,OAAEe,GAAW/2B,EACzD+Y,EAAc,CAClBob,OAAQ,SACRM,QAASA,EACTiE,WAAYA,EACZ2B,aAAchZ,EACdxf,OAAQ,CAAEtD,MAAO,GACjBo6B,mBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfE,WAAW,EACXC,eAAe,EACfM,gBAAiB,SACjBL,aAAc,SACdlE,YAAa,CAAC,OAAQ,QACtBmE,YAAa,CAAC,OAAQ,SAgBxB,OAbI5X,GAA0B,IAAjBgM,GAAuC,IAAjBA,IACjCvU,EAAOuhB,aAAc,GAGnBtF,GAAkBA,EAAe71B,SACnC4Z,EAAOic,eAAiBA,IAGtBgB,GAAYe,KACdhe,EAAOwgB,gBAAkBvD,EACzBjd,EAAOygB,eAAiBzC,GAGnBv3B,KAAK4rB,QAAQ,cAAerS,GAAQwX,MAAMnP,IAC1CE,GAA0B,IAAjBgM,GAAuC,IAAjBA,IAClClM,EAAWoZ,GAA4BpZ,EAAUkM,GAC7ChM,IACFF,EAAWA,EAASjiB,SAGjBiiB,IAEX,CAEAuZ,aAKE,OAAOn7B,KAAK4rB,QAAQ,YAJL,CACb+I,OAAQ,CAAC,UAAW,SAIxB,CAEAyG,WAAWnG,EAAmBz0B,GAC5B,MAAM+Y,EAAc,CAClBob,OAAQ,SACRM,WAGF,OAAOj1B,KAAK4rB,QAAQ,aAAcrS,GAAQwX,KAAK3L,EACjD,CAEAiW,cAAczgB,EAAgB0gB,GAC5B,MAAM/hB,EAAc,CAClBqB,SACA0gB,YAGF,OAAOt7B,KAAK4rB,QAAQ,iBAAkBrS,EACxC,CAEAgiB,mBAME,OAAOv7B,KAAK4rB,QAAQ,eALL,CACb+I,OAAQ,SACR6G,eAAgB,UAIpB,CAEAC,WAKE,OAAOz7B,KAAK4rB,QAAQ,WAJL,CACb+I,OAAQ,CAAC,SAAU,WAAY,OAAQ,YAI3C,CA31BA50B,YAAY+zB,EAAgBC,EAA0BhB,GACpD/yB,KAAK+yB,aAAeA,EACpB/yB,KAAK2zB,cAAgB,oBAAoB3zB,KAAK+yB,oCAE9C/yB,KAAK0zB,eAAiB,CACpBI,UAAWA,EACXC,gBAAiBA,GAGnB/zB,KAAK07B,SAAW17B,KAAK+2B,qBAGrB/2B,KAAKyzB,aACP,EAi1BF,SAASuH,GAA4BpZ,EAAUkM,GAC7C,OAAqB,IAAjBA,EACKllB,IAAAA,OAASgZ,GAAWY,GAA+C,MAAnCA,EAAQmZ,UAAU7N,eAC/B,IAAjBA,EACFllB,IAAAA,OAASgZ,GAAWY,GAA+C,MAAnCA,EAAQmZ,UAAU7N,eAElDlM,CAEX,CAEA,SAAS8V,GAAevL,GAEtB,MACM/O,EAAWgW,GADO,IACOjH,GAAgC,IAC/D,OAAO7P,KAAK7b,IAAI2c,EV31Bc,KU41BhC,CAEA,SAASqa,GAAkB/N,EAAWtM,GACpC,IAAKoZ,EAAUe,GAAU7N,EACzB,MAAM8N,EAAY,GAGlBhB,EAAWla,KAAKsf,MAAMpF,EAAWpZ,GAAYA,EAC7Cma,EAASjb,KAAKuf,KAAKtE,EAASna,GAAYA,EAExC,IAAK,IAAIzV,EAAI6uB,EAAU7uB,GAAK4vB,EAASna,EAAUzV,GAAKyV,EAClDoa,EAAUprB,KAAK,CACblC,KAAMvC,EACN6C,GAAI7C,EAAIyV,IAIZ,OAAOoa,CACT,CCr3BA,MAMA,GANc,CACZsE,aApCF,SAAsB/F,EAASvN,EAAOgO,EAAUC,EAAUsF,EAAaC,GACrE,MAAMC,EAAkB,aAAaF,OAAiBA,IACtD,MAAO,kDACsCE,kBAAgCD,iCAClExT,6BACYuN,sCAEXS,qCAEAC,qBACGwF,4CAGjB,EAwBEC,YAtBF,SAAqBnG,EAASvN,EAAOgO,EAAUC,EAAUsF,EAAaC,EAAaG,GACjF,MAAMF,EAAkB,aAAaF,OAAiBA,IACtD,MAAO,kDACsCE,kBAAgCD,KAAeG,2BACjF3T,6BACYuN,sCAEXS,qCAEAC,qBACGwF,4CAGjB,EAUEG,UARF,WACE,MAAO,kHAET,GCjCMC,GAAgB,yBAgChBC,GAAa,iCACWD,oFAc9B,GANiB,CACfP,aAxCF,SAAsB/F,EAASvN,EAAOgO,EAAUC,EAAUsF,EAAaC,GAErE,MAAO,mCACuBK,2BAFKN,OAAiBA,cAEoCC,iCAC7ExT,6BACYuN,sCAEXS,qCAEAC,qDAId,EA4BEyF,YA1BF,SAAqBnG,EAASvN,EAAOgO,EAAUC,EAAUsF,EAAaC,EAAaG,GAEjF,MAAO,mCACuBE,2BAFKN,OAAiBA,cAEoCC,KAAeG,2BAC5F3T,6BACYuN,sCAEXS,qCAEAC,qDAId,EAcE2F,UAPF,WACE,OAAOE,EACT,GC1BO,MAAMC,WAAqBlK,GAehCmK,iBAlBU,aAmBJx8B,KAAKizB,iBACPjzB,KAAKy8B,WAAaC,GAElB18B,KAAKy8B,WAAaE,EAEtB,CAKAC,iBACE,MAAMR,EAAYp8B,KAAKy8B,WAAWL,YAClC,OAAOp8B,KAAK68B,eAAeT,EAC7B,CAEA7F,WAAWnd,EAAOod,EAAUC,EAAUj2B,GACpC,MAAM,YAAEw7B,EAAW,YAAED,GAAgBe,GAAWtG,EAAUC,EAAUj2B,GAG9Dk2B,EAAgB9tB,IAAAA,QAAUwQ,EAAO,cACjC6X,EAAWroB,IAAAA,IAAM8tB,GAAe,CAACtd,EAAOqc,KAC5C,MAAMM,EAAUntB,IAAAA,IAAMwQ,EAAO,UAAUvT,KAAK,MACtC2iB,EAAQwJ,GAAqByD,GACnC,IAAIra,EAAQpb,KAAKy8B,WAAWX,aAAa/F,EAASvN,EAAOgO,EAAUC,EAAUsF,EAAaC,GAG1F,OADA5gB,EAAQ0C,EAAa1C,GACdpb,KAAK68B,eAAezhB,EAAM,IAGnC,OAAOwV,QAAQkG,IAAI7F,GAAUF,MAAMgM,GAC1Bn0B,IAAAA,QAAUm0B,IAErB,CAEAC,UAAU5jB,EAAOod,EAAUC,EAAUj2B,GACnC,MAAM,cAAEy8B,GAAkBz8B,GACpB,YAAEw7B,EAAW,YAAED,GAAgBe,GAAWtG,EAAUC,EAAUj2B,GAG9Dk2B,EAAgB9tB,IAAAA,QAAUwQ,EAAO,cACjC6X,EAAWroB,IAAAA,IAAM8tB,GAAe,CAACtd,EAAOqc,KAC5C,MAAMM,EAAUntB,IAAAA,IAAMwQ,EAAO,UAAUvT,KAAK,MACtC2iB,EAAQyJ,GAAmBwD,GACjC,IAAI0G,EAAcvzB,IAAAA,SAAW,CAAC,MAAO,MAAO,MAAO,OAAQq0B,GAAiBA,EAAgB,MAC5Fd,EAAce,GAAYhL,0BAA0BiK,GACpD,IAAI/gB,EAAQpb,KAAKy8B,WAAWP,YAC1BnG,EACAvN,EACAgO,EACAC,EACAsF,EACAC,EACAG,GAIF,OADA/gB,EAAQ0C,EAAa1C,GACdpb,KAAK68B,eAAezhB,EAAM,IAGnC,OAAOwV,QAAQkG,IAAI7F,GAAUF,MAAMgM,GAC1Bn0B,IAAAA,QAAUm0B,IAErB,CAEAF,eAAezhB,GACb,MAAM+hB,EAAW,CACf9U,MAAO,IACPhjB,OAAQ,cACR0tB,aAAc/yB,KAAK+yB,aACnBqK,OAAQhiB,EACRiiB,cAAer9B,KAAK44B,OAGtB,OAAO3E,EAAAA,GAAAA,iBACJqJ,kBAAkB,CACjB9iB,IAAK,gBACL+Y,OAAQ,OACR9G,KAAM,CACJ8Q,QAAS,CAACJ,MAGbpM,MAAMpF,IACL,MAAMoR,EAAUpR,EAASc,KAAKsQ,QAC9B,OAAIA,EAAW,EACNA,EAAW,EAAES,OAEb,IACT,GAEN,CArGAz9B,YAAYS,GACVi9B,MAAMj9B,GAENR,KAAK44B,MAAQp4B,EAAQo4B,OJrBU,IIsB/B54B,KAAKy8B,WAAa,KAElBgB,MAAM5K,mBAAmB9B,MAAK,KAC5B/wB,KAAKw8B,gBAAgB,GAEzB,EA+FF,SAASM,GAAWtG,EAAUC,EAAUj2B,GACtC,MAAM,WAAE2rB,GAAe3rB,EACvB,IAAI,cAAEy8B,GAAkBz8B,EACpBu7B,EAAczf,KAAKuf,KAAK1P,EAAa,KAKzC,MAAMuR,EAAiBphB,KAAKuf,MAAMpF,EAAWD,GAAYuF,GAKzD,OAJAA,EAAczf,KAAKuf,MAAMpF,EAAWD,GAAYkH,GAEhDT,EAAgBA,GAAiB,MAE1B,CAAEjB,YADWkB,GAAY/J,kBAAkB8J,GAC5BlB,cACxB,CC3IA,2B,+FAaA,MAAM5I,GAAoB,CACxBhB,IAAK,OACLhgB,IAAK,MACL1R,IAAK,MACL2xB,IAAK,MACLtQ,MAAO,SAGF,MAAM6b,WAA0BtL,GAgBrCuK,iBACE,OAAO58B,KAAK49B,SAASC,iBAAiB9M,MAAM5pB,GACtCA,EAAOoiB,QAA4B,UAAlBpiB,EAAOoiB,OACnBqH,QAAQgC,OAAO,CACpBnG,KAAM,CACJxI,QAAS,8BAA8B9c,EAAO8c,aAI7C9c,GAEX,CAEAovB,WAAWnd,EAAOod,EAAUC,EAAUj2B,GACpC,MAAM,WAAE2rB,EAAU,gBAAE2R,GAAoBt9B,EACxC,IAAI,cAAEy8B,GAAkBz8B,EACxB,MAAMu7B,EAAczf,KAAKuf,KAAK1P,EAAa,KAErChnB,EAAQ,CAAEqxB,WAAUC,YAC1BwG,EAAgBA,GAAiB,MAGjC,MAAMvG,EAAgB9tB,IAAAA,QAAUwQ,EAAO,cACjC6X,EAAWroB,IAAAA,IAAM8tB,GAAe,CAACtd,EAAOqc,KAC5C,MAAMM,EAAUntB,IAAAA,IAAMwQ,EAAO,UACvBoP,EAAQwJ,GAAqByD,GAC7Bra,EAAQpb,KAAK+9B,kBAAkBhI,EAASvN,EAAOrjB,EAAO42B,EAAakB,EAAea,GACxF,OAAO99B,KAAKg+B,oBAAoB5iB,EAAM,IAGxC,OAAOwV,QAAQkG,IAAI7F,GAChBF,KAAKnoB,IAAAA,SACLmoB,MAAMgM,GAyCb,SAAqCA,GACnC,IAAKA,EACH,MAAO,GAGT,MAAMS,EAAsB,GAC5B,IAAK,IAAI71B,EAAI,EAAGA,EAAIo1B,EAAQp9B,OAAQgI,IAAK,CACvC,MAAMR,EAAS41B,EAAQp1B,GAEvB,GAAIR,EAAO4I,MAAO,CAChB,MAAMA,EAAQ,mBAAmB5I,EAAO4I,QACxC,OAAO6gB,QAAQgC,OAAO,IAAItmB,MAAMyD,GAClC,CAEA,IAAK5I,IAAWA,EAAOyjB,OACrB,SAGF,MAAMqT,EAAmBlB,EAAQp1B,GAAGijB,OAEpC,IAAK,IAAIsT,EAAI,EAAGA,EAAID,EAAiBt+B,OAAQu+B,IAAK,C,IAkBxCC,EAQEA,EAzBV,MAAMA,EAAeF,EAAiBC,GAChCE,EAAW,GACXC,EAAe,GACrB,GAAIF,EAAan8B,OACf,IAAK2F,EAAI,EAAGA,EAAIw2B,EAAan8B,OAAOrC,OAAQgI,IAC1Cy2B,EAAShyB,KAAK+xB,EAAan8B,OAAO2F,GAAG,IACrC02B,EAAajyB,KAAK+xB,EAAan8B,OAAO2F,GAAG,IAG7C,MAAMqjB,EAA2B,CAC/Bza,KAAMma,EAAAA,4BACNxQ,KAAMkM,EAAAA,UAAAA,KACNP,OAAQ,CAAC,EACT7jB,OAAQ,IAAI8nB,EAAAA,YAAYsU,IAGpBnT,EAAmC,CACvC1a,KAAM4tB,SAAkB,QAAlBA,EAAAA,EAAclgB,YAAdkgB,IAAAA,OAAAA,EAAAA,EAAoBnX,OAC1B9M,KAAMkM,EAAAA,UAAAA,OACNP,OAAQ,CAAC,EACT7jB,OAAQ,IAAI8nB,EAAAA,YAAYuU,IAG1Bb,EAAOpxB,KACL,IAAIgc,EAAAA,iBAAiB,CACnB7X,KAAM4tB,SAAkB,QAAlBA,EAAAA,EAAclgB,YAAdkgB,IAAAA,OAAAA,EAAAA,EAAoBnX,OAC1BvB,OAAQ,CAACuF,EAAWC,KAG1B,CACF,CAEA,OAAOuS,EAAO17B,KAAKkf,IAAMsd,EAAAA,EAAAA,iBAAgBtd,IAC3C,CA9Feud,CAA4BxB,IAEzC,CAEAC,UAAU5jB,EAAOod,EAAUC,EAAUj2B,GAEnC,OADAA,EAAQs9B,gBAAkB99B,KAAK89B,gBACxB99B,KAAKu2B,WAAWnd,EAAOod,EAAUC,EAAUj2B,EACpD,CAEAu9B,kBAAkBhI,EAASvN,EAAOrjB,EAAO42B,EAAaC,EAAa8B,GACjE,MAAM,SAAEtH,EAAQ,SAAEC,GAAatxB,EAE/B,IAAIpG,EAAQ,QAYZ,OAXI++B,IACF/+B,EAAQmzB,GAA0B8J,IAAgB,aAU7Cle,EANO,UAFMqV,GAAkB6I,IAAgBA,MAEdj9B,gCAPpB++B,EAAkB,IAAIA,OAAqBtV,KAAW,IAAIA,kCAMzDxoB,KAAKw+B,iBAAiBzI,0CAIVS,0CACAC,wCACFsF,2BAEjC,CAEAyC,iBAAiBzI,GAEf,MAAO,IADcA,EAAQj0B,KAAKklB,GAAW,eAAeA,OAAWnhB,KAAK,UAE9E,CAEMm4B,oBAAoB5iB,G,sBAA1B,YACE,MAAMqR,QAAa,EAAKmR,SAASa,aAAarjB,GAAO+Y,YACrD,OAAO1H,aAAAA,EAAAA,EAAMsQ,UAAW,EAC1B,E,mLAhFAh9B,YAAYS,GACVi9B,MAAMj9B,GACNR,KAAK89B,gBAAkBt9B,EAAQs9B,gBAC/BL,MAAM5K,mBAAmB9B,MAAM0B,IAC7BzyB,KAAK49B,SAAWnL,EACTA,IAEX,EChCF,2B,qSAoBA,MAAMiM,GAAsB,CAC1B,aACA,WACA,YACA,WACA,UACA,WACA,YACA,aACA,gBACA,YACA,YACA,gBACA,gBACA,kBACA,kBACA,kBACA,eACA,SACA,aACA,aACA,iBACA,uBACA,cACA,mBACA,mBACA,aACA,mBACA,aACA,YAGIC,GAAoB,CACxB,YACA,WACA,UACA,WACA,YACA,aACA,gBACA,eACA,aACA,mBACA,aACA,YAGIC,GAAmB,CACvB,aACA,WACA,YACA,gBACA,YACA,YACA,gBACA,gBACA,kBACA,kBACA,kBACA,eACA,mBACA,aACA,iBACA,uBACA,aACA,gBACA,mBACA,aACA,YAGK,MAAMC,GAyEXC,gBAAgB/L,EAAcC,EAAgBxyB,GAC5C,OAAO6xB,GAAYS,eAAeC,EAAcC,GAAgBjC,MAAM0B,IACpE,MAAMsM,EAAwB,CAAEhM,eAAcC,kBAO9C,MANgB,aAAZP,EAAGvY,MACL6kB,EAAiBjB,gBAAkBt9B,EAAQw+B,4BAC3Ch/B,KAAKk9B,YAAc,IAAIS,GAAkBoB,IAEzC/+B,KAAKk9B,YAAc,IAAIX,GAAawC,GAE/B/+B,KAAKk9B,WAAW,GAE3B,CAEA+B,kBACE,IAAK,MAAMrT,KAAW8S,GACpB1+B,KAAKk/B,UAAUtT,GAAW5rB,KAAKm/B,aAAanO,QAAQhxB,KAAKk/B,UAAUtT,GAAUA,EAAS5rB,KAAKk/B,UAE/F,CAEAE,gBACE,IAAK,MAAMxT,KAAW+S,GACpB3+B,KAAKk/B,UAAUtT,GAAW5rB,KAAKm/B,aAAa/O,aAAapwB,KAAKk/B,UAAUtT,GAAUA,EAAS5rB,KAAKk/B,UAEpG,CAEAG,eACE,IAAK,MAAMzT,KAAWgT,GACpB5+B,KAAK4rB,GAAW5rB,KAAKk/B,UAAUtT,GAAS0T,KAAKt/B,KAAKk/B,UAEtD,CAeAtC,iBACE,IAAI2C,EACAC,EACJ,OAAOx/B,KAAKo0B,aACTrD,MAAMltB,IACL07B,EAAgB17B,EACT7D,KAAKy/B,kBAEb1O,MAAK,IACA/wB,KAAK0/B,yBACA1/B,KAAKk9B,YAAYN,iBAEjBhM,QAAQC,YAGlBM,OAAOphB,GACC6gB,QAAQgC,OAAO7iB,KAEvBghB,MAAM4O,IACDA,IACFH,EAAoB,CAClBI,OAAQ5/B,KAAKk9B,YAAY2C,oBAAsB7/B,KAAKk9B,YAAYjK,iBAChET,OAAQxyB,KAAKk9B,YAAYlK,iBAGtB,CAAEuM,gBAAeC,uBAE9B,CAEMpL,a,kBAAN,gBAQE,OAPK,EAAKvwB,UACJ,EAAKq7B,UAAUr7B,QACjB,EAAKA,QAAU,EAAKq7B,UAAUr7B,QAE9B,EAAKA,cAAgB,EAAKq7B,UAAUzL,eAGjC,EAAK5vB,OACd,GATA,E,CAWAi8B,uBACE,MAAMj8B,EAAU7D,KAAK6D,SAAW7D,KAAKk/B,UAAUr7B,QAC/C,OAAOA,GAAUF,KAAAA,GAAUE,EAAS,QACtC,CAEAk8B,aACE,MAAMl8B,EAAU7D,KAAK6D,SAAW7D,KAAKk/B,UAAUr7B,QAC/C,OAAOA,GAAUF,KAAAA,IAAWE,EAAS,QACvC,CAEMywB,qB,kBAAN,gBACE,MAAMzwB,QAAgB,EAAKq7B,UAAUzL,cACrC,QAAO5vB,GAAUF,KAAAA,IAAWE,EAAS,QACvC,GAHA,E,CAKAm8B,yBACE,QAAOhgC,KAAK6D,SAAUF,KAAAA,IAAW3D,KAAK6D,QAAS,QACjD,CAEAo8B,mBAAmB9f,EAAQ3f,GACzB,MACM0/B,EAAUt3B,IAAAA,IADF,CAAC,QAAS,OAAQ,cAAe,UAAW,SAC5BE,GAAMqX,EAAOrX,GAAGzG,SAC9C,OAAOrC,KAAKk1B,YAAYgL,EAAS1/B,EACnC,CAEA2/B,oBAAoBhgB,GAClB,MACM+f,EAAUt3B,IAAAA,IADF,CAAC,QAAS,OAAQ,UACFE,GAAMqX,EAAOrX,GAAGzG,SAC9C,OAAOrC,KAAKogC,cAAcF,EAC5B,CAEMG,sBAAsBlgB,G,kBAA5B,gBACE,MACM+f,EADQ,CAAC,QAAS,OAAQ,eACVp+B,KAAKgH,GAAMqX,EAAOrX,GAAGzG,SACrC06B,QAAgBnM,QAAQkG,IAAI,CAAC,EAAKhC,YAAYoL,GAAU,EAAKlL,WAAWkL,KACxEplB,EAAQiiB,EAAQ,GACtB,IAAIuD,EAAqBvD,EAAQ,GAIjC,OAHIuD,EAAKC,iBACPD,EAAO,IAEF,CAACxlB,EAAOwlB,EACjB,GAVA,E,CAYME,qBAAqBrgB,EAAQ3f,G,kBAAnC,gBACE,MACM0/B,EADQ,CAAC,QAAS,OAAQ,cAAe,UAAW,QACpCp+B,KAAKgH,GAAMqX,EAAOrX,GAAGzG,UACpCyY,EAAOwlB,SAAc,EAAKD,sBAAsBlgB,GAEvD,MAAO,CAACrF,EAAOwlB,QADK,EAAKpL,YAAYgL,EAAS1/B,GAEhD,GANA,E,CAQMigC,qBAAqBtgB,EAAQ3f,G,kBAAnC,gBACE,MACM0/B,EADQ,CAAC,QAAS,OAAQ,cAAe,QAAS,WAClCp+B,KAAKgH,GAAMqX,EAAOrX,GAAGzG,UACpCyY,EAAOwlB,SAAc,EAAKD,sBAAsBlgB,GAEvD,MAAO,CAACrF,EAAOwlB,QADQ,EAAKI,gBAAgBR,EAAS1/B,GAEvD,GANA,E,CAQAi/B,eACE,OAAOz/B,KAAKk/B,UAAUxK,WACxB,CAEAA,UAAUiM,GACR,OAAO3gC,KAAKy/B,eAAe1O,MAAMtH,GAAWmX,GAAanX,EAAQkX,IACnE,CAKAE,YAAYF,GACV,OAAO3gC,KAAK00B,UAAUiM,GAAa5P,MAAMtH,IACvC,MAAMsL,EAAWnsB,IAAAA,IAAM6gB,EAAQ,WAC/B,OAAOzpB,KAAKk/B,UAAUpK,SAASC,EAAS,GAE5C,CAEAD,SAAS6L,EAAcrgB,GACrB,OAAOtgB,KAAK6gC,YAAYF,GAAa5P,MAAMjW,GAAU8lB,GAAa9lB,EAAOwF,IAC3E,CAKA,WAAiBqgB,EAAargB,G,kBAA9B,gBAEE,aADM,EAAK8T,aACN,EAAK0L,uBAIH,EAAKhL,SAAS6L,EAAargB,GAAYyQ,MAAMjW,IAClD,MAAMma,EAAUrsB,IAAAA,IAAMkS,EAAO,UAC7B,OAAO,EAAKokB,UAAUlK,QAAQC,EAAQ,IAL/B,EAOX,GAVA,E,CAYMD,QAAQ2L,EAAcrgB,EAAawgB,G,kBAAzC,sBACQ,EAAK1M,aACX,MAAM2M,GAAiB,EAAKjB,uBAE5B,OAAO,EAAKhL,SAAS6L,EAAargB,GAAYyQ,MAAMjW,IAClD,MAAMma,EAAUrsB,IAAAA,IAAMkS,EAAO,UAC7B,GAAIgmB,IAAcC,EAChB,OAAO,EAAK7B,UAAUlK,QAAQC,GAASlE,MAAMuP,GAASU,GAAcV,EAAMQ,KACrE,CACL,MAAMG,EAA6BhM,EAGnC,OAFAgM,EAAahM,QAAUA,EACvBgM,EAAaV,gBAAiB,EACvB3P,QAAQC,QAAQoQ,EACzB,IAEJ,GAfA,E,CAiBMC,aAAaP,EAAargB,G,kBAAhC,gBACE,MAAMxF,QAAc,EAAKga,SAAS6L,EAAargB,GACzC2U,EAAUna,aAAAA,EAAAA,EAAOhZ,KAAKQ,GAAMA,EAAEsY,SACpC,OAAO,EAAKskB,UAAUlJ,UAAUf,EAClC,GAJA,E,CAMMmL,WAAWO,EAAcrgB,EAAaO,G,kBAA5C,gBAEE,OA2YoB7S,QA5YI,EAAKkzB,aAAaP,EAAargB,GA6YrD8E,EADwB/iB,EA3YOwe,GAoXrC,SAAwB7S,EAAMmzB,GAC5B,MAAMC,EAAgBhc,EAAiB+b,GACvC,OAAOv4B,IAAAA,OAASoF,GAAOqzB,GACdD,EAAc78B,KAAK88B,aAAAA,EAAAA,EAAS3mB,QAEvC,CAoBW4mB,CAAetzB,EAAM3L,GAzChC,SAAuB2L,EAAMuC,GAE3B,OADe3H,IAAAA,OAASoF,EAAM,CAAE0M,MAAOnK,KAI9B,EAEX,CAoCWgxB,CAAcvzB,EAAM3L,GAJ/B,IAAwB2L,EAAM3L,CA1Y5B,GAHA,E,CAKMm/B,YAAYb,EAAcrgB,EAAa+U,G,kBAA7C,gBACE,MAAMjc,QAAc,EAAKqoB,YAAYd,EAAargB,EAAY,KAAM,KAAM,CAAC,GAC3E,IAAIrC,EAAqBrV,IAAAA,QACvBwQ,EAAMtX,KAAKa,GACLA,EAAKsb,KACAtb,EAAKsb,KAEL,MAMb,OAFAA,EAAOrV,IAAAA,OAASqV,GAAOja,GAAMA,EAAEka,IAAMla,EAAEjF,OAAS,KAEzC6hC,GADS3iB,EAAKnc,KAAKkC,IAAO,CAAEuM,KAAM6U,EAAsBphB,OAClCqxB,EAC/B,GAdA,E,CAgBMoM,YACJd,EACArgB,EACAwgB,EACAzL,EACA70B,EAAe,CAAC,G,kBALlB,gBAOE,IAAK,EAAK8zB,qBACR,OAAO,EAAKoN,oBAAoBf,EAAargB,EAAYwgB,EAAWzL,EAAe70B,GAGrF,MAAMsa,QAAc,EAAKga,SAAS6L,EAAargB,GACzC2U,EAAUrsB,IAAAA,IAAMkS,EAAO,UAG7B,GAAIsK,EAAciQ,GAAgB,CAChC,MAAMpX,QAAa,EAAKujB,YAAYb,EAAargB,EAAY+U,GAC7DA,EAAgBpX,EAAKnc,KAAKkC,GAAMA,EAAEuM,OAAM1K,KAAK,IAC/C,CAEA,IAAIuT,QAAc,EAAK8lB,UAAUhK,SAASD,OAAS70B,EAAWI,EAAQ40B,SAAUC,GAMhF,OAJK70B,EAAQmhC,oBACXvoB,EAAQxQ,IAAAA,OAASwQ,EAAO,CAAEmQ,OAAQ,aAGvB,EAAKqY,gBAAgBxoB,GAAO,EAC3C,GA3BA,E,CA6BMsoB,oBAAoBf,EAAargB,EAAYwgB,EAAWzL,EAAe70B,EAAe,CAAC,G,kBAA7F,gBACE,MAAM8/B,QAAa,EAAKtL,QAAQ2L,EAAargB,EAAYwgB,GACzD,IAAI1nB,EAEJ,GAAIknB,EAAKC,eACPnnB,QAAc,EAAK8lB,UAAUhK,SAASoL,EAAKrL,aAAS70B,EAAWI,EAAQ40B,cAAUh1B,OAC5E,CACL,MAAM+0B,EAASvsB,IAAAA,IAAM03B,EAAM,iBAC3BlnB,QAAc,EAAK8lB,UAAUhK,cAAS90B,EAAW+0B,EAAQ30B,EAAQ40B,cAAUh1B,EAC7E,CAMA,OAJKI,EAAQmhC,oBACXvoB,EAAQxQ,IAAAA,OAASwQ,EAAO,CAAEmQ,OAAQ,aAGvB,EAAKqY,gBAAgBxoB,GAAO,EAC3C,GAhBA,E,CAkBAwoB,gBAAgBxoB,EAAOkB,GACrB,MAAM2a,EAgVV,SAAoB7b,GAClB,MAAMyoB,EAAUj5B,IAAAA,IAAMwQ,GAAQzW,GACrBiG,IAAAA,IAAMjG,EAAKmY,MAAO,YAE3B,OAAOlS,IAAAA,KAAOA,IAAAA,QAAUi5B,GAC1B,CArVoBC,CAAW1oB,GAC3B,OAAOpZ,KAAKg2B,UAAUf,GAASlE,MAAM1W,IACnCzR,IAAAA,QAAUwQ,GAAQzW,IblWjB,IAAuB4X,IamWED,EAAgB3X,EAAK6X,IAAM7X,EAAK4N,KblWvD4J,EAAc5V,KAAKgW,KamWdD,EACF3X,EAAK6X,IAAM4K,EAAmBziB,EAAM0X,EAAQC,GAE5C3X,EAAK4N,KAAO6U,EAAmBziB,EAAM0X,GAEzC,IAEKjB,IAEX,CAEA8b,SAASyL,EAAcrgB,EAAawgB,EAAYzL,EAAgB9U,EAAa/f,EAAU,CAAC,GACtF,OAAOR,KAAKyhC,YAAYd,EAAargB,EAAYwgB,EAAWzL,EAAe70B,GAASuwB,MAAM3X,GACxF4nB,GAAc5nB,EAAOmH,IAEzB,CAEAwhB,cAAcpB,EAAcrgB,EAAawgB,EAAYvgB,EAAa/f,EAAe,CAAC,GAChF,OAAOR,KAAKk1B,SAASyL,EAAargB,EAAYwgB,EAAW,KAAMvgB,EAAY/f,GAASuwB,MAAM3X,IACxF,IAAIsQ,EAAY,CAAChM,MAASskB,SAAS,EAAG,KAAKC,OAAQvkB,MAASukB,QACxDzhC,EAAQ2E,QACVukB,EAAY,CAAClpB,EAAQ2E,MAAM+E,KAAK+3B,OAAQzhC,EAAQ2E,MAAMqF,GAAGy3B,SAE3D,MAAOzL,EAAUe,GAAU7N,EAE3B,OAAO1pB,KAAKk/B,UAAU3I,WAAWnd,EAAOod,EAAUe,GAAQxG,MAAMpK,GAC1DA,EACa/d,IAAAA,KAAO+d,EAAQ7kB,KAAKK,GAAMA,EAAEpD,SAC7B+C,KAAK/C,IAAW,CAAEwR,KAAMxR,MAE/B,IAET,GAEN,CAEMmjC,cAAcC,G,kBAApB,gBAEE,OAAOvB,SADkB,EAAK1B,UAAUhI,eACRiL,EAClC,GAHA,E,CAKMC,QAAQC,G,kBAAd,gBAEE,OAAOzB,SADY,EAAK1B,UAAU7H,aACRgL,EAC5B,GAHA,E,CAKA3J,YAAYiI,EAAargB,EAAYwgB,EAAWwB,EAAc9hC,GAC5D,MAAMywB,EAAW,CACfjxB,KAAK00B,UAAUiM,GACf3gC,KAAK80B,SAAS6L,EAAargB,GAC3BtgB,KAAKg1B,QAAQ2L,EAAargB,EAAYwgB,IAGxC,OAAOlQ,QAAQkG,IAAI7F,GAChBF,MAAMgM,IACL,MAAOwF,EAAgBC,EAAeC,GAAgB1F,EAChD3hB,EAAa,CAAC,EAYpB,OAVI0lB,IACF1lB,EAAMoa,eAAiB5sB,IAAAA,QAAUA,IAAAA,IAAM65B,EAAc,mBAEnDniB,GAA6B,SAAfA,IAChBlF,EAAM6Z,QAAUrsB,IAAAA,IAAM45B,EAAe,WAEnC7B,IACFvlB,EAAM2Z,SAAWnsB,IAAAA,IAAM25B,EAAgB,YAGlCnnB,CAAK,IAEb2V,MAAM3V,GAAUpb,KAAKk/B,UAAUxG,YAAYtd,EAAM2Z,SAAU3Z,EAAM6Z,QAAS7Z,EAAMoa,eAAgBh1B,KAChGuwB,MAAMzD,IACL,MAAM4L,EAAa5L,aAAAA,EAAAA,EAAUxrB,KAAK4gC,GAAYA,EAAQlV,WACtD,OAAOoD,QAAQkG,IAAI,CAAClG,QAAQC,QAAQvD,GAAWttB,KAAKk/B,UAAUjG,iBAAiBC,IAAa,IAE7FnI,MAAK,EAAEzD,EAAU1L,KAAcyL,GAAyBC,EAAU1L,KAClEmP,MAAMnP,GAAa5hB,KAAK2iC,sBAAsB/gB,EAAU0gB,IAE7D,CAEAM,mBAAmBjC,EAAargB,EAAYwgB,EAAWwB,EAAc9hC,GACnE,MAAM,eAAEouB,GAAmBpuB,EAErBywB,EAAW,CACfjxB,KAAK00B,UAAUiM,GACf3gC,KAAK80B,SAAS6L,EAAargB,GAC3BtgB,KAAKg1B,QAAQ2L,EAAargB,EAAYwgB,IAGxC,OAAOlQ,QAAQkG,IAAI7F,GAChBF,MAAMgM,IACL,MAAOwF,EAAgBC,EAAeC,GAAgB1F,EAChD3hB,EAAa,CAAC,EAYpB,OAVI0lB,IACF1lB,EAAMoa,eAAiB5sB,IAAAA,QAAUA,IAAAA,IAAM65B,EAAc,mBAEnDniB,IACFlF,EAAM6Z,QAAUrsB,IAAAA,IAAM45B,EAAe,WAEnC7B,IACFvlB,EAAM2Z,SAAWnsB,IAAAA,IAAM25B,EAAgB,YAGlCnnB,CAAK,IAEb2V,MAAM3V,GAAUpb,KAAKk/B,UAAU7E,iBAAiBjf,EAAM2Z,SAAU3Z,EAAM6Z,QAAS7Z,EAAMoa,eAAgBh1B,KACrGuwB,MAAMzD,IACL,MAAM4L,EAAa5L,aAAAA,EAAAA,EAAUxrB,KAAK4gC,GAAYA,EAAQlV,WACtD,OAAOoD,QAAQkG,IAAI,CAAClG,QAAQC,QAAQvD,GAAWttB,KAAKk/B,UAAUjG,iBAAiBC,IAAa,IAE7FnI,MAAK,EAAEzD,EAAU1L,KAAc8M,GAAuBpB,EAAU1L,EAAU,CAAEgN,qBAC5EmC,MAAMnP,GAAa5hB,KAAK2iC,sBAAsB/gB,EAAU0gB,IAE7D,CAEA5B,aAAaC,EAAcrgB,EAAawgB,EAAYwB,EAAcvS,EAAgBvvB,GAChF,MAAMywB,EAAW,CACfjxB,KAAK00B,UAAUiM,GACf3gC,KAAK80B,SAAS6L,EAAargB,GAC3BtgB,KAAKg1B,QAAQ2L,EAAargB,EAAYwgB,IAGxC,OAAOlQ,QAAQkG,IAAI7F,GAChBF,MAAMgM,IACL,MAAOwF,EAAgBC,EAAeC,GAAgB1F,EAChD3hB,EAAa,CAAC,EAYpB,OAVI0lB,IACF1lB,EAAMoa,eAAiB5sB,IAAAA,QAAUA,IAAAA,IAAM65B,EAAc,mBAEnDniB,GAA6B,SAAfA,IAChBlF,EAAM6Z,QAAUrsB,IAAAA,IAAM45B,EAAe,WAEnC7B,IACFvlB,EAAM2Z,SAAWnsB,IAAAA,IAAM25B,EAAgB,YAGlCnnB,CAAK,IAEb2V,MAAM3V,GAAUpb,KAAKk/B,UAAUxG,YAAYtd,EAAM2Z,SAAU3Z,EAAM6Z,QAAS7Z,EAAMoa,eAAgBh1B,KAChGuwB,MAAMzD,GAAasT,GAAatT,EAAUyC,KAC1CgB,MAAMzD,IACL,MAAM4L,EAAa5L,aAAAA,EAAAA,EAAUxrB,KAAK4gC,GAAYA,EAAQlV,WACtD,OAAOoD,QAAQkG,IAAI,CAAClG,QAAQC,QAAQvD,GAAWttB,KAAKk/B,UAAUjG,iBAAiBC,IAAa,IAG7FnI,MAAK,EAAEzD,EAAU1L,KAAcyL,GAAyBC,EAAU1L,KAClEmP,MAAMnP,GAAa5hB,KAAK2iC,sBAAsB/gB,EAAU0gB,IAG7D,CAEAK,sBAAsB/gB,EAAU0gB,GAC9B,OAAOtiC,KAAK6iC,mBAAmBP,GAAavR,MAAMjC,IAChD,GAAIwT,GAA+B,SAAhBA,GAA0B1gB,EAAU,CACrD,MAAMkhB,EAAYhU,EAAQhtB,KAAKmtB,GAAUA,EAAM8T,UAC/CnhB,EAAWA,EAASvf,QAAQmgB,IAC1B,IAAK,IAAI7a,EAAI,EAAGA,EAAI6a,EAAQ1H,MAAMnb,OAAQgI,IAAK,CAC7C,MAAMmU,EAAO0G,EAAQ1H,MAAMnT,GAC3B,GAAIm7B,EAAUE,SAASlnB,EAAKiT,cAC1B,OAAO,CAEX,CACA,OAAO,CAAK,GAEhB,CACA,OAAOnN,CAAQ,GAEnB,CAEAihB,mBAAmBP,GACjB,OAAOtiC,KAAKk/B,UAAU/D,aAAapK,MAAMjC,IACvCA,EAAQvtB,SAAS0tB,GAAWA,EAAM1e,KAAO0e,EAAMnT,OACxC8kB,GAAa9R,EAASwT,KAEjC,CAEAW,aAAa7pB,EAAOsQ,EAAWkC,GAC7B,MAAO4K,EAAUe,GAAU7N,EAC3B,OAAI1pB,KAAK0/B,yBACA1/B,KAAKkjC,aAAa9pB,EAAOod,EAAUe,EAAQ3L,GAASmF,MAAMpK,GAC/Dwc,GAAyCxc,EAASvN,EAAOwS,KAGpD5rB,KAAKk/B,UACT3I,WAAWnd,EAAOod,EAAUe,GAC5BxG,MAAMpK,GAAYwc,GAA8Bxc,EAASvN,IAEhE,CAEA4jB,UAAU5jB,EAAOsQ,EAAWkC,GAC1B,MAAO4K,EAAUe,GAAU7N,EAC3B,GAAI1pB,KAAK0/B,yBACP,OAAO1/B,KAAKojC,YAAYhqB,EAAOod,EAAUe,EAAQ3L,GAASmF,MAAMpK,GAC9Dwc,GAAyCxc,EAASvN,EAAOwS,KAEtD,CACL,MAAM5D,EAAY4D,EAAQqR,eAAiBrR,EAAQ5D,UACnD,OAAOhoB,KAAKk/B,UACTxD,SAAStiB,EAAOod,EAAUe,GAC1BxG,MAAMpK,GAAYwc,GAA6Bxc,EAASvN,EAAO4O,KAC/D+I,KAAKoS,GACV,CACF,CAEAE,eAAejqB,EAAOsQ,EAAWvJ,GAC/B,MAAOqW,EAAUe,GAAU7N,EAC3B,OAAItQ,EAAMzZ,OACDK,KAAKk/B,UAAU3I,WAAWnd,EAAOod,EAAUe,GAAQxG,MAAMpK,GAClC,UAAxBxG,EAAOC,aACF+iB,GAAqCxc,EAASvN,EAAO+G,GAErDgjB,GAA2Bxc,EAASvN,EAAO+G,KAI/CyQ,QAAQC,QAAQ,GAE3B,CAEM4H,OAAO6K,EAAmBC,EAAa7Z,EAAWvJ,EAA4B3f,G,kBAApF,gBACE,MAAMgjC,EAAeF,EAAWxhC,KAAKyK,GAAMA,EAAE4c,YAC7C,GAA2B,WAAvBhJ,EAAOsB,YAET,OT9GC,SAA+BkK,EAAe2X,EAAmBnjB,GACtE,MAAMsjB,EAAuB,GAC7B,IAAK,IAAI97B,EAAI,EAAGA,GAAIgkB,aAAAA,EAAAA,EAAUhsB,QAAQgI,IAAK,CACzC,MAAM+7B,EAAU/X,EAAShkB,GACnB4hB,EAAS/Z,OAAOk0B,EAAQna,QAC9Bka,EAAYr3B,KAAK,CACfmE,KAAMmzB,EAAUA,EAAQnzB,KAAO5I,EAC/BuS,KAAMkM,EAAAA,UAAAA,OACNP,OAAQ,CAAC,EACT7jB,OAAQ,IAAI8nB,EAAAA,YAAoB,CAACP,KAErC,CAEA,MAAMyB,EAAmB,CACvBza,KAAMma,EAAAA,4BACNxQ,KAAMkM,EAAAA,UAAAA,KACNP,OAAQ,CACNC,OAAQ,CAAC,GAEX9jB,OAAQ,IAAI8nB,EAAAA,YAAoB,CAAC3qB,KAAKD,SAGxC,OAAO,IAAIkpB,EAAAA,iBAAiB,CAC1BC,MAAOlI,EAAOkI,MACd9X,KAAM,iBACNkV,OAAQ,CAACuF,KAAcyY,IAE3B,CSmFaE,OADW,EAAKzE,UAAU9H,YAAYoM,GACXF,EAAYnjB,GAGhD,MAAMyjB,EAASL,EAAKzhC,KAAKyK,GAAMA,EAAEurB,QAC3B+L,GAAQD,aAAAA,EAAAA,EAAQjkC,QAAS,EAAIikC,EAAO,QAAKxjC,EAE/C,OTnLG,SAA2BurB,EAAe2X,EAAmBnjB,G,IAE9CwL,EAkBAA,EAYAA,EA/BpB,MAAMoB,EAAa,GACnB,IAAK,IAAIplB,EAAI,EAAGA,GAAIgkB,SAAiB,QAAjBA,EAAAA,EAAUsM,eAAVtM,IAAAA,OAAAA,EAAAA,EAAmBhsB,QAAQgI,IAAK,CAClD,MAAMm8B,EAASnY,EAASsM,QAAQtwB,GAChColB,EAAW3gB,KAA0B,IAArB03B,EAAO/L,YACzB,CAEA,MAAM/M,EAAmB,CACvBza,KAAMma,EAAAA,4BACNxQ,KAAMkM,EAAAA,UAAAA,KACNP,OAAQ,CACNC,OAAQ,CAAC,GAEX9jB,OAAQ,IAAI8nB,EAAAA,YAAoBiD,IAG5B0W,EAAuB,GACvBzhC,EAAqB,GAE3B,IAAIyf,EA+BN,SAA8BC,GAC5B,OAAQA,GACN,IAAK,MACH,MAAO,MACT,IAAK,SACH,MAAO,SACT,IAAK,eACH,MAAO,WACT,QACE,OAAOA,EAEb,CA1CoBqiB,CAAqB5jB,EAAOsB,aAC9C,IAAK,IAAI9Z,EAAI,EAAGA,GAAIgkB,SAAa,QAAbA,EAAAA,EAAUyM,WAAVzM,IAAAA,OAAAA,EAAAA,EAAehsB,QAAQgI,IAAK,CAC9C,MAAMq8B,EAAOrY,EAASyM,IAAIzwB,GAC1B,IAAK,IAAIukB,EAAI,EAAGA,EAAI8X,EAAKrkC,OAAQusB,IAAK,CACpC,MACMntB,EADMilC,EAAK9X,GACCzK,GACbzf,EAAOkqB,KACVlqB,EAAOkqB,GAAK,IAEdlqB,EAAOkqB,GAAG9f,KAAKrN,EACjB,CACF,CAEA,IAAK,IAAI4I,EAAI,EAAGA,GAAIgkB,SAAoB,QAApBA,EAAAA,EAAUwL,kBAAVxL,IAAAA,OAAAA,EAAAA,EAAsBhsB,QAAQgI,IAAK,CACrD,MAAMs8B,EAAYtY,aAAAA,EAAAA,EAAUwL,WAAWxvB,GAAGrD,WACpCo/B,EAAUJ,EAAW3d,MAAMpZ,GAAMA,EAAE4c,YAAc8a,IACvDR,EAAYr3B,KAAK,CACfmE,KAAMmzB,EAAUA,EAAQnzB,KAAO0zB,EAC/B/pB,KAAMkM,EAAAA,UAAAA,OACNP,OAAQ,CAAC,EACT7jB,OAAQ,IAAI8nB,EAAAA,YAAoB9nB,EAAO2F,KAE3C,CAEA,OAAO,IAAIygB,EAAAA,iBAAiB,CAC1BC,MAAOlI,EAAOkI,MACd9X,KAAM,MACNkV,OAAQ,CAACuF,KAAcyY,IAE3B,CSmIWS,OADc,EAAKhF,UAAUzG,OAAOoL,EAAOL,EAAc9Z,EAAWlpB,GAC1C8iC,EAAYnjB,EAC/C,GAXA,E,CAaMmX,OAAOgM,EAAY5Z,EAAWvJ,EAAQ3f,G,kBAA5C,gBACE,MAAMgjC,EAAe56B,IAAAA,IAAM06B,EAAY,aACvC,GAAI,EAAKvD,aAAc,CACrB,MAAMoE,QAAoB,EAAKjF,UAAUvH,SAAS6L,EAAc9Z,EAAWlpB,GAC3E,OAAOoI,IAAAA,IAAM46B,GAAera,IAC1B,MAAMH,EAAYpgB,IAAAA,KAAO06B,EAAY,CAAEna,UAAWA,IAClD,OAAOga,GAAkCna,EAAW7I,EAAOsB,YAAa0iB,EAAY,GAExF,CACA,MAAMA,QAAoB,EAAKjF,UAAU5H,OAAOkM,EAAc9Z,EAAWlpB,GACzE,OAAOoI,IAAAA,IAAM46B,GAAera,IAC1B,MAAMH,EAAYpgB,IAAAA,KAAO06B,EAAY,CAAEna,UAAWA,IAClD,OAAOga,GAAkCna,EAAW7I,EAAOsB,YAAa0iB,EAAAA,GAE5E,GAdA,E,CA1iBApkC,YAAYS,GACV,MAAM,UACJszB,EAAS,gBACTC,EAAe,SACfqQ,EAAQ,yBACR1E,EAAwB,yBACxB2E,EAAwB,2BACxBC,EAA0B,4BAC1BtF,EAA2B,aAC3BjM,GACEvyB,EAEJR,KAAK0/B,yBAA2BA,EAGhC,MAAMjO,EAAe,CACnBC,SAAS,EACTF,IAAK4S,GAUP,GARApkC,KAAKm/B,aAAe,IAAIhP,GAAasB,GAErCzxB,KAAKk/B,UAAY,IAAI5L,GAAmBQ,EAAWC,EAAiBhB,GAEpE/yB,KAAKi/B,kBACLj/B,KAAKo/B,gBACLp/B,KAAKq/B,eAEDK,EAA0B,CAC5B,MAAMX,EAAwB,CAAEC,+BAChCh/B,KAAK8+B,gBAAgBuF,EAA0BC,EAA4BvF,GAAkBhO,MAAK,KAChG/wB,KAAKkjC,aAAeljC,KAAKm/B,aAAa9N,iBACpCrxB,KAAKk9B,YAAY3G,WACjB,aACAv2B,KAAKk9B,aAEPl9B,KAAKojC,YAAcpjC,KAAKm/B,aAAa9N,iBACnCrxB,KAAKk9B,YAAYF,UACjB,YACAh9B,KAAKk9B,YAAW,GAGtB,CACF,EA4jBF,SAASqH,GAAcv2B,EAAMmzB,GAC3B,MAAMC,EAAgBhc,EAAiB+b,GACvC,OAAOv4B,IAAAA,OAASoF,GAAOqzB,GACdD,EAAc78B,KAAK88B,EAAQ9wB,OAEtC,CASA,SAASqwB,GAAa5yB,EAAM3L,GAC1B,OAAI+iB,EAAc/iB,GACTkiC,GAAcv2B,EAAM3L,GAnD/B,SAAoB2L,EAAMuC,GACxB,MAAMi0B,EAAS57B,IAAAA,KAAOoF,EAAM,CAAEuC,KAAMA,IACpC,OAAIi0B,EACK,CAACA,GAED,EAEX,CA8CWC,CAAWz2B,EAAM3L,EAE5B,CAEA,SAAS2+B,GAAchzB,EAAM3L,GAC3B,OAAI+iB,EAAc/iB,GACTkiC,GAAcv2B,EAAM3L,GA1C/B,SAAsB2L,EAAMuC,GAE1B,OADe3H,IAAAA,OAASoF,EAAM,CAAEuC,KAAMA,KAI7B,EAEX,CAqCWm0B,CAAa12B,EAAM3L,EAE9B,C,0BC3tBWsiC,GAAW,WAQlB,OAPAA,GAAW5+B,OAAO6+B,QAAU,SAAkB5gC,GAC1C,IAAK,IAAIuI,EAAG5E,EAAI,EAAGmN,EAAIP,UAAU5U,OAAQgI,EAAImN,EAAGnN,IAE5C,IAAK,IAAImB,KADTyD,EAAIgI,UAAU5M,GACO5B,OAAOsO,UAAUmD,eAAenX,KAAKkM,EAAGzD,KAAI9E,EAAE8E,GAAKyD,EAAEzD,IAE9E,OAAO9E,CACX,EACO2gC,GAAS7T,MAAM9wB,KAAMuU,UAChC,ECrCe,SAASswB,GAAW3kC,EAAI4kC,EAAMC,QAC5B,IAATD,IAAmBA,EAAO,SACT,IAAjBC,IAA2BA,EAAe,CAAEC,SAAS,IACzD,ICJIC,EACAxmC,EDGAymC,GAAa,KAAAC,QAAO,GACpBC,GCLAH,GAAa,KAAAE,SAAO,GACpB1mC,GAAM,KAAA4mC,cAAY,WAAc,OAAOJ,EAAWK,OAAS,GAAG,KAClE,KAAAC,YAAU,WAEN,OADAN,EAAWK,SAAU,EACd,WACHL,EAAWK,SAAU,CACzB,CACJ,GAAG,IACI7mC,GDFH+mC,GAAK,KAAAC,UAASV,GAAete,EAAQ+e,EAAG,GAAIhjC,EAAMgjC,EAAG,GACrDE,GAAW,KAAAL,cAAY,WAEvB,IADA,IAAIx1B,EAAO,GACF81B,EAAK,EAAGA,EAAKpxB,UAAU5U,OAAQgmC,IACpC91B,EAAK81B,GAAMpxB,UAAUoxB,GAEzB,IAAIC,IAAWV,EAAWI,QAI1B,OAHK7e,EAAMue,SACPxiC,GAAI,SAAUqjC,GAAa,OAAQlB,GAASA,GAAS,CAAC,EAAGkB,GAAY,CAAEb,SAAS,GAAU,IAEvF9kC,EAAG4wB,WAAM,EAAQjhB,GAAMkhB,MAAK,SAAUhyB,GAEzC,OADAqmC,KAAeQ,IAAWV,EAAWI,SAAW9iC,EAAI,CAAEzD,MAAOA,EAAOimC,SAAS,IACtEjmC,CACX,IAAG,SAAUgR,GAET,OADAq1B,KAAeQ,IAAWV,EAAWI,SAAW9iC,EAAI,CAAEuN,MAAOA,EAAOi1B,SAAS,IACtEj1B,CACX,GACJ,GAAG+0B,GACH,MAAO,CAACre,EAAOif,EACnB,CDgF6B3/B,OAAO0O,OAsGX1O,OAAO0O,O,eG9MzB,MAAMqxB,GAAiB,EAAGC,cAE7B,mBAACC,GAAAA,eAAcA,KACZD,EACD,mBAACE,MAAAA,CAAIC,UAAU,yBACb,mBAACD,MAAAA,CAAIC,UAAU,wC,gBCkCLC,EAAAA,GAAAA,gBAAeC,IAC/B,MAAMC,EAAaD,EAAMlsB,OAASosB,EAAAA,iBAAAA,MAAyB,UAAY,UACjEC,EAAYH,EAAMlsB,OAASosB,EAAAA,iBAAAA,MAAyB,UAAY,UAEtE,MAAO,CACLE,OAAQC,GAAAA,GAAG;;;0BAGWJ;0BACAD,EAAMM,QAAQC;;eAEzBP,EAAMQ,OAAOzuB;;;;;;;4BAOAouB;;MAGxBM,KAAMJ,GAAAA,GAAG;;iBAEIL,EAAMQ,OAAOzuB;;MAG3B,I,QC/D0B2uB,KAAAA,cAAuCjhB,GAAAA,QACxBkhB,SCcrC,MAAMC,WAAwBF,KAAAA,UA2BnCG,cACE,MAAM,UAAEC,EAAS,MAAEC,GAAUnnC,KAAKymB,MAClC,IAAKygB,EACH,OAAO,KAGTlnC,KAAKonC,UAAUC,YAAYrnC,KAAKsnC,WAChC,MAAMC,EAAQT,MAAMU,cAAcC,aAAaP,GAAYC,GAC3D,OAAOO,SAASC,aAAaJ,EAAOvnC,KAAKsnC,UAC3C,CAEApjB,SACE,MAAM,SAAE6hB,GAAa/lC,KAAKmnC,MACpBS,EAAoB7B,EAE1B,OACE,wCACE,oBAAC6B,EAAAA,CAAkBC,UAAW7nC,KAAK6nC,UAAWC,UAAW9nC,KAAK8nC,YAC7D9nC,KAAKinC,cAGZ,CA5CAlnC,YAAYonC,GACV1J,MAAM0J,G,KAJRC,UAAYW,SAASC,K,KACrBV,UAAYS,SAASP,cAAc,O,KAUnCK,UAAY,CAACX,EAAqCC,KAChDnnC,KAAKioC,SAAS,CACZf,YACAC,SACA,E,KAGJW,UAAY,KACV9nC,KAAKonC,UAAUc,YAAYloC,KAAKsnC,WAChCtnC,KAAKioC,SAAS,CACZf,UAAW,KACXC,MAAO,CAAC,GACR,EAlBFnnC,KAAKymB,MAAQ,CACXygB,UAAW,KACXC,MAAO,CAAC,EAEZ,EC9BK,MCcMgB,GAAmB,EAAG3nC,UAAS4nC,SAAQC,WAAUC,WAAUC,eACtE,MAAMnC,GAAQoC,EAAAA,GAAAA,aACRC,GAASC,EAAAA,GAAAA,iBAAgBtC,GACzBuC,GAAeC,EAAAA,GAAAA,YAAWC,GAAUR,IAE1C,OACE,mBAACpC,MAAAA,CACCC,WAAW4C,EAAAA,GAAAA,IACTL,EAAOM,KACPJ,EAAaK,YACb,CAAE,CAACL,EAAaM,UAAWb,EAAOc,WAAa,GAC/CzC,GAAAA,GAAG;oBACS2B,EAAOe,SAAW,EAAI,GAAGf,EAAOe,aAAe;iBAClDf,EAAOe,SAAW,EAAI,GAAG7sB,KAAK8sB,IAAIhB,EAAOe,cAAgB;YAIpE,mBAAClD,MAAAA,CAAIC,UAAWyC,EAAaI,KAAMM,aAAW,sBAC5C,mBAACC,GAAAA,gBAAeA,CAACC,UAAU,EAAOC,cAAe,QAAwBC,qBAAAA,GACvE,mBAACxD,MAAAA,KACC,mBAACA,MAAAA,CAAIC,UAAWuC,EAAOiB,YACpBlpC,aAAAA,EAAAA,EAASsB,KAAI,CAAC6nC,EAAQhiC,IACrB,mBAACiiC,GAAAA,CAAWnd,KAAMkd,EAAQhrC,IAAKgJ,EAAGkiC,QAAStB,EAAUuB,UAAWxB,IAAa3gC,EAAGoiC,iBAAAA,U,EAkB1FH,GAAa9C,KAAAA,YACjB,EAAGra,OAAMqd,YAAWE,WAAUH,UAASE,mBAAmBE,KACxD,MAAM7D,GAAQoC,EAAAA,GAAAA,aACRC,GAASC,EAAAA,GAAAA,iBAAgBtC,GACzBuC,GAAeC,EAAAA,GAAAA,YAAWC,MAE1BqB,GAAmBpB,EAAAA,GAAAA,IACvBL,EAAOkB,OACPhB,EAAawB,kBACbL,GAAarB,EAAO2B,cACpBJ,GAAYrB,EAAa0B,oBAY3B,OACE,mBAACpE,MAAAA,CAAIgE,IAAKA,EAAK/D,UAAWgE,EAAkBb,aAAW,cAAcQ,QAV9CnP,IACnBsP,IAGJtP,EAAM4P,iBACN5P,EAAM6P,kBACNV,EAAQpd,GAAK,GAKX,mBAACwZ,MAAAA,CAAIC,WAAW4C,EAAAA,GAAAA,IAAGL,EAAOiB,WAAYf,EAAa6B,iBACjD,mBAACC,OAAAA,KAAMhe,EAAKie,OAASje,EAAK1tB,QACxBgrC,GAAmBtd,EAAKyB,aAAe,mBAAC+X,MAAAA,CAAIC,UAAWuC,EAAOkC,mBAAoBle,EAAKyB,cAE1FzB,EAAKyB,aACJ,mBAAC0c,GAAAA,QAAOA,CAACC,QAASpe,EAAKyB,aACrB,mBAAC4c,GAAAA,KAAIA,CAACv6B,KAAK,cAAc21B,UAAWyC,EAAaoC,sB,IAQ7DnB,GAAWoB,YAAc,aAElB,MAAMnC,GAAaoC,GAAwB7E,IACzC,CACL4C,YAAavC,GAAAA,GAAG;;;;iBAIHL,EAAM8E,OAAOC;;;MAI1BpC,KAAMtC,GAAAA,GAAG;mBACML,EAAMgF,QAAQH,GAAa;;;uBAGvB7E,EAAMgF,QAAQ;;MAGjCnC,SAAUxC,GAAAA,GAAG;;;MAIb4E,UAAW5E,GAAAA,GAAG;iBACDL,EAAMgF,QAAQ;oBACXhF,EAAMQ,OAAO0E,OAAOC;uBACjBnF,EAAMoF,MAAMC,aAAa;0BACtBrF,EAAMQ,OAAO8E,WAAWC;iBACjCvF,EAAM8E,OAAO3D;MAE1B4C,kBAAmB1D,GAAAA,GAAG;iBACTL,EAAMgF,QAAQ;MAE3BZ,eAAgB/D,GAAAA,GAAG;qBACFL,EAAMwF,WAAWC;iBACrBzF,EAAMgF,QAAQ,EAAG,IAAK,EAAG;MAEtCf,mBAAoB5D,GAAAA,GAAG;eACZL,EAAMQ,OAAOzuB,KAAK6xB;;MAG7Be,mBAAoBtE,GAAAA,GAAG;eACZL,EAAMQ,OAAOzuB,KAAK6xB;QCvHpB8B,GAAe,EAAG/sC,QAAOyB,UAASurC,YAAWC,QAAOC,eAC/D,MAAOC,EAAQC,IAAW1G,EAAAA,GAAAA,WAAS,IAC5BrqB,EAAOgxB,IAAY3G,EAAAA,GAAAA,UAAS1mC,IAC5BstC,EAAiBC,IAAsB7G,EAAAA,GAAAA,UAASjlC,IAChD+rC,EAAmBC,IAAwB/G,EAAAA,GAAAA,WAAU,IACrD2C,IAAU3C,EAAAA,GAAAA,UAAS,CAAE0D,SAAU,EAAGD,WAAY,IAC/Ce,GAAM9E,EAAAA,GAAAA,QAAuB,MAC7BwD,GAAeC,EAAAA,GAAAA,YAAWC,IAE1B4D,GAAa3D,EAAAA,GAAAA,IAAG,CACpB,CAACH,EAAa+D,aAAczwB,EAAQb,GACpC,CAACutB,EAAagE,eAAgBvxB,EAAMwxB,WAAW,QAGjDrH,EAAAA,GAAAA,YAAU,KACR+G,EAAmB9rC,EAAQ,GAC1B,CAACA,IAEJ,MAKMqsC,GAAUxH,EAAAA,GAAAA,cAAY,KAC1B8G,GAAQ,EAAM,GACb,IA4BGW,EAAsBnD,IAC1B,MAAMoD,GAAWpD,aAAAA,EAAAA,EAAQ5qC,QAAS,GAClCqtC,EAASW,GACTd,EAASc,GACTF,GAAS,EA+BX,OACE,mBAAC5G,MAAAA,CAAI+G,cAAY,cAAcC,MAAO,CAAEC,SAAU,YAAcjD,IAAKA,GACnE,mBAACkD,GAAAA,oBAAmBA,CAACtD,QA9DF,IAAMqC,GAAUW,KA+DjC,mBAACO,GAAAA,MAAKA,CACJlH,UAAWuG,EACX1tC,MAAOqc,EACPlB,KAAK,OACL+xB,SAjEe9pC,I,IAIJA,EAHZ+pC,GACHC,GAAQ,GAEV,MAAMkB,EAAWlrC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,MACnC,GAAIsuC,EAEF,GADAjB,EAASiB,GACLtuC,IAAUsuC,EAAU,CACtB,MAAME,EAAW/sC,EAAQ6B,QACtBsnC,I,IACCA,EACAA,EADAA,OAAY,QAAZA,EAAAA,EAAO5qC,aAAP4qC,IAAAA,OAAAA,EAAAA,EAAcnhC,cAAcw6B,SAASqK,EAAS7kC,kBAClC,QAAZmhC,EAAAA,EAAOe,aAAPf,IAAAA,OAAAA,EAAAA,EAAcnhC,cAAcw6B,SAASqK,EAAS7kC,eAAc,IAEhE8jC,EAAmBiB,EACrB,MACEjB,EAAmB9rC,QAGrB4rC,EAAS,IACTE,EAAmB9rC,EACrB,EA8CMgtC,OApCe,KACrBvB,EAAS7wB,EAAM,EAoCTqyB,YA/EO,KACbtB,GAAQ,GACRG,EAAmB9rC,EAAQ,EA8ErBktC,OAAQ3B,GAAa,mBAAC4B,GAAAA,QAAOA,MAC7B3B,MAAOA,EACP4B,UApCWxrC,IACjB,GAAc,cAAVA,EAAEzD,IAAqB,CACpButC,GACHC,GAAQ,GAEV/pC,EAAEkoC,iBACFloC,EAAEmoC,kBACF,MAAMjC,EAAWiE,EAAoBF,EAAgB1sC,OAAS,EAAI4sC,EAAoB,EAAI,EAC1FC,EAAqBlE,EACvB,MAAO,GAAc,YAAVlmC,EAAEzD,IAAmB,CACzButC,GACHC,GAAQ,GAEV/pC,EAAEkoC,iBACFloC,EAAEmoC,kBACF,MAAMjC,EAAWiE,EAAoB,EAAIA,EAAoB,EAAIF,EAAgB1sC,OAAS,EAC1F6sC,EAAqBlE,EACvB,KAAqB,UAAVlmC,EAAEzD,MACXyD,EAAEkoC,iBACFloC,EAAEmoC,kBACFuC,EAAmBT,EAAgBE,IACrC,IAiBKL,GACC,mBAAC/D,GAAgBA,CACf3nC,QAAS6rC,EACT9D,SAAUuE,EACV1E,OAAQA,EACRC,SAAU2D,EACV1D,SAAUiE,K,EAQT1D,GAAazC,IACjB,CACLsG,YAAajG,GAAAA,GAAG;;iBAEHL,EAAMQ,OAAOiH,QAAQC;;MAGlCnB,cAAelG,GAAAA,GAAG;;iBAELL,EAAMQ,OAAO+E,QAAQxzB;;QC1IzB41B,GAAqB,KAChC,MAAMC,GAAYhoB,EAAAA,GAAAA,kBACfioB,eACA5rC,QAAQF,GACW,eAAXA,EAAE+X,MAAoC,aAAX/X,EAAE+X,OAExC,OAAO8zB,aAAAA,EAAAA,EAAWlsC,KAAKK,IAAO,CAC5BpD,MAAO,IAAIoD,EAAEoO,OACbm6B,MAAO,IAAIvoC,EAAEoO,UACZ,ECXL,2B,0lCAYA,MAAM29B,GAAkD,CACtD,CAAEnvC,MAAO,EAAG2rC,MAAO,kBACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,eACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,QACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,aAQRyD,GAAwB,EAAGC,aAAYC,qBAAoBxf,iB,IAwDnBzT,EACDA,EAsDjCA,EASAA,EAWAA,EASOA,EAWPA,EArJjB,MAAMA,GADNgzB,EAAa/rB,EAAkB+rB,IACNjuB,OAEnBmuB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV2sC,EAAiB,W,MAAA,cAAOnzB,EAAeC,GAC3C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CwkB,QAAazR,EAAW0f,OAAOU,WAAWtO,EAAargB,GAC7D,IAAI9f,EAA0C8/B,aAAAA,EAAAA,EAAMx+B,KAAK8Z,IAAS,CAChE7c,MAAO6c,EAAIrL,KACXm6B,MAAO9uB,EAAIrL,SAIb,OAFA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX8Bqb,EAAeC,G,gCAAtB,KAadkpB,QAASkK,EAAanwC,MAAOowC,GAAcC,GAAavK,GAAW,gBAE1E,aADsBmK,EAAe5zB,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAG7Bs+B,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,SAE9DkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR6J,GAAW,GACV,CAACzO,EAAargB,IAEjB,MAAM2rB,EAAY7wB,IAChBizB,EAAmB,SACdD,GAAAA,CACHjuB,OAAQ/E,I,EAINi0B,EAAkB93B,GACdxY,IACQ,OAAVA,GACFktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,KACzC,EAmBEuwC,EAAkB/3B,GAAiB,KACvC00B,EAAS,SAAK7wB,GAAAA,CAAO5a,QAAS,SAAK4a,EAAM5a,SAAO,CAAE,CAAC+W,IAAQ6D,EAAM5a,QAAQ+W,O,EAG3E,OACE,sCACE,mBAACuuB,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAkB,QAAXqc,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,OACpB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAiB,QAAVqc,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,OACnB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,YAI/B,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAwB,QAAjBqc,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,OAC1B7B,QAAS2uC,EACTpD,UAAWmD,EACXjD,SAAUoD,EAAe,kBAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,UAAU8E,WAAY,IACvC,mBAACpC,GAAAA,MAAKA,CACJpB,MAAO,GACPyD,aAA2B,QAAbr0B,EAAAA,EAAMoH,eAANpH,IAAAA,OAAAA,EAAAA,EAAe/Y,OAC7BqtC,YAAY,eACZlC,QAA2B,UAvD3BrrC,I,IACWA,EAAjB,MAAM4qC,EAAW5qC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,MAClB,OAAbguC,GACFd,EAAS,SAAK7wB,GAAAA,CAAO,QAAQ,CAAE/Y,OAAQ0qC,KACzC,OAuDA,sCACE,mBAACwC,GAAAA,YAAWA,CAAC7E,MAAM,eAAe8E,WAAY,IAC5C,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAoB,QAAbqc,EAAAA,EAAM5a,eAAN4a,IAAAA,OAAAA,EAAAA,EAAeyG,YACtBrhB,QAAS0tC,GACTjC,SA1DmBtC,IACN,OAAjBA,EAAO5qC,OACTktC,EAAS,SAAK7wB,GAAAA,CAAO5a,QAAS,SAAK4a,EAAM5a,SAAO,CAAEqhB,YAAa8nB,EAAO5qC,UACxE,KA0DI,mBAACwwC,GAAAA,YAAWA,CAAC7E,MAAM,iBAAiB8E,WAAY,IAC9C,mBAACK,GAAAA,aAAYA,CAAC9wC,MAAOqc,EAAM5a,QAAQkiB,aAAcupB,SAAUqD,EAAe,mBAE5E,mBAACC,GAAAA,YAAWA,CAAC7E,MAAM,2BAA2B8E,WAAY,IACxD,mBAACK,GAAAA,aAAYA,CAAC9wC,MAAOqc,EAAM5a,QAAQmiB,iBAAkBspB,SAAUqD,EAAe,uBAEhF,mBAACC,GAAAA,YAAWA,CAAC7E,MAAM,gBAAgB8E,WAAY,IAC7C,mBAACK,GAAAA,aAAYA,CAAC9wC,MAAOqc,EAAM5a,QAAQoiB,aAAcqpB,SAAUqD,EAAe,oB,EC7LpF,2B,0lCA6BO,MAAMQ,WAAyBC,EAAAA,cAqFpC30B,MAAMwQ,GAEJ,MAAMokB,EAAiBpkB,EAAQqkB,QAAQnuC,KAAKkC,GAGnCksC,EADQtnC,IAAAA,UAAY5E,MAIvBmsC,EAAyBnwC,KAAKowC,aAAa,SAAKxkB,GAAAA,CAASqkB,QAASD,KAClEK,EAA8BrwC,KAAKswC,kBAAkB,SAAK1kB,GAAAA,CAASqkB,QAASD,KAC5EO,EAA0BvwC,KAAKwwC,cAAc,SAAK5kB,GAAAA,CAASqkB,QAASD,KACpES,EAA2BzwC,KAAK0wC,kBAAkB,SAAK9kB,GAAAA,CAASqkB,QAASD,KAE/E,OAAOpf,QAAQkG,IAAI,CACjBqZ,EACAE,EACAE,EACAE,IACC1f,MAAM4f,IAEP,MAAOC,EAAYC,EAAiBC,EAAaC,GAAiBJ,EAYlE,OAXIE,EAAgBpkB,OAClBmkB,EAAWnkB,KAAOmkB,EAAWnkB,KAAKU,OAAO0jB,EAAgBpkB,OAEvDqkB,EAAYrkB,OACdmkB,EAAWnkB,KAAOmkB,EAAWnkB,KAAKU,OAAO2jB,EAAYrkB,OAGnDskB,EAActkB,OAChBmkB,EAAWnkB,KAAOmkB,EAAWnkB,KAAKU,OAAO4jB,EAActkB,OAGlD,CACLA,KAAMmkB,EAAWnkB,KACjBhG,MAAOuqB,EAAAA,aAAAA,KACPryC,IAAKitB,EAAQqlB,UACd,GAEL,CAEMb,aAAaxkB,G,kBAAnB,gBACE,MAAM,WAAEO,EAAU,cAAEkR,EAAa,MAAEl4B,EAAK,UAAE8rC,GAAcrlB,EAClDqkB,EAAUrkB,EAAQqkB,QAAQ5tC,OAAO,EAAK6uC,iBAG5CtlB,EAAQ7F,WAAahgB,OAAO6+B,OAAO,CAAC,EAAGhZ,EAAQ7F,WAAYX,EAAyBwG,EAAQzmB,QAE5F,MAAMo4B,EAAU30B,IAAAA,QACdqnC,EAAQnuC,KAAKsZ,GAEPA,EAAM+1B,KACD,MAGT,EAAKC,uBAAuBh2B,EAAOwQ,GAE5B,SACFxQ,GAAAA,CACH2X,aAAc,EAAKA,aACnB5G,aACAkR,sBAMN,IAAKE,EAAQ59B,OACX,OAAOixB,QAAQC,QAAQ,CAAEpE,KAAM,KAGjC,MAAMub,EAAY,CAAEzK,WAQpB,IAAIoT,EANAxrC,IACF6iC,EAAK7iC,MAAQA,EACb6iC,EAAK99B,KAAO/E,EAAM+E,KAAKyT,UAAUrZ,WACjC0jC,EAAKx9B,GAAKrF,EAAMqF,GAAGmT,UAAUrZ,YAI/B,IACEqsC,QAAY1c,EAAAA,GAAAA,iBACTC,MAAM,CACL1Z,IAAK,gBACL+Y,OAAQ,OACR9G,KAAMub,EACNiJ,cAED9c,WAGL,CAFE,MAAO3J,GACP,OAAO6mB,EAAAA,GAAAA,qBAAoB7mB,EAC7B,CAEA,MAAM8mB,GAAOD,EAAAA,GAAAA,qBAAoBV,GASjC,OARA,EAAKY,YAAYD,GACjB,EAAKE,uBAAuBF,EAAM1lB,GAClCuX,GAAmCmO,GAC/BnO,GAAoCmO,EAAK7kB,QAC3C3c,QAAQ2a,IAAI,0CACZ6mB,EAAK7kB,KAAO0W,GAA8BmO,EAAK7kB,OAG1C6kB,CACT,GA9DA,E,CAgEMd,cAAc5kB,G,kBAApB,gBACE,MAAM6lB,EAAkB7lB,EAAQqkB,QAAQ5tC,QAAQ2B,KAAQ,EAAKktC,gBAAgBltC,IAAM,EAAK0tC,qBAAqB1tC,MACvGitB,EAAWroB,IAAAA,IAAM6oC,GAAkBtxB,IAEvC,GAAIA,EAAOgxB,KACT,MAAO,GAITvlB,EAAQ7F,WAAahgB,OAAO6+B,OAAO,CAAC,EAAGhZ,EAAQ7F,WAAYX,EAAyBwG,EAAQzmB,QAC5F,EAAKisC,uBAAuBjxB,EAAQyL,GACpC,MAAMlC,EAAY,EAAKioB,eAAe/lB,EAASzL,GAE/C,OAAIA,EAAO9E,YAAc7V,EAGlB2a,EAAOtE,OAAUsE,EAAOrE,MAASqE,EAAOxd,KAGtC,EAAKivC,cAAczxB,EAAQuJ,GAFzB,GAGAvJ,EAAO9E,YAAc7V,EAEvB,EAAKqsC,mBAAmB1xB,EAAQuJ,EAAWkC,GACzCzL,EAAO9E,YAAc7V,EAEvB,EAAKssC,kBAAkB3xB,EAAQuJ,EAAWkC,GACxCzL,EAAO9E,YAAc7V,EAEvB,EAAKusC,cAAc5xB,EAAQuJ,EAAWkC,GACpCzL,EAAO9E,YAAc7V,EAEvB,EAAKwsC,oBAAoB7xB,GAEzB,EACT,IAIF,OAAOyQ,QAAQkG,IAAIluB,IAAAA,QAAUqoB,IAC1BF,KAAKnoB,IAAAA,SACLmoB,MAAMtE,IAEHA,GACAA,EAAK9sB,OAAS,IACdsyC,EAAAA,EAAAA,aAAYxlB,EAAK,M1B2PpB,SAA6BA,GAClC,OACEA,EAAKhH,OAAO9lB,QAAU8sB,EAAKhH,OAAO,GAAGvL,OAASkM,EAAAA,UAAAA,OAA4D,aAAzCqG,EAAKhH,OAAO,GAAGI,OAAOC,OAAa,IAExG,C0B9PWV,CAA0BqH,EAAK,M1BgQnC,SAA2BA,GAChC,MAAqB,WAAdA,EAAKlc,IACd,C0BjQW6U,CAAwBqH,EAAK,M1BmQjC,SAAgCA,GACrC,OAAQA,EAAKhH,OAAOE,MAAM3E,GAAMA,EAAE9G,OAASkM,EAAAA,UAAAA,MAAkBpF,EAAEzQ,OAASma,EAAAA,6BAC1E,C0BpQWtF,CAA6BqH,EAAK,MAEnCA,EAAO0W,GAA4B1W,GAC/B0W,GAAoC1W,KACtC3c,QAAQ2a,IAAI,0CACZgC,EAAO0W,GAA8B1W,KAGlC,CAAEA,UAEf,GAzDA,E,CA2DM6jB,kBAAkB1kB,G,kBAAxB,gBACE,MAAMqkB,EAAUrkB,EAAQqkB,QAAQ5tC,OAAO,EAAKqvC,sBAEtCnU,EAAU30B,IAAAA,QACdqnC,EAAQnuC,KAAKqe,IAEX,GAAIA,EAAOgxB,KACT,MAAO,GAITvlB,EAAQ7F,WAAahgB,OAAO6+B,OAAO,CAAC,EAAGhZ,EAAQ7F,WAAYX,EAAyBwG,EAAQzmB,QAC5F,EAAKisC,uBAAuBjxB,EAAQyL,GACpC,MAAMlC,EAAY,EAAKioB,eAAe/lB,EAASzL,GACzC+xB,EAAY,EAAKC,YAAYzoB,EAAWvJ,GAE9C,OAAKA,EAAO9E,WAAa8E,EAAO9E,YAAc7V,EAEnC2a,EAAO9E,YAAc7V,GAEzB2a,EAAO4V,QAGL,EAAKqc,gBAAgBjyB,EAAQuJ,EAAWwoB,EAAWtmB,GAEnD,GARA,EAAKymB,iBAAiBlyB,EAAQuJ,EAAWwoB,EAAWtmB,EAS7D,KAQJ,OAJ6CgF,QAAQkG,IAAIyG,GACtDxM,KAAKnoB,IAAAA,SACLmoB,MAAMtE,IAAU,CAAEA,UAGvB,GAnCA,E,CAqCAklB,eAAe/lB,EAASzL,GACtB,IAAIqW,EAAWla,KAAKuf,KAAKyW,EAAAA,MAAe1mB,EAAQzmB,MAAM+E,MAAQ,KAC1DqtB,EAASjb,KAAKuf,KAAKyW,EAAAA,MAAe1mB,EAAQzmB,MAAMqF,IAAM,KAG1D,MAAM+nC,EAAgBC,GAAiBryB,EAAOY,UAAW,QACzD,GAAIwxB,EAAc5yC,OAAQ,CACxB,MAAOi3B,EAAW6b,GAAWrtB,EAAemtB,EAAfntB,CAA8B,CAACoR,EAAUe,IACtEf,EAAWI,EACXW,EAASkb,CACX,CACA,MAAO,CAACjc,EAAUe,EACpB,CAKA,iBAAuBpX,EAAQuJ,EAAWwoB,EAAWtmB,G,kBAArD,gBACE,MAIMxS,QAAc,EAAKm1B,OAAOtO,mBAAmB9f,EAJ5B,CACrBiV,SAAU,QAKNsd,GAAa,IAAIvzC,MAAOwzC,UACxBxrC,QAAe,EAAKyrC,yBAAyBx5B,EAAO+G,EAAQuJ,EAAWwoB,EAAWtmB,GAClFinB,GAAW,IAAI1zC,MAAOwzC,UAM5B,OAJI,EAAKG,gBACPhjC,QAAQ2a,IAAI,uCAAuC,EAAKla,UAAUsiC,EAAWH,KAGxE,EAAKK,oCAAoC5rC,EAAQykB,EAASzL,EACnE,GAhBA,E,CAqBA,yBAA+B/G,EAAO+G,EAA4BuJ,EAAWwoB,EAAWtmB,G,kBAAxF,gBACE,IAAIjF,EACJiF,EAAQ5D,UAAY,EAAKgrB,kBAAkB7yB,GAC3CyL,EAAQqR,cAmoBZ,SAA0B9c,GACxB,IAAI8c,EACJ,MAAM1Z,EAAU3a,IAAAA,KAAOuX,EAAOY,WAAYgD,GACf,kBAAlBA,EAAK9C,IAAI1Q,OAKlB,OAHIgT,GAAWA,EAAQhK,QAAUgK,EAAQhK,OAAO5Z,SAC9Cs9B,EAAgB1Z,EAAQhK,OAAO,IAE1B0jB,CACT,CA5oB4BgW,CAAiB9yB,IAAWyL,EAAQ5D,UAG1DrB,EADEurB,QACc,EAAK3D,OAAOvR,UAAU5jB,EAAOsQ,EAAWkC,SAExC,EAAK2iB,OAAOtL,aAAa7pB,EAAOsQ,EAAWkC,GAG7D,MAAMzmB,EAAQ,CACZ+E,KAAMwf,EAAU,GAChBlf,GAAIkf,EAAU,IAEhB,aAAa,EAAKwpB,0BAA0BvsB,EAASxG,EAAQhb,EAC/D,GAhBA,E,CAkBM+tC,0BAA0B9mB,EAAgBhR,EAAOsO,G,kBAAvD,gBAEE,MAAMgK,EAAoC,CACxClZ,IAAK,oBAAoB,EAAKuY,4CAC9BQ,OAAQ,OACRK,QAAS,CACP,eAAgB,oBAElBC,mBAAmB,EACnBpH,KAAM,CACJ7B,OAAQwB,EACRhR,QACAsO,cAKJ,aAD4BuK,EAAAA,GAAAA,iBAAgBC,MAAWR,GAAgBS,aACvD1H,IAClB,GAlBA,E,CAoBAsmB,oCAAoCpnB,EAAUC,EAASzL,GACrD,MAAMqd,EAAS,GACf,IAAK,MAAM3R,KAAaF,EAAU,CAChC,MAAMnG,GAAQsG,EAAAA,EAAAA,mBAAkBD,GAChCrG,EAAM6C,MAAQlI,EAAOkI,MACrBmV,EAAOpxB,KAAKoZ,EACd,CAEA,MAAM8rB,EAAO,CAAE7kB,KAAM+Q,GAQrB,OAPAx9B,KAAKuxC,YAAYD,GACjBtxC,KAAKwxC,uBAAuBF,EAAM1lB,GAC9BuX,GAAoCmO,EAAK7kB,QAC3C3c,QAAQ2a,IAAI,0CACZ6mB,EAAK7kB,KAAO0W,GAA8BmO,EAAK7kB,OAG1C6kB,EAAK7kB,IACd,CAEAumB,kBAAkB7yB,GAEhB,MAAMgzB,EAAiBvqC,IAAAA,IAAMkb,KAAwC,OAAG,QAClEsvB,EAAiBxqC,IAAAA,KAAOuX,EAAOY,WAAYgD,GACxCnb,IAAAA,SAAWuqC,EAAgBpvB,EAAK9C,IAAI1Q,QAE7C,OAAO6iC,EAAiBA,EAAe75B,OAAO,GAAK,KACrD,CAEAg4B,YAAY5lB,GACVA,EAASc,KAAKxe,MAAK,CAACnC,EAAGC,IACjBD,EAAEuc,MAAQtc,EAAEsc,OACN,EACCvc,EAAEuc,MAAQtc,EAAEsc,MACd,EAEF,GAEX,CAEAmpB,uBAAuB7lB,EAA6BC,GAClD,IAAK,IAAIjkB,EAAI,EAAGA,EAAIgkB,EAASc,KAAK9sB,OAAQgI,IAAK,CAC7C,MAAM6d,EAAmBmG,EAASc,KAAK9kB,GAKvCyd,EADuBotB,GAHRa,GAAiBznB,EAASpG,EAAM6C,OAGAtH,UAAW,SAC1DqE,CAA+BI,EACjC,CACA,OAAOmG,CACT,CAKAimB,cAAczxB,EAAQuJ,GAIpB,OAAO1pB,KAAKuuC,OACTtO,mBAAmB9f,EAJN,CACdiV,SAAU,SAITrE,MAAM3X,GACEpZ,KAAKuuC,OAAOlL,eAAejqB,EAAOsQ,EAAWvJ,KAErD4Q,MAAM5pB,GACuB,UAAxBgZ,EAAOC,aACFjZ,EAAOrF,KAAKyK,GAAM42B,GAAkC52B,EAAG4T,EAAQ,GAAIiG,EAAAA,UAAAA,UAErEjf,GAEb,CAKAirC,gBAAgBjyB,EAAQuJ,EAAWwoB,EAAW1xC,GAC5C,IAAIu1B,EAAU5V,EAAO4V,QAKrB,OAHAA,GADoB/P,EAAAA,GAAAA,kBACE3f,QAAQ0vB,EAASv1B,EAAQulB,WAAYutB,IAC3Dvd,EAAUntB,IAAAA,IAAMmtB,EAAQzwB,MAAM,MAAO0hB,GAAWA,EAAOznB,SAElDw2B,EAIE/1B,KAAKuuC,OAAOzY,cAAcC,GAAShF,MAAM3X,GACvCpZ,KAAK4yC,yBAAyBx5B,EAAO+G,EAAQuJ,EAAWwoB,EAAW1xC,KAJnE,EAMX,CAKA,mBAAyB2f,EAA4BuJ,EAAWkC,G,kBAAhE,gBAEE,GAAIzL,EAAOgxB,OAAU,EAAgBnoB,YAAc7I,EAAOgiB,kBAAqBhiB,EAAOsB,YACpF,MAAO,GAGT,IAAI0gB,EACJvW,EAAQ2nB,aAAe,EAAgBvqB,YAAc7I,EAAOgiB,gBAI1DA,EAFEvW,EAAQ2nB,aAEQ,OAEA,EAAK3E,oBAAoBzuB,EAAOgiB,gBAAiBvW,EAAQ7F,YAG7E6F,EAAQxK,YAAcjB,EAAOiB,YAE7B,IAAIkiB,QAAmB,EAAKiL,OAAOrM,cAAcC,G,IAEA,EAEjD,GAHIvW,EAAQ2nB,eACVjQ,EAAa16B,IAAAA,OAAS06B,EAAY,CAAEna,UAAoC,QAAxB,EAAD,EAAgBH,iBAAhB,eAA2BG,kBAEnD/oB,IAArB+f,EAAOkiB,UAAyB,CAClC,MAAMA,EAAY,EAAKuM,oBAAoBzuB,EAAOkiB,UAAWzW,EAAQ7F,YAC/Dwd,QAAa,EAAKgL,OAAOnM,QAAQC,GAEvC,aADqB,EAAKkM,OAAO9V,OAAO6K,EAAYC,EAAM7Z,EAAWvJ,EAAQyL,EAE/E,CACA,MAAM4nB,QAAqB,EAAKjF,OAAOjX,OAAOgM,EAAY5Z,EAAWvJ,EAAQyL,GACvE6nB,EAAiBtQ,GAA8CqQ,EAAcrzB,EAAOiB,aACpFsyB,QAA0B,EAAKR,0BAA0BO,EAAgBtzB,EAAQ,CAAC,GACxF,OAAO,EAAK4yB,oCAAoCW,EAAmB9nB,EAASzL,EAC9E,GAhCA,E,CAkCM6xB,oBAAoB7xB,G,kBAA1B,gBACE,MAAMwgB,EAAcxgB,EAAOtE,MAAMxZ,OAC3Bie,EAAaH,EAAOrE,KAAKzZ,OACzBwe,EAAcV,EAAOzF,MAAMrY,OAC3BgY,QAAe,EAAKk0B,OAAOnO,WAAWO,EAAargB,EAAYO,GAC/DqV,EAAettB,IAAAA,IAAMyR,EAAQ,eAC7Bs5B,QAAmB,EAAKpF,OAAOtY,cAAcC,GACnD,OAAOiN,GAA4BwQ,EAAYxzB,EACjD,GARA,E,CAUM2xB,kBAAkB3xB,EAA4BuJ,EAAWkC,G,kBAA/D,gBACE,GAA+B,UAA3BzL,EAAO8B,gBACT,OAAO,EAAK2xB,oBAAoBzzB,EAAQuJ,GACnC,GAA+B,aAA3BvJ,EAAO8B,gBAChB,OAAO,EAAK4xB,oBAAoB1zB,EAAQuJ,EAAWkC,GAGrD,MAAO9Q,EAAOwlB,SAAc,EAAKiO,OAAOlO,sBAAsBlgB,GAC9D,IAAKrF,EAAMnb,OACT,OAAOixB,QAAQC,QAAQ,IAGzB,MAAM8P,EAAcxgB,EAAOtE,MAAMxZ,OAC3BonB,QAAe,EAAK8kB,OAAO7Z,UAAUiM,GAErC1L,EAAUna,aAAAA,EAAAA,EAAOhZ,KAAKQ,GAAMA,EAAEsY,SAC9Bua,EAASmL,aAAAA,EAAAA,EAAMx+B,KAAKgK,GAAMA,EAAEgoC,gBAC5BtzC,EAAUuzC,GAAmB5zB,EAAQuJ,GACrC2E,QAAe,EAAKkgB,OAAO3T,cAAc3F,EAASE,EAAQ30B,GAChE,OAAO2iC,GAAuC9U,EAAQ5E,EAAQC,EAAWvJ,EAC3E,GApBA,E,CAsBMyzB,oBAAoBzzB,EAAQuJ,G,kBAAlC,gBACE,MACO5O,EAAOwlB,EAAMlnB,SAAe,EAAKm1B,OAAO/N,qBAAqBrgB,EAD7C,CAAEiV,SAAU,QAEnC,IAAKta,EAAMnb,OACT,OAAOixB,QAAQC,QAAQ,IAGzB,MAAM8P,EAAcxgB,EAAOtE,MAAMxZ,OAC3BonB,QAAe,EAAK8kB,OAAO7Z,UAAUiM,GAErC1L,EAAUna,aAAAA,EAAAA,EAAOhZ,KAAKQ,GAAMA,EAAEsY,SAC9Bua,EAASmL,aAAAA,EAAAA,EAAMx+B,KAAKgK,GAAMA,EAAEgoC,gBAC5B/d,EAAU3c,aAAAA,EAAAA,EAAOtX,KAAK6F,GAAMA,EAAEqf,SACpC,IAAK+O,EAAQp2B,OACX,OAAOixB,QAAQC,QAAQ,IAGzB,MAAMrwB,EAAUuzC,GAAmB5zB,EAAQuJ,GACrC2E,QAAe,EAAKkgB,OAAOtT,gBAAgBhG,EAASE,EAAQY,EAASv1B,GAC3E,OAAO2iC,GAAuC9U,EAAQ5E,EAAQC,EAAWvJ,EAC3E,GApBA,E,CAsBM0zB,oBAAoB1zB,EAA4BuJ,EAAWkC,G,kBAAjE,gB,IAE8CzL,EAU7BA,EACNA,EAOLA,EAAsCA,EAItCA,EAyBWA,EACCA,EAjDhB,MAAOqW,EAAUe,GAAU7N,EAIrBzL,EAAOmH,EAHM,EAAKwpB,oBAA+B,QAAXzuB,EAAAA,EAAOlC,YAAPkC,IAAAA,OAAAA,EAAAA,EAAa9d,OAAQupB,EAAQ7F,YAExC1f,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KAEjE4X,EAAK1c,SAAS2c,IAEZA,EAAIta,SAAW,CAAC,IAGlB,MAAMowC,EAAuB,CAC3BnyB,YAA2B,QAAd1B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAC7B+W,MAAqB,QAAdzY,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgByY,O,IAQQzY,EAGjC,GARIlC,GAAQA,EAAKte,SACfq0C,EAAgB/1B,KAAOA,IAGY,KAAnB,QAAdkC,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,eAAuD,KAAnB,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,iBACxDkmB,EAAgBlmB,gBAA6B,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,eAG/B,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAAa,C,IAE3B1B,EADJ,IAAIgC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG9f,QAAQF,I,IAAWge,EAALhe,OAAAA,IAAmB,QAAdge,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAAY,KACjE,QAAd1B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBgC,cAClBA,EAAaA,EAAW9f,QAAQF,I,IAAMge,EAAAA,OAAc,QAAdA,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBgC,WAAW6gB,SAAS7gC,EAAE,KAE9E6xC,EAAgB7xB,WAAaA,CAC/B,CAEIhC,EAAO3f,QAAQyzC,eACjBD,EAAgBxd,SAAWA,EAC3Bwd,EAAgBzc,OAASA,GAG3B,MAAOzc,EAAOwlB,EAAM1e,SAAkB,EAAK2sB,OAAO9N,qBAAqBtgB,EAAQ6zB,GAC/E,IAAKl5B,EAAMnb,OACT,OAAOixB,QAAQC,QAAQ,IAGzB,MAAM8P,EAAcxgB,EAAOtE,MAAMxZ,OAC3BonB,QAAe,EAAK8kB,OAAO7Z,UAAUiM,GAErC1L,EAAUna,aAAAA,EAAAA,EAAOhZ,KAAKQ,GAAMA,EAAEsY,SAC9Bua,EAASmL,aAAAA,EAAAA,EAAMx+B,KAAKgK,GAAMA,EAAEgoC,gBAC5B5a,EAAatX,EAAS9f,KAAKkC,GAAMA,EAAE2pB,YACnCntB,EAAe,CACnBqhB,YAA2B,QAAd1B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAC7BiM,aAA4B,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,aAC9BhM,MAAO3B,EAAO3f,QAAQshB,OAEpB3B,EAAO3f,QAAQyzC,eACjBzzC,EAAQg2B,SAAWA,EACnBh2B,EAAQ+2B,OAASA,GAGnB,MAAMlJ,QAAe,EAAKkgB,OAAOrT,gBAAgBjG,EAASE,EAAQ+D,EAAY14B,GAC9E,OAAO2iC,GAAuC9U,EAAQ5E,EAAQC,EAAWvJ,EAC3E,GA5DA,E,CA8DM4xB,cAAc5xB,EAA4BuJ,EAAWlpB,G,kBAA3D,gB,IAa+C2f,EACDA,EACDA,EACEA,EAEEA,EACHA,EAkB7BA,EACNA,EAOLA,EAAsCA,EAItCA,EAAAA,EAM6CA,EAtDjD,MAAOqW,EAAUe,GAAU7N,EACrBwqB,EAAeC,EAAAA,WAAAA,UAAuBA,EAAAA,WAAAA,eAE5C,IAAIvkB,GAAgB,EAEpB,MAAMwkB,EAAej0B,EAAOi0B,cAAgBv7B,EAAiBC,SAGvDu7B,EAFYl0B,EAAO3f,QAAQwuB,UAEK,EAAKuf,OAAOpT,aAAe,IAAM,GACvEvL,GAAiB,EAAK0kB,yBAA2BJ,EAGjD,MAAMvT,EAAc,EAAKiO,oBAAgC,QAAZzuB,EAAAA,EAAOtE,aAAPsE,IAAAA,OAAAA,EAAAA,EAAc9d,OAAQ7B,EAAQulB,YACrEzF,EAAa,EAAKsuB,oBAA+B,QAAXzuB,EAAAA,EAAOrE,YAAPqE,IAAAA,OAAAA,EAAAA,EAAa9d,OAAQ7B,EAAQulB,YACnE+a,EAAY,EAAK8N,oBAAsC,QAAlBzuB,EAAAA,EAAOpE,mBAAPoE,IAAAA,OAAAA,EAAAA,EAAoB9d,OAAQ7B,EAAQulB,YACzEuc,EAAc,EAAKsM,oBAAgC,QAAZzuB,EAAAA,EAAO8O,aAAP9O,IAAAA,OAAAA,EAAAA,EAAc9d,OAAQ7B,EAAQulB,YAErEgK,EAAgB,EAAK6e,oBAAkC,QAAdzuB,EAAAA,EAAOqC,eAAPrC,IAAAA,OAAAA,EAAAA,EAAgB9d,OAAQ7B,EAAQulB,YACzEwuB,EAAa,EAAK3F,oBAA+B,QAAXzuB,EAAAA,EAAOlC,YAAPkC,IAAAA,OAAAA,EAAAA,EAAa9d,OAAQ7B,EAAQulB,YAEnE+J,EAAiB,SAClB3P,GAAAA,CACHqC,QAAS,CAAEngB,OAAQ0tB,GACnB9R,KAAM,CAAE5b,OAAQkyC,KAKZt2B,EAAOmH,EADSmvB,EAAWluC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,KAEjE4X,EAAK1c,SAAS2c,IAEZA,EAAIta,SAAW,CAAC,IAGlB,MAAMowC,EAAuB,CAC3Brb,OAAQyb,IAAiBv7B,EAAiBE,OAC1C8I,YAA2B,QAAd1B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAC7B+W,MAAqB,QAAdzY,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgByY,O,IAQUzY,EAGnC,GARIlC,GAAQA,EAAKte,SACfq0C,EAAgB/1B,KAAOA,IAGY,KAAnB,QAAdkC,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,eAAuD,KAAnB,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,iBACxDkmB,EAAgBlmB,gBAA+B,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,eAGjC,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,GAAgBgC,QAAhBhC,EAAAA,EAAgBgC,kBAAAA,IAAAA,OAAhBhC,EAAAA,EAA4BxgB,OAAQ,CACtC,IAAIwiB,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG9f,QAAQF,I,IAAMge,EAAAA,OAAc,QAAdA,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgBgC,WAAW6gB,SAAS7gC,EAAE,IACxF6xC,EAAgB7xB,WAAaA,CAC/B,CAEA,IAAIqyB,EACAJ,IAAiBv7B,EAAiBG,UAAyB,QAAdmH,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB8zB,eAC/DD,EAAgBxd,SAAWA,EAC3Bwd,EAAgBzc,OAASA,EACzBid,EAAqB,EAAKjG,OAAO3L,mBAC/BjC,EACArgB,EACAwgB,EACAwB,EACA0R,IAGFQ,EAAqB,EAAKjG,OAAO7V,YAAYiI,EAAargB,EAAYwgB,EAAWwB,EAAa0R,GAEhG,MAAMS,EAAkB,EAAKlG,OAAO9S,WAEpC,IAAI3M,EACA4lB,EAeJ,OAdyB9jB,QAAQkG,IAAI,CAAC0d,EAAoBH,EAAmBI,IAC1E1jB,MAAK,EAAEzD,EAAUqnB,EAAezlB,MAC/BwlB,EAAc9rC,IAAAA,MAAQsmB,EAAO,UAC7BJ,EAAUlmB,IAAAA,MAAQ+rC,EAAe,WAC1BrnB,KAERyD,MAAMzD,GAAasnB,GAAqCtnB,KACxDyD,MAAMzD,GAAasnB,GAAmCtnB,EAAUsC,KAChEmB,MAAMzD,GAAasnB,GAAkCtnB,EAAUwC,KAC/DiB,MAAMzD,GAAasnB,GAA6BtnB,EAAUnN,KAC1D4Q,MAAMzD,GAAasnB,GAAqCtnB,EAAUnN,KAClE4Q,MAAMzD,GAAasnB,GAAmCtnB,EAAUonB,KAChE3jB,MAAMzD,GAAasnB,GAAoCtnB,EAAUwB,KAE5CiC,MAAMzD,GACFsnB,GAA4BtnB,EAAUnN,IAGpE,GA1FA,E,CA+FA,iB,kBAAA,gBACE,IACE,MAAM,cAAEof,EAAa,kBAAEC,SAA4B,EAAK+O,OAAO3R,iBAC/D,IAAI3Y,EAAU,uBAAuBsb,IAIrC,OAHIC,IACFvb,GAAW,wBAAwBub,EAAkBI,UAEhD,CACLrW,OAAQ,UACRsrB,MAAO,UACP5wB,QAASA,EA6Bb,CA3BE,MAAOlU,GACP,OAAIA,alB2LH,MAaLzL,WACE,OAAOtE,KAAKuQ,KAAO,IAAMvQ,KAAKysB,IAChC,CATA1sB,YAAYgQ,GACV/P,KAAK80C,KAAO/kC,EAAM+kC,MAAQ,KAC1B90C,KAAKuQ,KAAOR,EAAMkU,SAAW,GAC7BjkB,KAAKysB,KAAO1c,EAAM0c,MAAQ,GAC1BzsB,KAAKikB,QAAU,qBAAuBjkB,KAAKuQ,KAAO,IAAMvQ,KAAKysB,IAC/D,GkBrMa,CACLlD,OAAQ,QACRsrB,MAAO9kC,EAAMkU,QACbA,QAASlU,EAAMkU,SAERlU,EAAM0c,MAAQ1c,EAAM0c,KAAKxI,QAC3B,CACLsF,OAAQ,QACRsrB,MAAO,sBACP5wB,QAASlU,EAAM0c,KAAKxI,SAEI,iBAAVlU,EACT,CACLwZ,OAAQ,QACRsrB,MAAO,gBACP5wB,QAASlU,IAGXD,QAAQ2a,IAAI1a,GACL,CACLwZ,OAAQ,QACRsrB,MAAO,oBACP5wB,QAAS,kCAGf,CACF,GAxCA,E,CAsDA8wB,gBAAgB35B,EAAO5a,GACrB,IAAIw0C,EACAC,EAAarsC,IAAAA,UAAYwS,GAE7B,IAAKA,EACH,OAAOwV,QAAQC,QAAQ,IAGJ,iBAAVzV,IAET65B,EAAa7vB,EAA+BhK,IAG9C,IAAK,MAAM7D,IAAQ,CAAC,QAAS,OAAQ,cAAe,UAAW,QAC7D09B,EAAW19B,GAAQvX,KAAK4uC,oBAAoBqG,EAAW19B,GAAO,CAAC,GAGjE,MAAM,MAAEsE,EAAK,KAAEC,EAAI,YAAEC,EAAW,KAAEpZ,GAASsyC,EAE3C,OAAQA,EAAW55B,WACjB,KAAKhD,EAAmBC,MACtB08B,EAAgBh1C,KAAKuuC,OAAO7Z,UAAUugB,EAAWp5B,OACjD,MACF,KAAKxD,EAAmBE,KACtBy8B,EAAgBh1C,KAAKuuC,OAAOzZ,SAASmgB,EAAWp5B,MAAOo5B,EAAWn5B,MAClE,MACF,KAAKzD,EAAmBG,YACtBw8B,EAAgBh1C,KAAKuuC,OAAOvZ,QAAQigB,EAAWp5B,MAAOo5B,EAAWn5B,KAAMm5B,EAAWl5B,aAClF,MACF,KAAK1D,EAAmBK,QACtBs8B,EAAgBh1C,KAAKuuC,OAAO/M,YAAYyT,EAAWp5B,MAAOo5B,EAAWn5B,KAAMm5B,EAAW52B,SACtF,MACF,KAAKhG,EAAmBM,KACtBq8B,EAAgBh1C,KAAKuuC,OAAOrZ,SAC1B+f,EAAWp5B,MACXo5B,EAAWn5B,KACXm5B,EAAWl5B,YACX,KACAk5B,EAAWtyC,MAEb,MACF,KAAK0V,EAAmBO,WACtB,MAAMzT,EAAQ3E,aAAAA,EAAAA,EAAS2E,MACvB6vC,EAAgBh1C,KAAKuuC,OAAOxM,cAAclmB,EAAOC,EAAMC,EAAapZ,EAAM,CAAEwC,UAC5E,MACF,QACE6vC,EAAgBpkB,QAAQC,QAAQ,IAIpC,OAAOmkB,EAAcjkB,MAAMmkB,GAClBtsC,IAAAA,IAAMssC,EAASC,KAE1B,CAEAC,uBAAuBj1B,G,IAGQA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAT7B,MAAMk1B,GAAcrvB,EAAAA,GAAAA,kBACpB,OACEqvB,EAAYC,eAA2B,QAAZn1B,EAAAA,EAAOtE,aAAPsE,IAAAA,OAAAA,EAAAA,EAAc9d,SACzCgzC,EAAYC,eAA0B,QAAXn1B,EAAAA,EAAOrE,YAAPqE,IAAAA,OAAAA,EAAAA,EAAa9d,SACxCgzC,EAAYC,eAAiC,QAAlBn1B,EAAAA,EAAOpE,mBAAPoE,IAAAA,OAAAA,EAAAA,EAAoB9d,SAC/CgzC,EAAYC,eAA6B,QAAdn1B,EAAAA,EAAO9B,eAAP8B,IAAAA,OAAAA,EAAAA,EAAgB9d,SAC3CgzC,EAAYC,eAA0B,QAAXn1B,EAAAA,EAAOxd,YAAPwd,IAAAA,OAAAA,EAAAA,EAAa9d,SACxCgzC,EAAYC,eAA2B,QAAZn1B,EAAAA,EAAOzF,aAAPyF,IAAAA,OAAAA,EAAAA,EAAc9d,SACzCgzC,EAAYC,eAA2B,QAAZn1B,EAAAA,EAAO8O,aAAP9O,IAAAA,OAAAA,EAAAA,EAAc9d,SACzCgzC,EAAYC,eAA6B,QAAdn1B,EAAAA,EAAOqC,eAAPrC,IAAAA,OAAAA,EAAAA,EAAgB9d,SAC3CgzC,EAAYC,eAAen1B,EAAOsH,aAClC4tB,EAAYC,eAAen1B,EAAOgiB,gBAEtC,CAMMuO,kBAAkB9kB,G,kBAAxB,gBACE,MAAMqkB,EAAUrkB,EAAQqkB,QAAQ5tC,QAAQ2B,GAAMA,EAAE8e,kBAChD,IAAKmtB,EAAQtwC,OACX,OAAOixB,QAAQC,QAAQ,CAAEpE,KAAM,KAGjC,MAAMkC,QAAe,EAAK4mB,sBAAsB,SAAK3pB,GAAAA,CAASqkB,aAC9D,MAAO,CAAExjB,KAAM,EAAC+oB,EAAAA,EAAAA,aAAY7mB,IAC9B,GARA,E,CAUA4mB,sBAAsB/0C,GACpB,MAAMkpB,EAAYlpB,EAAQ2E,OAAS3E,EAAQi1C,SACrCjf,EAAWla,KAAKuf,KAAKyW,EAAAA,MAAe5oB,EAAUxf,MAAQ,KACtDqtB,EAASjb,KAAKuf,KAAKyW,EAAAA,MAAe5oB,EAAUlf,IAAM,KAClD4jC,EAAa5tC,EAAQyvC,QAAQ,GAG7B+D,EAAuB,CAC3Bj1C,MAAOqvC,EAAW5tC,QAAQkiB,aAAe,CAAC,IAAK,KAAO,IACtDkM,gBAAgB,EAChB4H,WACAe,UAGF,GAAI6W,EAAW5tC,QAAQqhB,YAAa,CAClC,MAAMM,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG9f,QAAQF,GAAMA,GAAKqN,OAAO4+B,EAAW5tC,QAAQqhB,eACnFmyB,EAAgB7xB,WAAaA,CAC/B,CAEA,MAAMwe,EAAc3gC,KAAK4uC,oBAAoBR,EAAWvyB,MAAMxZ,OAAQ,CAAC,GACjEie,EAAatgB,KAAK4uC,oBAAoBR,EAAWtyB,KAAKzZ,OAAQ,CAAC,GAC/Dy+B,EAAY9gC,KAAK4uC,oBAAoBR,EAAWryB,YAAY1Z,OAAQ,CAAC,GAG3E,OAAOrC,KAAKuuC,OACT3L,mBAAmBjC,EAAargB,EAAYwgB,OAH3B1gC,EAGmD4zC,GACpEjjB,MAAMzD,IAEL,MAAMooB,EAAc11C,KAAK4uC,oBAAoBR,EAAW5rB,QAAQngB,OAAQ,CAAC,GAkBzE,OAjBI+iB,EAAcswB,GAChBpoB,EAAW1kB,IAAAA,OAAS0kB,GAAWxkB,GACtBsc,EAAiBswB,GAAanxC,KAAKuE,EAAEolB,eAErCwnB,IACTpoB,EAAW1kB,IAAAA,OAAS0kB,GAAWxkB,GACtBA,EAAEolB,cAAgBwnB,KAKzBtH,EAAWzrB,mBACb2K,EAAW1kB,IAAAA,OAAS0kB,GAAWxkB,I,IACrBA,EAAR,QAAsB,QAAdA,EAAAA,EAAEilB,oBAAFjlB,IAAAA,OAAAA,EAAAA,EAAgBnJ,OAAM,KAI3BiJ,IAAAA,IAAM0kB,GAAWxkB,IACtB,MAAM6sC,E1B5mBT,SAA4B5nB,GACjC,GAAIA,EAAapuB,OAAQ,CACvB,IAAIi2C,EACF,4GAwBF,OAvBAhtC,IAAAA,KACEA,IAAAA,IAAMmlB,GAAeoB,GAGjB,cAFgBzR,IAAAA,KAAYyR,EAAIxH,OAGtBtiB,OAAO,wBACjB,gBACA8pB,EAAI5J,MACJ,KACA4J,EAAI5e,KACJ,IACA4e,EAAII,QAPJ,aAUAJ,EAAIlL,QACJ,gBAGHkL,IACCymB,EAAyBA,EAAuBzoB,OAAOgC,EAAI,IAG/DymB,EAAyBA,EAAuBzoB,OAAO,YAChDyoB,CACT,CACE,MAAO,EAEX,C0B6kBwCxwB,CAAyBtc,EAAEilB,cAEzD,IAAI8nB,EAA2B,GAK/B,OAJIzH,EAAWxrB,eACbizB,EAAiBjtC,IAAAA,IAAME,EAAEgS,MAAO,SAG3B,CACL+5B,MAAmB,MAAZ/rC,EAAE/J,MAAgB,UAAY,KACrCsmB,KAAoB,IAAdvc,EAAE4kB,UACR0gB,WAAYA,EACZj2B,KAAMrP,EAAEyH,KAAOolC,EACf13B,KAAM43B,EACP,GACD,GAER,CAGAzE,uBAAuBjxB,EAAQ3f,GAC7B,MAAM60C,GAAcrvB,EAAAA,GAAAA,kBAEpBpd,IAAAA,QADc,CAAC,QAAS,OAAQ,cAAe,UAAW,SACxCE,IACZqX,EAAOrX,IAAMqX,EAAOrX,GAAGzG,SACzB8d,EAAOrX,GAAGzG,OAASrC,KAAK4uC,oBAAoBzuB,EAAOrX,GAAGzG,OAAQ7B,EAAQulB,YACxE,IAGE5F,EAAOsH,aACTtH,EAAOsH,WAAaznB,KAAK4uC,oBAAoBzuB,EAAOsH,WAAYjnB,EAAQulB,aAGtE5F,EAAO4V,UACT5V,EAAO4V,QAAUsf,EAAYhvC,QAAQ8Z,EAAO4V,QAASv1B,EAAQulB,WAAYutB,KAG3E1qC,IAAAA,QAAUuX,EAAOY,WAAYgD,IAC3BA,EAAKxK,OAAS3Q,IAAAA,IAAMmb,EAAKxK,QAASG,GACX,iBAAVA,GACD27B,EAAYhvC,QAAQqT,EAAMpV,WAAY9D,EAAQulB,YAE/CsvB,EAAYhvC,QAAQqT,EAAOlZ,EAAQulB,aAE5C,GAEN,CAEAosB,YAAYzoB,EAAWvJ,GACrB,GAAiC,UAA7BA,EAAO3f,QAAQ0xC,UACjB,OAAO,EAET,MAAO1b,EAAUe,GAAU7N,EACrBosB,EAAgBx5B,KAAKuf,KAAKyW,EAAAA,MAAe,OAAStyC,KAAK+1C,YAAc,KACrEC,EAAiB15B,KAAKuf,KAAKzW,EAAoBplB,KAAKi2C,aAAe,KAIzE,OAHqD,SAA7B91B,EAAO3f,QAAQ0xC,WAEjBlyC,KAAKk2C,UAAY1f,EAAWsf,GAAiBve,EAASf,EAAWwf,EAEzF,CAz5BAj2C,YAAYo2C,GACV1Y,MAAM0Y,G,KA05BRjF,gBAAmB/wB,IACbngB,KAAK0/B,2BAIFvf,EAAO9E,YAAc7V,GAAkB2a,EAAO9E,YAAc7V,G,KAGrEksC,qBAAwBvxB,GACfngB,KAAK0/B,2BAA6Bvf,EAAO9E,YAAc7V,GAAkB2a,EAAO9E,YAAc7V,GAj6BrGxF,KAAK8yC,eAA0C,gBAAzBjtB,IAAAA,UAAAA,IAEtB7lB,KAAKo2C,YAAc,CACjBC,YAAalI,GACb9rB,kBAAmB6tB,GAIrB,MAAMmF,GAAcrvB,EAAAA,GAAAA,kBACpBhmB,KAAK4uC,oBAAsBhmC,IAAAA,QAAUgmC,GAAqByG,GAG1Dr1C,KAAK+yB,aAAeojB,EAAiB5tC,GACrCvI,KAAKuQ,KAAO4lC,EAAiB5lC,KAC7BvQ,KAAK8zB,UAAYqiB,EAAiBriB,UAClC9zB,KAAK+zB,gBAAkBoiB,EAAiBpiB,gBAExC,MAAMuiB,EzB2FH,SAAyBA,GAK9B,GAJKA,IACHA,EAAW,CAAC,IAwBhB,SAA+BA,GAC7B,SAAIA,EAASC,cAAiB3tC,IAAAA,QAAU0tC,EAASC,mBAG7CD,EAASt0B,QAAUs0B,EAASt0B,OA1LF,EA8LhC,CA7BOw0B,CAAsBF,GACzB,OAAOA,EAGT,MAAMG,EAAaH,EAASt0B,QAAU,EAGtC,GAFAs0B,EAASt0B,OAtKqB,EAwK1By0B,EAAa,EAAG,CAClB,MAAMC,EAAsBJ,EAASC,cAAgB,CAAC,EACtDD,EAASK,mBAAqBD,EAAoBE,SAAU,EAC5DN,EAASjS,yBAA2BqS,EAAoB3jB,cAAgB,YACjEujB,EAASC,YAClB,CAMA,OAJIE,EAAa,IACfH,EAASO,QAA2C,KAAjC,EAAUA,QAA4B,KAAOrnC,OAAO8mC,EAASO,UAG3EP,CACT,CyBnHqBpG,CAA2BiG,EAAiBG,UAG7Dt2C,KAAKk2C,OAASI,EAASJ,OACvBl2C,KAAK+1C,WAAaO,EAASP,YAAc,KACzC/1C,KAAKi2C,YAAcK,EAASL,aAAe,KAG3C,MAAMzkB,EAAM8kB,EAASlS,UAAY,KACjCpkC,KAAKokC,SAAWhf,EAAoBoM,GAGpCxxB,KAAKs0C,wBAA0BgC,EAAShC,wBACxCt0C,KAAK82C,qBAAuBR,EAASQ,qBAGrC92C,KAAK0/B,yBAA2B4W,EAASK,qBAAsB,EAC/D32C,KAAKqkC,yBAA2BiS,EAASjS,yBACzCrkC,KAAKskC,2BAA6BgS,EAAShS,2BAC3CtkC,KAAKg/B,4BAA8BsX,EAAStX,4BAE5C,MAAM+X,EAAgB,CACpBjjB,UAAW9zB,KAAK8zB,UAChBC,gBAAiB/zB,KAAK+zB,gBACtBqQ,SAAUpkC,KAAKokC,SACf1E,yBAA0B1/B,KAAK0/B,yBAC/B2E,yBAA0BrkC,KAAKqkC,yBAC/BC,2BAA4BtkC,KAAKskC,2BACjCtF,4BAA6Bh/B,KAAKg/B,4BAClCjM,aAAc/yB,KAAK+yB,cAGrB/yB,KAAKuuC,OAAS,IAAI1P,GAAOkY,EAC3B,EAm3BF,SAASvE,GAAiBwE,EAAcv3B,GACtC,MAAMw3B,EAAuBruC,IAAAA,IAAMkb,KAAgCrE,GAAW,QACxEy3B,EAActuC,IAAAA,OAASouC,GAAejzB,GACnCnb,IAAAA,SAAWquC,EAAsBlzB,EAAK9C,IAAI1Q,QAGnD,OAAO3H,IAAAA,IAAMsuC,GAAcnzB,GACJD,EAAmCC,EAAK9C,IAAK8C,EAAKxK,QACnDsK,aAAaszB,GAAcrzB,kBAEnD,CAaA,SAASqxB,GAAaiC,GACpB,MAAO,CACLj/B,KAAMi/B,EAAU7mC,KAChB8mC,YAAY,EAEhB,CAYO,SAASC,GAAqBv4C,GACnC,MAAqB,iBAAVA,EACFqmB,EAAkBrmB,GAIpB,IADe6J,IAAAA,IAAM7J,EAAOqmB,GACRvf,KAAK,KAAO,GACzC,CAEA,SAASytC,GAA4Bv0C,GACnC,MAAqB,iBAAVA,EACFA,EAEFA,EAAM8G,KAAK,IACpB,CAUO,SAAS+oC,GAAoByG,EAAal1B,EAAQ4F,GACvD,IAAI+J,EAAiBulB,EAAYhvC,QAAQ8Z,EAAQ4F,EAAYuxB,IAI7D,OAHIn3B,GAAUA,IAAW2P,IAAmB1K,EAAc0K,KACxDA,EAAiB,KAAOA,EAAiB,MAEpCA,CACT,CAUA,SAASujB,GAAiBznB,EAAgCvD,GACxD,IAAK,IAAI1gB,EAAI,EAAGA,EAAIikB,EAAQqkB,QAAQtwC,OAAQgI,IAAK,CAC/C,MAAMwY,EAASyL,EAAQqkB,QAAQtoC,GAC/B,GAAIwY,EAAOkI,QAAUA,EACnB,OAAOlI,CAEX,CACA,OAAO,IACT,CAEA,MAAM4zB,GAAqB,CAAC5zB,EAA4BuJ,K,IAGvCvJ,EACCA,EACPA,EAELA,EANJ,MAAOqW,EAAUe,GAAU7N,EACrBlpB,EAAe,CACnBqhB,YAA2B,QAAd1B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB0B,YAC7BiM,aAA4B,QAAd3N,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2N,aAC9BhM,MAAqB,QAAd3B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB2B,OAMzB,OAJkB,QAAd3B,EAAAA,EAAO3f,eAAP2f,IAAAA,OAAAA,EAAAA,EAAgB8zB,gBAClBzzC,EAAQg2B,SAAWA,EACnBh2B,EAAQ+2B,OAASA,GAEZ/2B,CAAO,EC/jChB,2B,8ZAmBO,MAAM+2C,GAAqB,EAAGn8B,QAAOyT,aAAYod,e,IA6GH7wB,EACDA,EACDA,EACAA,EA/GjD,MAAMkzB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV2sC,EAAiB,W,MAAA,cAAOnzB,EAAeC,GAC3C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CwkB,QAAazR,EAAW0f,OAAOU,WAAWtO,EAAargB,GAC7D,IAAI9f,EAA0C8/B,aAAAA,EAAAA,EAAMx+B,KAAK8Z,IAAS,CAChE7c,MAAO6c,EAAIrL,KACXm6B,MAAO9uB,EAAIrL,SAIb,OAFA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX8Bqb,EAAeC,G,gCAAtB,KAadkpB,QAASkK,EAAanwC,MAAOowC,GAAcC,GAAavK,GAAW,gBAE1E,aADsBmK,EAAe5zB,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bm1C,EAAiB,W,MAAA,cAAO37B,EAAeC,GAE3C,WAD4B+S,EAAW0f,OAAOja,sBAE5C,MAAO,GAGT,MAAMqM,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5C1C,QAAcyV,EAAW0f,OAAO9M,YAAYd,EAAargB,EAAY,KAAM,KAAM,CAAC,GAClFrC,EAAqBrV,IAAAA,QAAUwQ,EAAMtX,KAAKa,GAAkBA,EAAKsb,MAAQ,MAGzEw5B,EAAU7uC,IAAAA,OAASqV,GAAOja,GAAMA,EAAEka,IAAMla,EAAEjF,OAAS,KAAI+C,KAAKkC,GAAMua,EAAgBva,KACxF,IAAIxD,EAA0Ci3C,aAAAA,EAAAA,EAAS31C,KAAKoc,IAAS,CACnEnf,MAAOmf,EACPwsB,MAAOxsB,MAIT,OAFA1d,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBApB8Bqb,EAAeC,G,gCAAtB,KAsBdkpB,QAAS0S,EAAa34C,MAAO44C,GAAcC,GAAa/S,GAAW,gBAE1E,aADsB2S,EAAep8B,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bw1C,EAAkB,W,MAAA,cAAOh8B,EAAeC,EAAcF,EAAayC,GACvE,MAAMsiB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CglB,EAAYjS,EAAW+f,oBAAoBhzB,GAC3Ck8B,EAAYjpB,EAAW+f,oBAAoBvwB,GAC3C7d,EAAU,CACd40B,SAAU,MACVuM,kBAAmBvmB,EAAM5a,QAAQmhC,mBAE7BvoB,QAAcyV,EAAW0f,OAAO9M,YAAYd,EAAargB,EAAYwgB,EAAWgX,EAAWt3C,GACjG,IAAIu3C,EAA8C3+B,aAAAA,EAAAA,EAAOtX,KAAKa,IAAU,CACtE5D,MAAO4D,EAAK4N,KACZm6B,MAAO/nC,EAAK4N,SAId,OAFAwnC,EAAcnvC,IAAAA,OAASmvC,GAAc5gC,GAAMA,EAAEpY,QAC7Cg5C,EAAYn1C,WAAWmrC,MAChBgK,CACT,I,gBAjB+Bl8B,EAAeC,EAAcF,EAAayC,G,gCAAjD,KAmBf2mB,QAASgT,EAAcj5C,MAAOg5C,GAAeE,GAAcpT,GAAW,gBAO7E,aANsBgT,EACpBz8B,EAAMS,MAAMxZ,OACZ+Y,EAAMU,KAAKzZ,OACX+Y,EAAMW,YAAY1Z,OAClB+Y,EAAMiD,QAAQhc,OAGlB,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAAQ+Y,EAAMW,YAAY1Z,OAAQ+Y,EAAMiD,QAAQhc,SAG7Es+B,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,QACxDy+B,EAAYjS,EAAW+f,oBAAqC,QAAjBxzB,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,QAC9Dy1C,EAAYjpB,EAAW+f,oBAAiC,QAAbxzB,EAAAA,EAAMiD,eAANjD,IAAAA,OAAAA,EAAAA,EAAe/Y,SAEhEkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR6J,GAAW,GACV,CAACzO,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACRqS,GAAW,GACV,CAACjX,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACR0S,GAAY,GACX,CAACtX,EAAargB,EAAYwgB,EAAWgX,IAExC,MAAMzI,EAAkB93B,GACdxY,I,QACQ,OAAVA,GACFktC,G,yUAAS,IAAK7wB,G,WAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,K,iVACzC,EAIE+gC,EAAuBjR,EAAW0f,OAAOzO,uBAE/C,OACE,sCACE,mBAACgG,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMS,MAAMxZ,OACnB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMU,KAAKzZ,OAClB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,YAI/B,mBAACvJ,GAAcA,KACZhG,GACC,mBAACyP,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMW,YAAY1Z,OACzB7B,QAAS2uC,EACTpD,UAAWmD,EACXjD,SAAUoD,EAAe,mBAI7BvP,GACA,mBAACyP,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMiD,QAAQhc,OACrB7B,QAASm3C,EACT5L,UAAW2L,EACXzL,SAAUoD,EAAe,cAI/B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMzY,KAAKN,OAClB7B,QAASu3C,EACThM,UAAWiM,EACX/L,SAAUoD,EAAe,Y,EC1M/B6I,GAAsB/Q,GAExB,mBAAC2D,GAAAA,KAAIA,CACH5E,UAAU,UACV31B,KAAK,kBACLs5B,QAAS,KACPsO,OAAOC,KAAK,yEAAwBjR,EAAM52B,OAAQ,SAAS,IAMtD8nC,GACXlR,IAIA,MAAM,KAAEpjB,EAAI,WAAEu0B,EAAU,YAAEC,EAAW,SAAEC,GAAarR,EACpD,OACE,mBAAClB,MAAAA,CACCgH,MAAO,CACLwL,QAAS,OACTzM,MAAO,OACP0M,eAAgB,kBAGlB,mBAAC5N,GAAAA,KAAIA,CAAC5E,UAAU,UAAU31B,KAAK,aAAas5B,QAAS,IAAMyO,EAAWv0B,KACtE,mBAACm0B,GAAAA,CAAmB3nC,KAAMwT,EAAK9C,IAAI1Q,KAAM2d,YAAanK,EAAK9C,IAAIiN,cAC/D,mBAAC4c,GAAAA,KAAIA,CAAC5E,UAAU,UAAU31B,KAAK,QAAQs5B,QAAS,IAAM2O,EAASz0B,KAC/D,mBAAC+mB,GAAAA,KAAIA,CAAC5E,UAAU,UAAU31B,KAAK,cAAcs5B,QAAS,IAAM0O,EAAYx0B,K,ECzC9E,c,qMAYA,MAAM8kB,GAAazC,IACV,CACLS,KAAMJ,GAAAA,GAAG;sBACSL,EAAMgF,QAAQ;MAEhCV,OAAOjE,EAAAA,GAAAA,KAAI,CACTkS,WAAYvS,EAAMwF,WAAWgN,iBAC7BC,SAAUzS,EAAMwF,WAAWkN,UAAUD,SACrCE,OAAQ,UACRN,QAAS,mBAKFO,GAAiD,I,IAAA,WAAEV,EAAU,YAAEC,EAAW,KAAEx0B,GAAgB,EAAPojB,E,kXAAAA,CAAAA,EAAAA,CAAlCmR,aAAYC,cAAax0B,SACvF,MAAM0kB,GAASG,EAAAA,GAAAA,YAAWC,IAiB1B,OACE,mBAAC+B,GAAAA,QAAOA,CAACC,QAhBW,EAAGoO,0BACvB,mBAACZ,GAAsBA,GAAAA,CAAAA,EACjBlR,EAAAA,CACJpjB,KAAMA,EACNu0B,WAAY,KACVA,EAAWv0B,GACXk1B,GAAsB,EAExBV,YAAa,KACXA,EAAYx0B,GACZk1B,GAAsB,KAMOC,UAAU,MAAMC,aAAAA,GAC/C,mBAAC1O,OAAAA,CAAKvE,UAAWuC,EAAOiC,OAAQ3mB,EAAK9C,IAAI1Q,MAAI,ECtB5C,SAAS6oC,IAAoB,cAAEC,EAAa,SAAEpN,EAAQ,iBAAEqN,EAAgB,UAAEC,I,IAG3EF,EAFJ,MAAM5Q,GAASG,EAAAA,GAAAA,YAAWC,IAE1B,OAAyB,QAArBwQ,EAAAA,EAAc74C,eAAd64C,IAAAA,OAAAA,EAAAA,EAAuB15C,QAAS,EAEhC,mBAAC65C,GAAAA,QAAOA,CACND,UAAWA,EACXx6C,MAAOs6C,EAAct6C,MACrB06C,iBAAkBJ,EAAc9oC,KAChC21B,UAAWuC,EAAOiR,QAClBl5C,QAAS64C,EAAc74C,QACvBkvC,YAAa,KAAO2J,EAAc9oC,KAClC07B,SAAWltC,IACTktC,EAASltC,EAAMA,OAAS,GAAG,EAE7Bu6C,iBAAkBA,EAClBK,cAAe,IACfC,kBAAkB,EAClBC,iBAAiB,IAKnB,mBAACC,GAAAA,aAAYA,CACXP,UAAWA,EACXrT,UAAWuC,EAAOsR,MAClBh7C,MAAOs6C,EAAct6C,OAAS,GAC9B2wC,YAAa,KAAO2J,EAAc9oC,KAClCkpC,iBAAkBJ,EAAc9oC,KAChC07B,SAAWltC,IACTktC,EAASltC,EAAMuF,WAAW,EAE5Bg1C,iBAAkBA,EAElBrM,MAAO,CAAE+M,OAAQ,OAAQC,WAAY,MAAOC,UAAW,MAAOC,YAAa,MAAO9R,SAAU,UAIpG,CAEA,MAAMQ,GAAazC,IAA0B,CAC3CsT,SAASjT,EAAAA,GAAAA,KAAI,CACX2T,OAAQ,EACRC,QAAS,IAEXN,MAAOtT,GAAAA,GAAG;;;;;;MCjDZ,SAAS6T,GAAoBC,EAAoBC,EAAqBz7C,G,IAOhEw7C,EAAAA,EANJ,MAAO,CACLhqC,KAAMgqC,EAAShqC,KACfxR,OAAOA,aAAAA,EAAAA,EAAOuF,aAAc,GAC5BogB,WAAY61B,EAAS71B,UAAY81B,EACjCC,WAAYF,EAASE,SACrBj6C,QAIE,QAHA+5C,EAAgB,QAAhBA,EAAAA,EAAS/5C,eAAT+5C,IAAAA,OAAAA,EAAAA,EAAkBz4C,KAAK6nC,IAA6B,CAClD5qC,MAAO4qC,EAAOrlC,WACdomC,MAAOf,EAAOrlC,sBAFhBi2C,IAAAA,EAAAA,EAGO,GAEb,CCVO,SAASG,IAAqB,KAAE32B,EAAI,WAAEu0B,EAAU,YAAEC,EAAW,SAAEC,EAAQ,cAAEmC,IAC9E,MAAMlS,GAASG,EAAAA,GAAAA,YAAWC,KAInB+R,EAAWC,IAAkBpV,EAAAA,GAAAA,WAAS,IACtCqV,EAAUC,IAAiBtV,EAAAA,GAAAA,WAAS,GAE3C,IAAIlsB,EDOC,SAAiCwK,G,IAckBxK,EAZxD,MAAMA,EAA0BwK,EAAK9C,IAAI1H,OAAOzX,KAAI,CAACy4C,EAAoBptC,IACvEmtC,GAAoBC,GAAU,EAAOx2B,EAAKxK,OAAOpM,MAInD,KAAOoM,EAAO5Z,OAASokB,EAAKxK,OAAO5Z,QAAQ,CACzC,MAAM46C,EAAWx2B,EAAK9C,IAAI1H,OAAOwK,EAAK9C,IAAI1H,OAAO5Z,OAAS,GACpDZ,EAAQglB,EAAKxK,OAAOA,EAAO5Z,QACjC4Z,EAAOnN,KAAKkuC,GAAoBC,GAAU,EAAMx7C,GAClD,CAGA,GAAIwa,EAAO5Z,QAAU4Z,EAAOA,EAAO5Z,OAAS,GAAGZ,QAAkC,QAAzBwa,EAAAA,EAAOA,EAAO5Z,OAAS,UAAvB4Z,IAAAA,OAAAA,EAAAA,EAA2BkhC,UAAU,CAC3F,MAAMF,EAAWx2B,EAAK9C,IAAI1H,OAAOwK,EAAK9C,IAAI1H,OAAO5Z,OAAS,GAC1D4Z,EAAOnN,KAAKkuC,GAAoBC,GAAU,EAAM,IAClD,CAEA,OAAOhhC,CACT,CC3BeyhC,CAAwBj3B,GAMrC,OALAxK,EAASA,EAAOlX,QAAO,CAACyG,EAAkBqE,IAEjC,EAAS4W,EAAK9C,IAAI1H,OAAO5Z,SAAWmJ,EAAE4b,UAAaX,EAAKk3B,OAASnyC,EAAE/J,OAAS+7C,GAAYF,IAI/F,mBAAC3U,MAAAA,CACCC,WAAW4C,EAAAA,GAAAA,IAAGL,EAAO4C,WACrB6P,YAAa,IAAML,GAAe,GAClCM,aAAc,IAAMN,GAAe,IAEnC,mBAACO,GAAAA,gBAAeA,CAAChQ,QAAQ,QACvB,mBAAC4N,GAAcA,CAACj1B,KAAMA,EAAMu0B,WAAYA,EAAYC,YAAaA,EAAaC,SAAUA,IACxF,mBAAC6C,GAAAA,YAAWA,CAACnV,UAAWuC,EAAOiC,OAAO,KACrCnxB,EAAOzX,KAAI,CAACu3C,EAA8BlsC,IAEvC,mBAAC25B,KAAAA,SAAc,CAACnoC,IAAKwO,GACnB,mBAACisC,GAAmBA,CAClBG,UAAqB,IAAVpsC,GAAe4W,EAAKk3B,MAC/B5B,cAAeA,EACfpN,SAAWltC,KACK,KAAVA,GAAgBs6C,EAAc30B,WAEhCi2B,EAAc52B,EAAM5W,EAAOpO,GAE7Bg8C,GAAc,GACdF,GAAe,EAAM,EAEvBvB,iBAAkByB,IAEnB5tC,IAAUoM,EAAO5Z,OAAS,EAAI,IAAM,MAI3C,mBAAC07C,GAAAA,YAAWA,CAACnV,UAAWuC,EAAOiC,OAAO,MAI9C,CAEA,MAAM7B,GAAazC,IAA0B,CAC3CiF,WAAW5E,EAAAA,GAAAA,KAAI,CACb6U,gBAAiBlV,EAAMQ,OAAO8E,WAAW6P,UACzC9P,aAAcrF,EAAMoF,MAAMC,eAC1B+P,YAAapV,EAAMgF,QAAQ,IAC3BiP,QAAS,KAAKjU,EAAMgF,QAAQ,KAC5B4O,OAAQ,GAAG5T,EAAM14B,GAAG09B,QAAQqQ,sBAE9B1rC,MAAO02B,GAAAA,GAAG;wBACYL,EAAMQ,OAAO72B,MAAM+9B;IAEzCpD,OAAOjE,EAAAA,GAAAA,KAAI,CACT4T,QAAS,EACTD,OAAQ,IAEV5T,QAAQC,EAAAA,GAAAA,KAAI,CACV4T,QAASjU,EAAMgF,QAAQ,QCzEpB,SAASsQ,IAAkB,UAAEC,IAClC,MAAOC,EAAUC,IAAepW,EAAAA,GAAAA,WAAS,GACnCgD,GAASG,EAAAA,GAAAA,YAAWC,IACpBzC,GAAQoC,EAAAA,GAAAA,aAERsT,EAAqB76B,IACzB06B,EAAU16B,GACV46B,GAAY,EAAM,EAWdE,GAAYC,EAAAA,GAAAA,UAAQ,IAuB5B,SAAwBnS,GACtB,MAAMtqB,EAAayF,KACb+2B,EAA2B,GACjC,IAAK,MAAME,KAAgB18B,EAAY,CACrC,MACM28B,EADY38B,EAAW08B,GACFn6C,KAAKkf,GAAM,mBAACm7B,GAAAA,KAAAA,KAAS,CAACzR,MAAO1pB,EAAEzQ,KAAM5R,IAAKqiB,EAAEzQ,KAAMs5B,QAAS,IAAMA,EAAQ7oB,OACpG+6B,EAAU3vC,KAAK,mBAAC+vC,GAAAA,KAAAA,KAAS,CAACzR,MAAOuR,EAAct9C,IAAKs9C,EAAcG,WAAYF,IAChF,CACA,OAAOH,CACT,CAhCkCM,CAAeP,IAAoB,CAACH,IAEpE,OACE,mBAAC1V,MAAAA,MACG2V,GACA,mBAACU,GAAAA,OAAMA,CACLzV,KAAK,OACL0V,QAAQ,YACRrW,WAAW4C,EAAAA,GAAAA,IAAGL,EAAOjC,QACrB6C,aAAW,mBACXQ,QAAS,IAAMgS,GAAaD,KAG/BA,GACC,mBAACzO,GAAAA,oBAAmBA,CAACtD,QAlBJ,KACrBgS,GAAY,EAAM,EAiBgCW,YAAAA,GAC5C,mBAACpP,GAAAA,MAAKA,CAACnB,SAvBG7pC,IAChB0N,QAAQ2a,IAAIroB,EAAEkrC,cAAcvuC,MAAM,EAsBD2uC,OAAQ,mBAAC5C,GAAAA,KAAIA,CAACv6B,KAAK,aAC9C,mBAAC4rC,GAAAA,KAAIA,CAAClP,MAAO,CAAEC,SAAU,WAAYhC,OAAQ9E,EAAM8E,OAAOC,WAAa4Q,IAKjF,CAaA,SAASlT,GAAUzC,GACjB,MAAO,CACLI,OAAQC,GAAAA,GAAG;sBACOL,EAAMgF,QAAQ;MAGpC,CCxEA,mB,kyBAcO,MAAMqR,GAAuB,EAAGrhC,QAAO6wB,e,IAwCvC7wB,EAvCL,MAAMshC,EAAoB,CAAC34B,EAAkB5W,EAAepO,KAC1DglB,EAAKxK,OAAOpM,GAASpO,EACrB,MAAM49C,EAAYvhC,EAAM2F,UAAU67B,WAAW57B,GAAMA,IAAM+C,IACnDhD,EAAY3F,EAAM2F,UACxBA,EAAU47B,GAAa54B,EACvBkoB,EAAS,SAAK7wB,GAAAA,CAAO2F,c,EAGjB87B,EAAkB94B,IACtB,MAAM5W,EAAQiO,EAAM2F,UAAUjH,QAAQiK,GAChChD,EAAYf,EAAK5E,EAAM2F,UAAW5T,EAAOA,EAAQ,GACvD8+B,EAAS,SAAK7wB,GAAAA,CAAO2F,c,EAGjB+7B,EAAmB/4B,IACvB,MAAM5W,EAAQiO,EAAM2F,UAAUjH,QAAQiK,GAChChD,EAAYf,EAAK5E,EAAM2F,UAAW5T,EAAOA,EAAQ,GACvD8+B,EAAS,SAAK7wB,GAAAA,CAAO2F,c,EAGjBg8B,EAAgBh5B,I,IACF3I,EAAlB,MAAM2F,EAA2B,QAAf3F,EAAAA,EAAM2F,iBAAN3F,IAAAA,OAAAA,EAAAA,EAAiB/Y,QAAQ2e,GAAMA,IAAM+C,IACvDkoB,EAAS,SAAK7wB,GAAAA,CAAO2F,c,EAcvB,OACE,mBAAC+kB,GAAcA,KACb,mBAACkX,GAAAA,gBAAeA,CAAChR,MAAO,GAAG,aACX,QAAf5wB,EAAAA,EAAM2F,iBAAN3F,IAAAA,OAAAA,EAAAA,EAAiBtZ,KAAI,CAACkf,EAAGrZ,IAEtB,mBAAC+yC,GAAoBA,CACnB32B,KAAM/C,EACNriB,IAAKgJ,EACLgzC,cAAe+B,EACfpE,WAAYuE,EACZtE,YAAauE,EACbtE,SAAUuE,MAIhB,mBAACrB,GAAiBA,CAACC,UA1BJ16B,IACjB,MAAMg8B,EAAUl4B,EAAmB9D,GACnCg8B,EAAQhC,OAAQ,EAChB,IAAIl6B,EAAY3F,EAAM2F,UAAUoM,OAAO8vB,GACvCl8B,EA2BJ,SAA2BA,GACzB,MAAMm8B,EAAiBn8B,EAAU67B,WAAW74B,GAA+B,UAAtBA,EAAK9C,IAAIxB,WAG9D,GADA3P,QAAQ2a,IAAIyyB,GACRA,GAAkB,EAAG,CACvB,MAAMC,EAAYp8B,EAAUm8B,GAC5Bn8B,EAAUxL,OAAO2nC,EAAgB,GACjCn8B,EAAU3U,KAAK+wC,EACjB,CACA,OAAOp8B,CACT,CArCgBq8B,CAAkBr8B,GAI9BkrB,EAAS,SAAK7wB,GAAAA,CAAO2F,c,MChDzB,mB,kyBAgBA,MAAMs8B,GAA6C,CACjD,CAAE3S,MAAO,eAAgB3rC,MAAO,GAChC,CAAE2rC,MAAO,iBAAkB3rC,MAAO,GAClC,CAAE2rC,MAAO,eAAgB3rC,MAAO,IAG5Bu+C,GAA8C,CAClD,CAAE5S,MAAO,UAAW3rC,MAAO,WAC3B,CAAE2rC,MAAO,cAAe3rC,MAAO,cAC/B,CAAE2rC,MAAO,WAAY3rC,MAAO,aAGxBw+C,GAAgD,CACpD,CAAE7S,MAAO,UAAW3rC,MAAO,WAC3B,CAAE2rC,MAAO,OAAQ3rC,MAAO,QACxB,CAAE2rC,MAAO,QAAS3rC,MAAO,UASdy+C,GAAqB,EAAGniC,YAAWoiC,eAAcxR,eAC5D,MAAOC,EAAQwR,IAAajY,EAAAA,GAAAA,WAAS,GAC/BgD,GAASG,EAAAA,GAAAA,YAAWC,IAEpB8U,EAAiBx7C,I,IACGA,EAAxB,MAAM4qC,EAAWv9B,OAAOrN,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,OACzB,OAAbguC,GACFd,EAAS,SAAKwR,GAAAA,CAAc7kB,MAAOmU,IACrC,EAGI6Q,EAAgBrmC,GACZoyB,IACe,OAAjBA,EAAO5qC,OACTktC,EAAS,SAAKwR,GAAAA,CAAc,CAAClmC,GAAOoyB,EAAO5qC,QAC7C,EA2CE8+C,EAAsB,IAExB,sCACE,mBAACtO,GAAAA,YAAWA,CAAC7E,MAAM,SAAS8E,WAAY,IACtC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAO0+C,EAAavL,UACpB1xC,QAAS+8C,GACTtR,SAAU2R,EAAa,gBAG3B,mBAACrO,GAAAA,YAAWA,CAAC7E,MAAM,sBAAsB8E,WAAY,IACnD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAa9b,kBACpBsK,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAc9b,mBAAoB8b,EAAa9b,wBAGjF,mBAAC4N,GAAAA,YAAWA,CAAC7E,MAAM,2BAA2B8E,WAAY,IACxD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAa/xB,sBACpBugB,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAc/xB,uBAAwB+xB,EAAa/xB,4BAGrF,mBAAC6jB,GAAAA,YAAWA,CAAC7E,MAAM,yBAAyB8E,WAAY,IACtD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAa3G,qBACpB7K,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAc3G,sBAAuB2G,EAAa3G,4BAwF1F,OACE,sCACE,mBAAC9Q,GAAAA,eAAcA,KACb,mBAACC,MAAAA,CAAIC,UAAWuC,EAAO4C,UAAWxB,QAAS,IAAM6T,GAAWxR,IA3J9D,sCACE,mBAACkP,GAAAA,gBAAeA,MACZlP,GAAU,mBAACpB,GAAAA,KAAIA,CAACv6B,KAAK,gBACtB27B,GAAU,mBAACpB,GAAAA,KAAIA,CAACv6B,KAAK,eACtB,mBAACk6B,OAAAA,CAAKvE,UAAWuC,EAAOiC,OAAO,WAC/B,mBAACzE,MAAAA,CAAIC,UAAWuC,EAAOjoC,SAMT,MACpB,MAAMs9C,EAA0B,GAChC,IAAK,MAAMn/C,KAAO8+C,EAChB,GAAIA,EAAajmC,eAAe7Y,GAAM,CACpC,MAAMI,EAAQ0+C,EAAa9+C,IACb,IAAVI,GAA4B,KAAVA,GAAlBA,MAAkCA,GACpC++C,EAAS1xC,KAAK,mBAACq+B,OAAAA,CAAKvE,UAAWuC,EAAOsV,gBAAiBp/C,IAAKA,GAAM,GAAGA,OAASI,KAElF,CAEF,OAAO++C,CAAQ,EAhBwBE,QA0JrC,mBAAChY,GAAAA,eAAcA,KAAEkG,GArIjB,mBAACjG,MAAAA,CAAIC,UAAWuC,EAAOwV,iBACpB5iC,IAAc7V,GAAkBq4C,IAChCxiC,IAAc7V,GAAiBq4C,IAC/BxiC,IAAc7V,GAAoBq4C,IAClCxiC,IAAc7V,GA2CjB,sCACE,mBAAC+pC,GAAAA,YAAWA,CAAC7E,MAAM,sBAAsB8E,WAAY,IACnD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAa9b,kBACpBsK,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAc9b,mBAAoB8b,EAAa9b,yBA9ChFtmB,IAAc7V,GAuDjB,sCACE,mBAAC+pC,GAAAA,YAAWA,CAAC7E,MAAM,eAAe8E,WAAY,IAC5C,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAO0+C,EAAa3vB,aACpBttB,QAAS68C,GACTpR,SAAU2R,EAAa,mBAG3B,mBAACrO,GAAAA,YAAWA,CAAC7E,MAAM,UAAU8E,WAAY,IACvC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAO0+C,EAAan8B,aACpB9gB,QAAS88C,GACTrR,SAAU2R,EAAa,mBAG3B,mBAACrO,GAAAA,YAAWA,CAAC7E,MAAM,iBAAiB8E,WAAY,IAC9C,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAaxJ,aACpBhI,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAcxJ,cAAewJ,EAAaxJ,mBAG5E,mBAAC1E,GAAAA,YAAWA,CAAC7E,MAAM,uBAAuB8E,WAAY,IACpD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAaxtB,mBACpBgc,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAcxtB,oBAAqBwtB,EAAaxtB,yBAGlF,mBAACsf,GAAAA,YAAWA,CAAC7E,MAAM,aAAa8E,WAAY,IAC1C,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAazuB,UACpBid,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAczuB,WAAYyuB,EAAazuB,gBAGzE,mBAACugB,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAACpC,GAAAA,MAAKA,CAACpB,MAAO,GAAI9xB,KAAK,SAASu1B,aAAcgO,EAAa7kB,MAAO4U,OAAQmQ,MA5F3EtiC,IAAc7V,GAoGjB,sCACE,mBAAC+pC,GAAAA,YAAWA,CAAC7E,MAAM,eAAe8E,WAAY,IAC5C,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAO0+C,EAAa3vB,aACpBttB,QAAS68C,GACTpR,SAAU2R,EAAa,mBAG3B,mBAACrO,GAAAA,YAAWA,CAAC7E,MAAM,iBAAiB8E,WAAY,IAC9C,mBAACK,GAAAA,aAAYA,CACX9wC,MAAO0+C,EAAaxJ,aACpBhI,SAAU,IAAMA,EAAS,SAAKwR,GAAAA,CAAcxJ,cAAewJ,EAAaxJ,sBAcnDiK,EAK3BrV,GAAazC,IAA0B,CAC3CiF,WAAW5E,EAAAA,GAAAA,KAAI,CACb6U,gBAAiBlV,EAAMQ,OAAO8E,WAAW6P,UACzC9P,aAAcrF,EAAMoF,MAAMC,eAC1B+P,YAAapV,EAAMgF,QAAQ,IAC3B+S,aAAc/X,EAAMgF,QAAQ,IAC5BiP,QAAS,KAAKjU,EAAMgF,QAAQ,KAC5B4O,OAAQ,GAAG5T,EAAM14B,GAAG09B,QAAQqQ,oBAC5BzP,MAAO,SAETtB,OAAOjE,EAAAA,GAAAA,KAAI,CACT2X,MAAOhY,EAAMQ,OAAOyX,KAAKlmC,KACzBwgC,WAAYvS,EAAMwF,WAAWgN,iBAC7BG,OAAQ,YAEVv4C,SAASimC,EAAAA,GAAAA,KAAI,CACX2X,MAAOhY,EAAMQ,OAAOzuB,KAAK6xB,SACzB6O,SAAUzS,EAAMwF,WAAWkN,UAAUD,WAEvCkF,gBAAiBtX,GAAAA,GAAG;oBACFL,EAAMgF,QAAQ;IAEhC6S,gBAAiBxX,GAAAA,GAAG;;;mBAGHL,EAAMgF,QAAQ;MC1PjC,2B,0lCAkBO,MAAMkT,GAAyB,EAAGljC,QAAOyT,aAAYod,e,IAkFP7wB,EACDA,EACDA,EACAA,EApFjD,MAAMkzB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV2sC,EAAiB,W,MAAA,cAAOnzB,EAAeC,GAC3C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CwkB,QAAazR,EAAW0f,OAAOU,WAAWtO,EAAargB,GAC7D,IAAI9f,EAA0C8/B,aAAAA,EAAAA,EAAMx+B,KAAK8Z,IAAS,CAChE7c,MAAO6c,EAAIrL,KACXm6B,MAAO9uB,EAAIrL,SAIb,OAFA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX8Bqb,EAAeC,G,gCAAtB,KAadkpB,QAASkK,EAAanwC,MAAOowC,GAAcC,GAAavK,GAAW,gBAE1E,aADsBmK,EAAe5zB,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bw1C,EAAkB,W,MAAA,cAAOh8B,EAAeC,EAAcF,EAAayC,GACvE,MAAMsiB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CglB,EAAYjS,EAAW+f,oBAAoBhzB,GAC3Ck8B,EAAYjpB,EAAW+f,oBAAoBvwB,GAC3C7d,EAAU,CACd40B,SAAU,OACVuM,kBAAmBvmB,EAAM5a,QAAQmhC,mBAE7BvoB,QAAcyV,EAAW0f,OAAO9M,YAAYd,EAAargB,EAAYwgB,EAAWgX,EAAWt3C,GACjG,IAAIu3C,EAA8C3+B,aAAAA,EAAAA,EAAOtX,KAAKa,IAAU,CACtE5D,MAAO4D,EAAK4N,KACZm6B,MAAO/nC,EAAK4N,SAId,OAFAwnC,EAAcnvC,IAAAA,OAASmvC,GAAc5gC,GAAMA,EAAEpY,QAC7Cg5C,EAAYn1C,WAAWmrC,MAChBgK,CACT,I,gBAjB+Bl8B,EAAeC,EAAcF,EAAayC,G,gCAAjD,KAmBf2mB,QAASgT,EAAcj5C,MAAOg5C,GAAeE,GAAcpT,GAAW,gBAO7E,aANsBgT,EACpBz8B,EAAMS,MAAMxZ,OACZ+Y,EAAMU,KAAKzZ,OACX+Y,EAAMW,YAAY1Z,OAClB+Y,EAAMiD,QAAQhc,OAGlB,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAAQ+Y,EAAMW,YAAY1Z,OAAQ+Y,EAAMiD,QAAQhc,SAG7Es+B,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,QACxDy+B,EAAYjS,EAAW+f,oBAAqC,QAAjBxzB,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,QAC9Dy1C,EAAYjpB,EAAW+f,oBAAiC,QAAbxzB,EAAAA,EAAMiD,eAANjD,IAAAA,OAAAA,EAAAA,EAAe/Y,SAEhEkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR6J,GAAW,GACV,CAACzO,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACR0S,GAAY,GACX,CAACtX,EAAargB,EAAYwgB,EAAWgX,IAExC,MAOMzI,EAAkB93B,GACdxY,IACQ,OAAVA,GACFktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,KACzC,EAIJ,OACE,sCACE,mBAAC+mC,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMS,MAAMxZ,OACnB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMU,KAAKzZ,OAClB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,YAI/B,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMW,YAAY1Z,OACzB7B,QAAS2uC,EACTpD,UAAWmD,EACXjD,SAAUoD,EAAe,kBAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMzY,KAAKN,OAClB7B,QAASu3C,EACThM,UAAWiM,EACX/L,SAAUoD,EAAe,YAI/B,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAACpC,GAAAA,MAAKA,CAACpB,MAAO,GAAIyD,aAAcr0B,EAAMqM,WAAY+lB,OA3D9BrrC,I,IACTA,EAAjB,MAAM4qC,EAAW5qC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,MAClB,OAAbguC,GACFd,EAAS,SAAK7wB,GAAAA,CAAOqM,WAAYslB,IACnC,KAyDI,mBAACwC,GAAAA,YAAWA,CAAC7E,MAAM,qBAAqB8E,WAAY,IAClD,mBAACK,GAAAA,aAAYA,CACX9wC,MAAOqc,EAAMsM,iBACbukB,SAAU,IAAMA,EAAS,SAAK7wB,GAAAA,CAAOsM,kBAAmBtM,EAAMsM,wB,ECzL1E,2B,0lCAYA,MAAM62B,GAAsD,CAC1D,CAAE7T,MAAO,WAAY3rC,MAAO,YAC5B,CAAE2rC,MAAO,kBAAmB3rC,MAAO,UACnC,CAAE2rC,MAAO,UAAW3rC,MAAO,YAGvBmvC,GAAkD,CACtD,CAAEnvC,MAAO,EAAG2rC,MAAO,kBACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,eACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,QACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,aASR8T,GAAsB,EAAGpjC,QAAOyT,aAAYod,e,IAoEJ7wB,EACDA,EAuDjCA,EASAA,EASAA,EAWAA,EASOA,EAQAA,EAqBPA,EA9LjB,MAAMkzB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV2sC,EAAiB,W,MAAA,cAAOnzB,EAAeC,GAC3C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CwkB,QAAazR,EAAW0f,OAAOU,WAAWtO,EAAargB,GAC7D,IAAI9f,EAA0C8/B,aAAAA,EAAAA,EAAMx+B,KAAK8Z,IAAS,CAChE7c,MAAO6c,EAAIrL,KACXm6B,MAAO9uB,EAAIrL,SAIb,OAFA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX8Bqb,EAAeC,G,gCAAtB,KAadkpB,QAASkK,EAAanwC,MAAOowC,GAAcC,GAAavK,GAAW,gBAE1E,aADsBmK,EAAe5zB,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bo8C,EAAmB,W,MAAA,gBACvB,MAAM3vB,QAAgBD,EAAW0f,OAAOpT,aAClC36B,EAAUsuB,aAAAA,EAAAA,EAAShtB,KAAKmtB,IAAW,CACvClwB,MAAOkwB,EAAMnT,KACb4uB,MAAOzb,EAAMnT,SAGf,OADAtb,EAAQoC,WAAWmrC,MACZvtC,CACT,I,kDARyB,KAUhBwkC,QAAS0Z,EAAgB3/C,MAAO4/C,GAAkBC,GAAgB/Z,GAAW,gBAEpF,aADsB4Z,GAExB,IAAG,IAGG9d,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,SAE9DkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR6J,GAAW,GACV,CAACzO,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACRqZ,GAAc,GACb,IAEH,MAAMC,EAAsBtnC,GAClBpV,I,IACWA,EAAjB,MAAM4qC,EAAW5qC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,MAClB,OAAbguC,GACFd,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQ0qC,KACzC,EAIEsC,EAAkB93B,GACdxY,IACQ,OAAVA,GACFktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,KACzC,EAkBJ,OACE,sCACE,mBAAC+mC,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAkB,QAAXqc,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,OACpB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAiB,QAAVqc,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,OACnB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,WAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAkB,QAAXqc,EAAAA,EAAM6T,aAAN7T,IAAAA,OAAAA,EAAAA,EAAa/Y,OACpB7B,QAASm+C,EACT5S,UAAW2S,EACXzS,SAAUoD,EAAe,aAI/B,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAwB,QAAjBqc,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,OAC1B7B,QAAS2uC,EACTpD,UAAWmD,EACXjD,SAAUoD,EAAe,kBAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,UAAU8E,WAAY,IACvC,mBAACpC,GAAAA,MAAKA,CACJpB,MAAO,GACPyD,aAA2B,QAAbr0B,EAAAA,EAAMoH,eAANpH,IAAAA,OAAAA,EAAAA,EAAe/Y,OAC7BqtC,YAAY,eACZlC,OAAQqR,EAAmB,cAG/B,mBAACtP,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAACpC,GAAAA,MAAKA,CACJpB,MAAO,GACPyD,aAAwB,QAAVr0B,EAAAA,EAAM6C,YAAN7C,IAAAA,OAAAA,EAAAA,EAAY/Y,OAC1BqtC,YAAY,2BACZlC,OAAQqR,EAAmB,YAIjC,mBAAC/Y,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAOqc,EAAMg5B,aACb5zC,QAAS+9C,GACTtS,UAAuB,eA9EvBtC,IACe,OAAjBA,EAAO5qC,OACTktC,EAAS,SAAK7wB,GAAAA,CAAO,aAAQuuB,EAAO5qC,QACtC,MA8EE,mBAACwwC,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAACsP,GAAAA,YAAWA,CACVlP,cAAc,EACdmP,aAAa,EACbrP,YAAY,oBACZ3wC,MAAoB,QAAbqc,EAAAA,EAAM5a,eAAN4a,IAAAA,OAAAA,EAAAA,EAAe+G,WACtB3hB,QAAS0tC,GACTjC,SAjFkBzrC,IACV,OAAZA,GACFyrC,EAAS,SAAK7wB,GAAAA,CAAO5a,QAAS,SAAK4a,EAAM5a,SAAO,CAAE2hB,WAAY3hB,EAAQsB,KAAKqV,GAAMA,EAAEpY,YACrF,M,ECpJJ,mB,sGAUO,MAAMigD,GAAoB,EAAG5jC,QAAO6wB,cASvC,mBAACnG,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAACpC,GAAAA,MAAKA,CAACpB,MAAO,GAAIyD,aAAcr0B,EAAM2a,QAASyX,OAV5BrrC,I,IACNA,EAAjB,MAAM4qC,EAAW5qC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,M,QAClB,OAAbguC,GACFd,G,yUAAS,IAAK7wB,G,WAAAA,CAAO2a,QAASgX,I,iVAChC,MCfJ,2B,0lCAYA,MAAMkS,GAAkD,CACtD,CAAEvU,MAAO,SAAU3rC,MAAO,UAC1B,CAAE2rC,MAAO,MAAO3rC,MAAO,OACvB,CAAE2rC,MAAO,SAAU3rC,MAAO,UAC1B,CAAE2rC,MAAO,WAAY3rC,MAAO,YAC5B,CAAE2rC,MAAO,eAAgB3rC,MAAO,iBAG5BmgD,GAA+C,CACnD,CAAExU,MAAO,cAAe3rC,MAAO,QAC/B,CAAE2rC,MAAO,OAAQ3rC,MAAO,QACxB,CAAE2rC,MAAO,SAAU3rC,MAAO,MAC1B,CAAE2rC,MAAO,WAAY3rC,MAAO,OAC5B,CAAE2rC,MAAO,WAAY3rC,MAAO,MAC5B,CAAE2rC,MAAO,SAAU3rC,MAAO,MAC1B,CAAE2rC,MAAO,UAAW3rC,MAAO,OAShBogD,GAAsB,EAAG/jC,QAAOyT,aAAYod,eACvD,MAAMmT,G,EAAuB,gBAC3B,MAAMC,QAAiBxwB,EAAW0f,OAAOrX,eACnC12B,EAAU6+C,aAAAA,EAAAA,EAAUv9C,KAAKyK,IAAO,CACpCxN,MAAOwN,EAAEgE,KACTm6B,MAAOn+B,EAAEgE,SAGX,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CAR6B,I,EAU7B,OAASwkC,QAASsa,EAAmBvgD,MAAOwgD,GAAqBC,GAAmB3a,GAAW,gBAE7F,aADsBua,GAExB,IAAG,IAEGK,EAAiB,W,MAAA,gBACrB,MAAMC,QAAmB7wB,EAAW0f,OAAOlX,aACrC72B,EAAUk/C,aAAAA,EAAAA,EAAY59C,KAAKyK,IAAO,CACtCxN,MAAOwN,EAAEgE,KACTm6B,MAAOn+B,EAAEgE,SAGX,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,kDARuB,KAUdwkC,QAAS2a,EAAY5gD,MAAO2gD,GAAcE,GAAmB/a,GAAW,gBAE/E,aADsB4a,GAExB,IAAG,KAEHla,EAAAA,GAAAA,YAAU,KACRia,IACAI,GAAiB,GAChB,IAEH,MAAMhC,EAAgBrmC,GACZoyB,IACFA,EAAO5qC,OACTktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAOoyB,EAAO5qC,QACtC,EAIE8gD,EAAsBtoC,GAClBxY,SACQqB,IAAVrB,GACFktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAOxY,IAC/B,EAIJ,OACE,sCACE,mBAAC+mC,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,UAAU8E,WAAY,IACvC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAM+mB,gBACb3hC,QAAS++C,EACTxT,UAAWuT,EACXrT,SAAU4T,EAAmB,sBAGjC,mBAACtQ,GAAAA,YAAWA,CAAC7E,MAAM,MAAM8E,WAAY,IACnC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMinB,UACb7hC,QAASk/C,EACT3T,UAAW4T,EACX1T,SAAU4T,EAAmB,iBAInC,mBAAC/Z,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAOqc,EAAMqG,YACbjhB,QAASy+C,GACThT,SAAU2R,EAAa,kBAG3B,mBAACrO,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAOqc,EAAMgG,YACb5gB,QAAS0+C,GACTjT,SAAU2R,EAAa,mB,EC9HnC,2B,0lCAaA,MAAMkC,GAAiD,CACrD,CAAE/gD,MAAO,GAAI2rC,MAAO,iBAKhBwD,GAAkD,CACtD,CAAEnvC,MAAO,EAAG2rC,MAAO,kBACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,eACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,WACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,QACnB,CAAE3rC,MAAO,EAAG2rC,MAAO,aASRqV,GAAsB,EAAG3kC,QAAOyT,aAAYod,e,IA2HJ7wB,EACDA,EACDA,EACAA,EA0EhCA,EASAA,EAUEA,EAaAA,EAuBSA,EAQAA,EAwBXA,EAOAA,EArSjB,MAAMkzB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV2sC,EAAiB,W,MAAA,cAAOnzB,EAAeC,GAC3C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CwkB,QAAazR,EAAW0f,OAAOU,WAAWtO,EAAargB,GAC7D,IAAI9f,EAA0C8/B,aAAAA,EAAAA,EAAMx+B,KAAK8Z,IAAS,CAChE7c,MAAO6c,EAAIrL,KACXm6B,MAAO9uB,EAAIrL,SAIb,OAFA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX8Bqb,EAAeC,G,gCAAtB,KAadkpB,QAASkK,EAAanwC,MAAOowC,GAAcC,GAAavK,GAAW,gBAE1E,aADsBmK,EAAe5zB,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bm1C,EAAiB,W,MAAA,cAAO37B,EAAeC,GAE3C,WAD4B+S,EAAW0f,OAAOja,sBAE5C,MAAO,GAGT,MAAMqM,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5C1C,QAAcyV,EAAW0f,OAAO9M,YAAYd,EAAargB,EAAY,KAAM,KAAM,CAAC,GAClFrC,EAAqBrV,IAAAA,QAAUwQ,EAAMtX,KAAKa,GAAkBA,EAAKsb,MAAQ,MAEzEw5B,EAAU7uC,IAAAA,OAASqV,GAAOja,GAAMA,EAAEka,IAAMla,EAAEjF,OAAS,KAAI+C,KAAKkC,GAAMua,EAAgBva,KACxF,IAAIxD,EAA0Ci3C,aAAAA,EAAAA,EAAS31C,KAAKoc,IAAS,CACnEnf,MAAOmf,EACPwsB,MAAOxsB,MAIT,OAFA1d,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAnB8Bqb,EAAeC,G,gCAAtB,KAqBdkpB,QAAS0S,EAAa34C,MAAO44C,GAAcqI,GAAiBnb,GAAW,gBAE9E,aADsB2S,EAAep8B,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEtE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAE7Bo8C,EAAmB,W,MAAA,gBACvB,MAAM3vB,QAAgBD,EAAW0f,OAAOpT,aAClC36B,EAAUsuB,aAAAA,EAAAA,EAAShtB,KAAKmtB,IAAW,CACvClwB,MAAOkwB,EAAMnT,KACb4uB,MAAOzb,EAAMnT,SAGf,OADAtb,EAAQoC,WAAWmrC,MACZvtC,CACT,I,kDARyB,KAUhBwkC,QAAS0Z,EAAgB3/C,MAAO4/C,GAAkBC,GAAgB/Z,GAAW,gBAEpF,aADsB4Z,GAExB,IAAG,IAEG5G,EAAkB,W,MAAA,cAAOh8B,EAAeC,EAAcF,EAAayC,GACvE,MAAMsiB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CglB,EAAYjS,EAAW+f,oBAAoBhzB,GAC3Ck8B,EAAYjpB,EAAW+f,oBAAoBvwB,GAC3C7d,EAAU,CACd40B,SAAU,MACVuM,kBAAmBvmB,EAAM5a,QAAQmhC,mBAE7BvoB,QAAcyV,EAAW0f,OAAO9M,YAAYd,EAAargB,EAAYwgB,EAAWgX,EAAWt3C,GACjG,IAAIu3C,EAA8C3+B,aAAAA,EAAAA,EAAOtX,KAAKa,IAAU,CACtE5D,MAAO4D,EAAK4N,KACZm6B,MAAO/nC,EAAK4N,SAId,OAFAwnC,EAAcnvC,IAAAA,OAASmvC,GAAc5gC,GAAMA,EAAEpY,QAC7Cg5C,EAAYn1C,WAAWmrC,MAChBgK,CACT,I,gBAjB+Bl8B,EAAeC,EAAcF,EAAayC,G,gCAAjD,KAmBf2mB,QAASgT,EAAcj5C,MAAOg5C,GAAeE,GAAcpT,GAAW,gBAO7E,aANsBgT,EACpBz8B,EAAMS,MAAMxZ,OACZ+Y,EAAMU,KAAKzZ,OACX+Y,EAAMW,YAAY1Z,OAClB+Y,EAAMiD,QAAQhc,OAGlB,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAAQ+Y,EAAMW,YAAY1Z,OAAQ+Y,EAAMiD,QAAQhc,SAG7Es+B,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,QACxDy+B,EAAYjS,EAAW+f,oBAAqC,QAAjBxzB,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,QAC9Dy1C,EAAYjpB,EAAW+f,oBAAiC,QAAbxzB,EAAAA,EAAMiD,eAANjD,IAAAA,OAAAA,EAAAA,EAAe/Y,SAEhEkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR6J,GAAW,GACV,CAACzO,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACRya,GAAe,GACd,CAACrf,EAAargB,KAEjBilB,EAAAA,GAAAA,YAAU,KACRqZ,GAAc,GACb,KAEHrZ,EAAAA,GAAAA,YAAU,KACR0S,GAAY,GACX,CAACtX,EAAargB,EAAYwgB,EAAWgX,IAExC,MAAM+G,EAAsBtnC,GAClBpV,I,IACWA,EAAjB,MAAM4qC,EAAW5qC,SAAgB,QAAhBA,EAAAA,EAAGmrC,qBAAHnrC,IAAAA,OAAAA,EAAAA,EAAkBpD,MAClB,OAAbguC,GACFd,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQ0qC,KACzC,EAIEsC,EAAkB93B,GACdxY,IACQ,OAAVA,GACFktC,EAAS,SAAK7wB,GAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,KACzC,EAgBE+gC,EAAuBjR,EAAW0f,OAAOzO,uBAE/C,OACE,sCACE,mBAACgG,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAOqc,EAAM6G,gBACbzhB,QAASs/C,GACT7T,SAjBetC,IACF,OAAjBA,EAAO5qC,OACTktC,EAAS,SAAK7wB,GAAAA,CAAO6G,gBAAiB0nB,EAAO5qC,QAC/C,MAkBE,mBAAC+mC,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAkB,QAAXqc,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,OACpB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAiB,QAAVqc,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,OACnB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,WAGF,aAA1Bj0B,EAAM6G,iBACL,mBAACstB,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAkB,QAAXqc,EAAAA,EAAM6T,aAAN7T,IAAAA,OAAAA,EAAAA,EAAa/Y,OACpB7B,QAASm+C,EACT5S,UAAW2S,EACXzS,SAAUoD,EAAe,aAKjC,mBAACvJ,GAAcA,MACXhG,GAAkD,UAA1B1kB,EAAM6G,kBAC9B,mBAACstB,GAAAA,YAAWA,CAAC7E,MAAM,cAAc8E,WAAY,IAC3C,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAwB,QAAjBqc,EAAAA,EAAMW,mBAANX,IAAAA,OAAAA,EAAAA,EAAmB/Y,OAC1B7B,QAAS2uC,EACTpD,UAAWmD,EACXjD,SAAUoD,EAAe,mBAI7BvP,GAAkD,UAA1B1kB,EAAM6G,iBAC9B,mBAACstB,GAAAA,YAAWA,CAAC7E,MAAM,WAAW8E,WAAY,IACxC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMiD,QAAQhc,OACrB7B,QAASm3C,EACT5L,UAAW2L,EACXzL,SAAUoD,EAAe,cAIJ,aAA1Bj0B,EAAM6G,iBACL,sCACE,mBAACstB,GAAAA,YAAWA,CAAC7E,MAAM,UAAU8E,WAAY,IACvC,mBAACpC,GAAAA,MAAKA,CACJpB,MAAO,GACPyD,aAA2B,QAAbr0B,EAAAA,EAAMoH,eAANpH,IAAAA,OAAAA,EAAAA,EAAe/Y,OAC7BqtC,YAAY,eACZlC,OAAQqR,EAAmB,cAG/B,mBAACtP,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAACpC,GAAAA,MAAKA,CACJpB,MAAO,GACPyD,aAAwB,QAAVr0B,EAAAA,EAAM6C,YAAN7C,IAAAA,OAAAA,EAAAA,EAAY/Y,OAC1BqtC,YAAY,2BACZlC,OAAQqR,EAAmB,YAKR,UAA1BzjC,EAAM6G,iBACL,mBAACstB,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMzY,KAAKN,OAClB7B,QAASu3C,EACThM,UAAWiM,EACX/L,SAAUoD,EAAe,YAKjC,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,eAAe8E,WAAY,IAC5C,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAoB,QAAbqc,EAAAA,EAAM5a,eAAN4a,IAAAA,OAAAA,EAAAA,EAAeyG,YACtBrhB,QAAS0tC,GACTjC,SAxHmBtC,IACN,OAAjBA,EAAO5qC,OACTktC,EAAS,SAAK7wB,GAAAA,CAAO5a,QAAS,SAAK4a,EAAM5a,SAAO,CAAEqhB,YAAa8nB,EAAO5qC,UACxE,KAwHI,mBAACwwC,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAACK,GAAAA,aAAYA,CACX9wC,MAAoB,QAAbqc,EAAAA,EAAM5a,eAAN4a,IAAAA,OAAAA,EAAAA,EAAe0G,MACtBmqB,SAAU,K,IAAgE7wB,EAA1D6wB,OAAAA,EAAS,SAAK7wB,GAAAA,CAAO5a,QAAS,SAAK4a,EAAM5a,SAAO,CAAEshB,QAAqB,QAAb1G,EAAAA,EAAM5a,eAAN4a,IAAAA,OAAAA,EAAAA,EAAe0G,W,QCzUrG,2B,8ZAkBO,MAAMm+B,GAAwB,EAAG7kC,QAAOyT,aAAYod,e,IAsDN7wB,EACDA,EAtDlD,MAAMkzB,G,EAAmB,gBACvB,MAAM7kB,QAAeoF,EAAW0f,OAAO9O,eACjCj/B,EAAUipB,aAAAA,EAAAA,EAAQ3nB,KAAK+Z,IAAW,CACtC9c,MAAO8c,EAAMtL,KACbm6B,MAAO7uB,EAAMtL,SAGf,OADA/P,EAAQoC,WAAWmrC,MACZvtC,CACT,I,4CARyB,I,EAUzB,OAASwkC,QAASwJ,EAAezvC,MAAO0vC,GAAiBC,GAAe7J,GAAW,gBAEjF,aADsByJ,GAExB,IAAG,IAEGK,EAAkB,W,MAAA,cAAO9yB,GAC7B,MAAM8kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7Cf,QAAc+T,EAAW0f,OAAO1N,YAAYF,GAClD,IAAIngC,EAA0Csa,aAAAA,EAAAA,EAAOhZ,KAAKga,IAAU,CAClE/c,MAAO+c,EAAKvL,KACZm6B,MAAO5uB,EAAKvL,SAKd,OAHA/P,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAX+Bqb,G,gCAAP,KAafmpB,QAAS6J,EAAc9vC,MAAO+vC,GAAeC,GAAclK,GAAW,gBAE7E,aADsB8J,EAAgBvzB,EAAMS,MAAMxZ,OAEpD,IAAG,CAAC+Y,EAAMS,MAAMxZ,SAEV69C,EAAoB,W,MAAA,cAAOrkC,EAAeC,GAC9C,MAAM6kB,EAAc9R,EAAW+f,oBAAoB/yB,GAC7CyE,EAAauO,EAAW+f,oBAAoB9yB,GAC5CzB,QAAewU,EAAW0f,OAAOrN,aAAaP,EAAargB,GACjE,IAAI9f,EAA0C6Z,aAAAA,EAAAA,EAAQvY,KAAKqC,IAAO,CAChEpF,MAAOoF,EAAEuW,MACTgwB,MAAOvmC,EAAEuW,UAKX,OAHAla,EAAUoI,IAAAA,OAASpI,GAAU2W,GAAMA,EAAEpY,QACrCyB,EAAQoC,QAAQ,CAAE7D,MAAO,SACzByB,EAAQoC,WAAWmrC,MACZvtC,CACT,I,gBAZiCqb,EAAeC,G,gCAAtB,KAcjBkpB,QAASmb,EAAephD,MAAOqhD,GAAiBC,GAAexb,GAAW,gBAEjF,aADsBqb,EAAkB9kC,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,OAEzE,IAAG,CAAC+Y,EAAMS,MAAMxZ,OAAQ+Y,EAAMU,KAAKzZ,SAG7Bs+B,EAAc9R,EAAW+f,oBAA+B,QAAXxzB,EAAAA,EAAMS,aAANT,IAAAA,OAAAA,EAAAA,EAAa/Y,QAC1Die,EAAauO,EAAW+f,oBAA8B,QAAVxzB,EAAAA,EAAMU,YAANV,IAAAA,OAAAA,EAAAA,EAAY/Y,SAE9DkjC,EAAAA,GAAAA,YAAU,KACRmJ,GAAa,GACZ,KAEHnJ,EAAAA,GAAAA,YAAU,KACRwJ,GAAY,GACX,CAACpO,KAEJ4E,EAAAA,GAAAA,YAAU,KACR8a,GAAa,GACZ,CAAC1f,EAAargB,IAEjB,MAAM+uB,EAAkB93B,GACdxY,I,QACQ,OAAVA,GACFktC,G,yUAAS,IAAK7wB,G,WAAAA,CAAO,CAAC7D,GAAO,CAAElV,OAAQtD,K,iVACzC,EAIJ,OACE,sCACE,mBAAC+mC,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,QAAQ8E,WAAY,IACrC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMS,MAAMxZ,OACnB7B,QAASiuC,EACT1C,UAAWyC,EACXvC,SAAUoD,EAAe,YAG7B,mBAACE,GAAAA,YAAWA,CAAC7E,MAAM,OAAO8E,WAAY,IACpC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMU,KAAKzZ,OAClB7B,QAASsuC,EACT/C,UAAW8C,EACX5C,SAAUoD,EAAe,YAI/B,mBAACvJ,GAAcA,KACb,mBAACyJ,GAAAA,YAAWA,CAAC7E,MAAM,SAAS8E,WAAY,IACtC,mBAAC1D,GAAYA,CACXE,MAAO,GACPjtC,MAAOqc,EAAMV,MAAMrY,OACnB7B,QAAS4/C,EACTrU,UAAWoU,EACXlU,SAAUoD,EAAe,a,EC5HrC,mB,kyBAiBA,MAAMiR,GAAyD,CAC7D,CACEvhD,MAAOyG,EACPklC,MAAO,UACPxc,YAAa,yBAEf,CACEnvB,MAAOyG,EACPklC,MAAO,OACPxc,YAAa,mBAEf,CACEnvB,MAAOyG,EACPklC,MAAO,WACPxc,YAAa,sBAEf,CACEnvB,MAAOyG,EACPklC,MAAO,UACPxc,YAAa,6BAEf,CACEnvB,MAAOyG,EACPklC,MAAO,WACPxc,YAAa,kBAEf,CACEnvB,MAAOyG,EACPklC,MAAO,WACPxc,YAAa,kBAEf,CACEnvB,MAAOyG,EACPklC,MAAO,cACPxc,YAAa,gBCnDjB,c,yMAOc,GAAd,MAAMkf,IAAsC,QAA9B,0CAAgCA,QAAS,SAEjDmT,GAAkB9vC,OAAO,I3CYF,+E2CZoBsoB,UAE3C8P,GAAazC,IAA0B,CAC3Coa,WAAY/Z,GAAAA,GAAG;aACJL,EAAMQ,OAAOiH,QAAQC;IAEhCnB,cAAelG,GAAAA,GAAG;aACPL,EAAMQ,OAAOpS,OAAOisB;MAI3BC,GAAgD,CACpD,CAACC,GAAAA,qBAAAA,QAA8B,CAC7B,CACEC,KAAO7hD,IACAA,KAGDA,EAAMY,OAAS,GAAkB,MAAbZ,EAAM,IACI,MAA5BA,EAAMA,EAAMY,OAAS,IAM7BkhD,aAAc,qBAEhB,CACED,KAAO7hD,GACS,MAAVA,EAKN8hD,aAAc,+CAKPC,GAAwB,I,IAAA,MAAE/hD,EAAK,IAAEkrC,EAAG,iBAAE8W,GAAgC,EAAXC,E,kXAAAA,CAAAA,EAAAA,CAAjCjiD,QAAOkrC,MAAK8W,qBACjD,MAAMtY,GAASG,EAAAA,GAAAA,YAAWC,IAE1B,IAAI4D,EAAahE,EAAO+X,WAOxB,OANID,GAAgBh8C,KAAKxF,GACvB0tC,EAAahE,EAAOkE,cACX1wB,EAAQld,KACjB0tC,EAAahE,EAAO+X,YAGf,mBAACpT,GAAAA,GAAAA,CAAMlH,UAAWuG,EAAY1tC,MAAOA,EAAOgiD,iBAAkBL,IAAiCM,GAAAA,EC1DxG,mB,kyBAOO,MAAMC,WAAkCC,GAAAA,cA6C7CC,qBAAqB9lC,GACnB,OAAOrb,KAAKohD,WAAWz7B,MAAM07B,GAAMA,EAAEtiD,QAAUsc,GACjD,CAmCA6I,S,IAG2B2K,EAFzB,MAAM,kBAAEyyB,EAAiB,YAAEC,EAAW,MAAE1lC,EAAK,KAAEC,EAAI,YAAEC,EAAW,QAAEsC,EAAO,KAAE1b,GAAS3C,KAAKymB,OACnF,WAAEoI,GAAe7uB,KAAKmnC,MACtBqa,GAAmB3yB,SAAkB,QAAlBA,EAAAA,EAAY0f,cAAZ1f,IAAAA,OAAAA,EAAAA,EAAoBmR,4BAA4B,EAEzE,OACE,sCACE,mBAACiG,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,cAC5B,mBAAC2D,GAAAA,OAAMA,CACL3D,MAAO,GACPjtC,MAAOuiD,EACP9gD,QAASR,KAAKohD,WACdnV,SAAUjsC,KAAKyhD,yBAGnB,mBAACxb,MAAAA,CAAIC,UAAU,kBACb,mBAACD,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,SAC5B,mBAAC8U,GAAWA,CACV/hD,MAAO8c,EACPowB,SAAWyV,GAAQ1hD,KAAK2hD,kBAAkBD,EAAK,SAC/ClU,OAAQxtC,KAAK4hD,qBAGhBN,EAAkBviD,QAAUsZ,EAAmBC,OAC9C,mBAAC2tB,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,QAC5B,mBAAC8U,GAAWA,CACV/hD,MAAO+c,EACPmwB,SAAWyV,GAAQ1hD,KAAK2hD,kBAAkBD,EAAK,QAC/ClU,OAAQxtC,KAAK4hD,uBAKnBN,EAAkBviD,QAAUsZ,EAAmBG,aAC/C8oC,EAAkBviD,QAAUsZ,EAAmBK,SAC/C4oC,EAAkBviD,QAAUsZ,EAAmBM,MAC/C2oC,EAAkBviD,QAAUsZ,EAAmBO,aAC/C,mBAACqtB,MAAAA,CAAIC,UAAU,kBACZsb,GACC,mBAACvb,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,YAC5B,mBAAC8U,GAAWA,CACV/hD,MAAOsf,EACP4tB,SAAWyV,GAAQ1hD,KAAK2hD,kBAAkBD,EAAK,WAC/ClU,OAAQxtC,KAAK4hD,sBAIjBJ,GACA,mBAACvb,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,eAC5B,mBAAC8U,GAAWA,CACV/hD,MAAOgd,EACPkwB,SAAWyV,GAAQ1hD,KAAK2hD,kBAAkBD,EAAK,eAC/ClU,OAAQxtC,KAAK4hD,sBAIjBN,EAAkBviD,QAAUsZ,EAAmBM,MAC/C2oC,EAAkBviD,QAAUsZ,EAAmBO,aAC/C,mBAACqtB,MAAAA,CAAIC,UAAU,wBACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,IAAI,QAC5B,mBAAC8U,GAAWA,CACV/hD,MAAO4D,EACPspC,SAAWyV,GAAQ1hD,KAAK2hD,kBAAkBD,EAAK,QAC/ClU,OAAQxtC,KAAK4hD,sBAOtBL,GACC,mBAACtb,MAAAA,CAAIC,UAAU,WACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,GAAI6V,QAAQ,oCAAmC,gBAGvE,mBAACzU,GAAAA,MAAKA,CAACruC,MAAOwiD,EAAaO,UAAU,KAK/C,CAnJA/hD,YAAYonC,GAGV,GAFA1J,MAAM0J,G,KApBRia,WAAyD,CACvD,CAAEriD,MAAOsZ,EAAmBC,MAAOoyB,MAAO,SAC1C,CAAE3rC,MAAOsZ,EAAmBE,KAAMmyB,MAAO,QACzC,CAAE3rC,MAAOsZ,EAAmBG,YAAakyB,MAAO,eAChD,CAAE3rC,MAAOsZ,EAAmBK,QAASgyB,MAAO,YAC5C,CAAE3rC,MAAOsZ,EAAmBM,KAAM+xB,MAAO,QACzC,CAAE3rC,MAAOsZ,EAAmBO,WAAY8xB,MAAO,gB,KAGjDqX,SAA8B,CAC5BT,kBAAmB,CAAEviD,MAAOsZ,EAAmBC,MAAOoyB,MAAO,SAC7DrvB,UAAWhD,EAAmBC,MAC9BuD,MAAO,OACPC,KAAM,GACNC,YAAa,GACbsC,QAAS,GACT1b,KAAM,I,KAgCRg/C,kBAAoB,CAACD,EAA0CnqC,KAC7D,MAAMxY,EAAQ2iD,EAAIpU,cAAcvuC,MAChCiB,KAAKioC,UAAUpC,IACb,MAAMwH,EAAW,MACZxH,GAIL,OAFAwH,EAAS91B,GAAQxY,EAEV,MACFsuC,EAAAA,GAEL,E,KAGJuU,kBAAoB,KAClB,MAAM,UAAEvmC,EAAS,MAAEQ,EAAK,KAAEC,EAAI,YAAEC,EAAW,QAAEsC,EAAO,KAAE1b,GAAS3C,KAAKymB,MAC9DwuB,EAAa,CAAE55B,YAAWQ,QAAOC,OAAMC,cAAasC,UAAS1b,QACnE3C,KAAKmnC,MAAM8E,SAASgJ,EAAY,YAAY55B,IAAY,E,KAG1DomC,sBAAyBO,IACvBhiD,KAAKioC,SAAS,SACTjoC,KAAKymB,OAAK,CACb66B,kBAAmBU,EACnB3mC,UAAW2mC,EAAajjD,SAG1B,MAAM,MAAE8c,EAAK,KAAEC,EAAI,YAAEC,EAAW,QAAEsC,EAAO,KAAE1b,GAAS3C,KAAKymB,MACnDpL,EAAY2mC,EAAajjD,MACzBk2C,EAAa,CAAE55B,YAAWQ,QAAOC,OAAMC,cAAasC,UAAS1b,QACnE3C,KAAKmnC,MAAM8E,SAASgJ,EAAY,YAAY55B,IAAY,EAxDpDrb,KAAKmnC,MAAM/rB,OAAqC,iBAArBpb,KAAKmnC,MAAM/rB,MAAoB,CAE5D,MAAMA,EAAQD,EAAyBnb,KAAKmnC,MAAM/rB,OAC5CkmC,EAAoBthD,KAAKmhD,qBAAqB/lC,EAAMC,WAC1Drb,KAAKymB,MAAQ,IACX66B,oBACAC,YAAavhD,KAAKmnC,MAAM/rB,OACrBA,EAEP,MAAO,GAAIpb,KAAKmnC,MAAM/rB,MAAO,CAC3B,MAAMA,EAAQpb,KAAKmnC,MAAM/rB,MACnBkmC,EAAoBthD,KAAKmhD,qBAAqB/lC,EAAMC,WAC1Drb,KAAKymB,MAAQ,SACRzmB,KAAK+hD,SACL3mC,GAAAA,CACHkmC,kBAAAA,GAEJ,MACEthD,KAAKymB,MAAQzmB,KAAK+hD,QAEtB,EClDF,mB,kyBAMA,MAAM,UAAEE,GAAS,OAAEC,IAAWC,GAAAA,YAExBC,GAAmB,CAAC,QAAS,WAAY,YA8OzCC,GACJ,CACE1jD,EACAI,EACAktC,IAEDvR,IACCuR,EAAS,SACJltC,GAAAA,CACHu3C,SAAU,SACLv3C,EAAMu3C,UAAQ,CACjB,CAAC33C,GAAM+7B,EAAM4S,cAAcvuC,U,EAK7BujD,GACJ,CACE3jD,EACAI,EACAktC,IAEDvR,IACCuR,EAAS,SACJltC,GAAAA,CACHu3C,SAAU,SACLv3C,EAAMu3C,UAAQ,CACjB,CAAC33C,GAAM,EAAOwhB,OAA4BoiC,Y,EAK5CC,GACJ,CACE7jD,EACAI,EACAktC,IAEDvR,IACCuR,EAAS,SACJltC,GAAAA,CACH0jD,eAAgB,SACX1jD,EAAM0jD,gBAAc,CACvB,CAAC9jD,GAAM+7B,EAAM4S,cAAcvuC,U,EAqB7B2jD,GACJ,CACEliD,EACAyrC,EACA0W,EACAC,IAED7jD,IACC,MAAM8jD,EAAaC,KAAyBn9B,MAAMo9B,GAAaA,EAASx6C,KAAOxJ,EAAMA,QACrF4jD,EAAc,CAAEjY,MAAOmY,EAAWtyC,KAAMxR,MAAO8jD,EAAWt6C,KAC1Dq6C,EAAkBC,EAAW3oC,MAC7B+xB,EAAS,SACJzrC,GAAAA,CACH81C,SAAU,SACL91C,EAAQ81C,UAAQ,CACnBjS,yBAA0BtlC,EAAMA,U,EAKlC+jD,GAAyB,KAC7B,IAAIE,GAAS,yBAA4BC,SAEzC,OADAD,EAASA,EAAO3gD,QAAQowB,GAAO2vB,GAAiBpf,SAASvQ,EAAGvY,QACrD8oC,CAAM,ECvUFE,GAAS,IAAIC,EAAAA,iBAAiBrT,IACxCsT,iBDI0Bjc,I,IAmFlB3mC,EAkBUA,EApGnB,MAAM,QAAEA,EAAO,gBAAE6iD,GAAoBlc,GAE9Bmc,EAAsBC,IAA2B9d,EAAAA,GAAAA,UAAS,OAC1D+d,EAAeC,IAAoBhe,EAAAA,GAAAA,UAAS,IAyDnD,OAtDAF,EAAAA,GAAAA,YAAU,KACR,MAAM,SAAE+Q,EAAQ,iBAAEoN,GAAqBljD,GAGjC,SAAEmjD,GAA8BrN,EAAjBsN,E,kXAAAA,CAAiBtN,EAAAA,CAA9BqN,aAqBR,IApBKD,aAAAA,EAAAA,EAAkBC,YAChBnjD,EAAQiiD,iBACXjiD,EAAQiiD,eAAiB,CAAC,GAE5BjiD,EAAQiiD,eAAekB,SAAWA,GAGpCN,EAAgB,SACX7iD,GAAAA,CACH81C,SAAU,IACRJ,QAAQ,EACRH,WAAY,GACZE,YAAa,GACb7R,SAAU,GACVyS,aAASz2C,EACT02C,sBAAsB,GACnB8M,MAIHpjD,EAAQ81C,SAASK,mBACnB,GAAKn2C,EAAQ81C,SAASjS,yBAkBf,CACL,MAAMwe,EAAaC,KAAyBn9B,MACzCo9B,GAAaA,EAASx6C,KAAO/H,EAAQ81C,SAASjS,2BAEjDkf,EAAwB,CAAE7Y,MAAOmY,aAAAA,EAAAA,EAAYtyC,KAAMxR,MAAO8jD,aAAAA,EAAAA,EAAYt6C,KACtEk7C,EAAiBZ,aAAAA,EAAAA,EAAY3oC,KAC/B,KAxBgD,CAC9C,MAAMsY,EAAShyB,EAAQ81C,SAAShS,4BAChC5R,EAAAA,GAAAA,oBACGj0B,IAAI+zB,GACJzB,MAAM0B,IACL,GAAIA,EAAI,CACN,MAAMowB,EAAaC,KAAyBn9B,MAAMo9B,GAAaA,EAASx6C,KAAOkqB,EAAGlqB,KAClFg7C,EAAwB,CAAE7Y,MAAOmY,aAAAA,EAAAA,EAAYtyC,KAAMxR,MAAO8jD,aAAAA,EAAAA,EAAYt6C,KACtEk7C,EAAiBZ,aAAAA,EAAAA,EAAY3oC,MAC7BmpC,EAAgB,SACX7iD,GAAAA,CACH81C,SAAU,SACL91C,EAAQ81C,UAAQ,CACnBjS,yBAA0B5R,EAAGlqB,OAGnC,IAEN,CAOF,GACC,IAGD,sCACE,mBAACs7C,GAAAA,uBAAsBA,CACrBC,WAAY,0CACZC,iBAAkBvjD,EAClBwjD,mBAAmB,EACnB/X,SAAUoX,IAGZ,mBAACpd,MAAAA,CAAIC,UAAU,iBACb,mBAAC+d,KAAAA,CAAG/d,UAAU,gBAAe,sBAC7B,mBAACD,MAAAA,CAAIC,UAAU,wBACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,GACZxZ,MAAM,WACN3rC,MAAOyB,EAAQ81C,SAAShnB,UAAY,GACpC2c,SAAUoW,GAAsB,WAAY7hD,EAAS6iD,GACrDc,UAAAA,KAGJ,mBAACle,MAAAA,CAAIC,UAAU,yBACY,QAAxB1lC,EAAAA,EAAQkjD,wBAARljD,IAAAA,OAAAA,EAAAA,EAA0BmjD,UACzB,sCACE,mBAAC1B,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,GACZxZ,MAAM,WACNV,UAAU,EACVjrC,MAAM,GACN2wC,YAAY,eAEd,mBAAC4M,GAAAA,OAAMA,CAACzS,SAgMlBlrC,EAhMgD,WAiMhDI,EAjM4DyB,EAkM5DyrC,EAlMqEoX,EAoMtE3oB,IACCuR,EAAS,SACJltC,GAAAA,CACH2kD,iBAAkB,SACb3kD,EAAM2kD,kBAAgB,CACzB,CAAC/kD,IAAM,M,IAzM4E,UAG/E,mBAACsjD,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,GACZxZ,MAAM,WACNxwB,KAAK,WACLnb,OAA6B,QAAtByB,EAAAA,EAAQiiD,sBAARjiD,IAAAA,OAAAA,EAAAA,EAAwBmjD,WAAYnjD,EAAQ81C,SAASqN,UAAY,GACxE1X,SAAUuW,GAA4B,WAAYhiD,EAAS6iD,GAC3Dc,UAAAA,KAIN,mBAACjC,GAAAA,CACCxX,MAAM,SACN0Z,WAAW,UACX7B,QAAS/hD,EAAQ81C,SAASJ,OAC1BjK,SAAUqW,GAAsB,SAAU9hD,EAAS6iD,KAEpD7iD,EAAQ81C,SAASJ,QAChB,sCACE,mBAACjQ,MAAAA,CAAIC,UAAU,WACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,EACZxZ,MAAM,QACN3rC,MAAOyB,EAAQ81C,SAASP,YAAc,GACtCrG,YAAY,KACZzD,SAAUoW,GAAsB,aAAc7hD,EAAS6iD,GACvDxB,QAAQ,6HAIZ,mBAAC5b,MAAAA,CAAIC,UAAU,WACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,EACZxZ,MAAM,QACN3rC,MAAOyB,EAAQ81C,SAASL,aAAe,GACvCvG,YAAY,KACZzD,SAAUoW,GAAsB,cAAe7hD,EAAS6iD,GACxDxB,QAAQ,kLAMhB,mBAAC5b,MAAAA,CAAIC,UAAU,WACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,EACZxZ,MAAM,YACN3rC,MAAOyB,EAAQ81C,SAASlS,UAAY,GACpCsL,YAAY,KACZzD,SAAUoW,GAAsB,WAAY7hD,EAAS6iD,GACrDxB,QAAQ,+FAGZ,mBAAC5b,MAAAA,CAAIC,UAAU,WACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,EACZhqC,KAAK,SACLwwB,MAAM,UACN3rC,MAAOyB,EAAQ81C,SAASO,QACxB5K,SAAWvR,IACT2oB,EAAgB,SACX7iD,GAAAA,CACH81C,SAAU,SAAK91C,EAAQ81C,UAAQ,CAAEO,QAASvtB,SAASoR,EAAM4S,cAAcvuC,MAAO,Q,EAGlF8iD,QAAQ,+DAKd,mBAAC5b,MAAAA,CAAIC,UAAU,iBACb,mBAAC+d,KAAAA,CAAG/d,UAAU,gBAAe,wBAC7B,mBAACgc,GAAAA,CACCxX,MAAM,SACN0Z,WAAW,UACX7B,QAAS/hD,EAAQ81C,SAASK,mBAC1B1K,SAAUqW,GAAsB,qBAAsB9hD,EAAS6iD,KAEhE7iD,EAAQ81C,SAASK,oBAChB,sCACE,mBAAC1Q,MAAAA,CAAIC,UAAU,WACb,mBAAC8W,GAAAA,gBAAeA,CAAChR,MAAO,GAAG,eAC3B,mBAAC2D,GAAAA,OAAMA,CACL3D,MAAO,GACPxrC,QA8ICsiD,KACuChhD,KAAK2wB,IAAQ,CACjEiY,MAAOjY,EAAGliB,KACVxR,MAAO0zB,EAAGlqB,GACV2lB,YAAauE,EAAGvY,SAjJJnb,MAAOukD,EACPrX,SAAUyW,GACRliD,EACA6iD,EACAE,EACAE,MAIa,aAAlBD,GACC,mBAACvd,MAAAA,CAAIC,UAAU,WACb,mBAAC+b,GAAAA,CACCzS,WAAY,EACZ0U,WAAY,GACZxZ,MAAM,mBACN3rC,MAAOyB,EAAQ81C,SAAStX,6BAA+B,GACvD0Q,YAAY,wBACZzD,SAAUoW,GAAsB,8BAA+B7hD,EAAS6iD,GACxExB,QAAQ,0IASpB,mBAAC5b,MAAAA,CAAIC,UAAU,iBACb,mBAAC+d,KAAAA,CAAG/d,UAAU,gBAAe,SAC7B,mBAACgc,GAAAA,CACCxX,MAAM,2CACN0Z,WAAW,WACX7B,QAAS/hD,EAAQ81C,SAAShC,wBAC1BrI,SAAUqW,GAAsB,0BAA2B9hD,EAAS6iD,KAEtE,mBAACnB,GAAAA,CACCxX,MAAM,yBACN0Z,WAAW,WACX7B,UAAW/hD,EAAQ81C,SAASQ,qBAC5B7K,SAAUqW,GAAsB,uBAAwB9hD,EAAS6iD,GACjExB,QAAQ,4YA2DhB,IACEljD,EACAI,EACAktC,C,IClSDoY,gBJuGwB,EAAGjpC,QAAOyT,aAAYod,WAAUqY,iBACzD,MAAMC,EAzD0D,CAChEviC,OzCpD6B,GyCqD7B3G,UAAW7V,EACXqW,MAAO,CAAExZ,OAAQ,IACjByZ,KAAM,CAAEzZ,OAAQ,IAChB0Z,YAAa,CAAE1Z,OAAQ,IACvBgc,QAAS,CAAEhc,OAAQ,IACnBM,KAAM,CAAEN,OAAQ,IAChBqY,MAAO,CAAErY,OAAQ,IACjB0e,UAAW,GACXyB,QAAS,CAAEngB,OAAQ,IACnB4f,gBAAiB,GACjBhE,KAAM,CAAE5b,OAAQ,IAChB4sB,MAAO,CAAE5sB,OAAQ,IACjBolB,WAAY,GACZjnB,QAAS,CACPmhC,mBAAmB,EACnB7Y,iBAAiB,EACjBguB,sBAAsB,EACtBprB,uBAAuB,EACvBwmB,UAAW,UACXpwB,OAAO,GAET0G,MAAO,CACLM,iBAAiB,KAkCnB1N,EAAQ,MAAKmpC,EAAkBnpC,IACzB5a,QAAU,MAAK+jD,EAAc/jD,QAAY4a,EAAM5a,SACrD,MAAM,UAAE6a,GAAcD,EACtB,GAAIC,IAAc7V,GAAmB6V,IAAc7V,EAAiB,CAClE,MAAMu8C,EAxBD,CACL3N,aAAcv7B,EAAiBC,SAC/BtY,QAAS,CACPqhB,YAAa,EACbP,aAAc,UACdwM,aAAc,EACdmC,oBAAoB,EACpBjB,WAAW,EACX4J,M5CnDuC,K4CoDvCqb,cAAc,EACdnyB,OAAO,KAeT1G,EAAQ,MAAK2mC,EAAa3mC,IACpB5a,QAAU,MAAKuhD,EAASvhD,QAAY4a,EAAM5a,QAClD,CACI6a,IAAc7V,IAChB4V,EAAQ,MAtCH,CACL+mB,gBAAiB,GACjBE,UAAW,GACX5gB,YAAa,MACbL,YAAa,QAkC0BhG,KAIzCmqB,EAAAA,GAAAA,YAAU,KACR,MAAMif,EAAgBtkC,EAAQ9E,GAC9B6wB,EAASuY,EAAc,GACtB,IAEH,MAQMC,EAAoBrpC,IACxB6wB,EAAS7wB,GACTkpC,GAAY,EAuDd,OACE,sCACE,mBAACte,GAAAA,eAAcA,KACb,mBAACuJ,GAAAA,YAAWA,CAAC7E,MAAM,aAAa8E,WAAY,IAC1C,mBAACG,GAAAA,OAAMA,CACLC,cAAc,EACd5D,MAAO,GACPjtC,MAAOsc,EACP7a,QAAS8/C,GACTrU,UAAuB,YAzEvBtC,IACe,OAAjBA,EAAO5qC,OACT0lD,EAAiB,SAAKrpC,GAAAA,CAAO,UAAQuuB,EAAO5qC,QAC9C,MAyEE,mBAACknC,MAAAA,CAAIC,UAAU,yBACb,mBAACD,MAAAA,CAAIC,UAAU,wCAGlB7qB,IAAc7V,GA9Df,sCACE,mBAAC+xC,GAAkBA,CAACn8B,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,IACpE,mBAAChI,GAAoBA,CAACrhC,MAAOA,EAAO6wB,SAAUwY,KA6D/CppC,IAAc7V,GAtDf,sCACE,mBAACw5C,GAAiBA,CAAC5jC,MAAOA,EAAO6wB,SAAUwY,IAC3C,mBAAChI,GAAoBA,CAACrhC,MAAOA,EAAO6wB,SAAUwY,KAqD/CppC,IAAc7V,GA9Cf,sCACE,mBAAC84C,GAAsBA,CAACljC,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,KA8CzEppC,IAAc7V,GAtCf,sCACE,mBAAC25C,GAAmBA,CAAC/jC,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,IACrE,mBAAChI,GAAoBA,CAACrhC,MAAOA,EAAO6wB,SAAUwY,KAqC/CppC,IAAc7V,GA/BV,mBAACg5C,GAAmBA,CAACpjC,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,IAgCzEppC,IAAc7V,GA5BV,mBAACu6C,GAAmBA,CAAC3kC,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,IA6BzEppC,IAAc7V,GAzBV,mBAACy6C,GAAqBA,CAAC7kC,MAAOA,EAAOyT,WAAYA,EAAYod,SAAUwY,IA0B5E,mBAACjH,GAAkBA,CAACniC,UAAWA,EAAWoiC,aAAcriC,EAAM5a,QAASyrC,SA3ElDzrC,IACvBikD,EAAiB,SAAKrpC,GAAAA,CAAO5a,Y,QIxI9BkkD,uBAAuBzD,G","sources":["webpack:///../node_modules/lru-cache/index.js","webpack:///../node_modules/semver/classes/comparator.js","webpack:///../node_modules/semver/classes/range.js","webpack:///../node_modules/semver/classes/semver.js","webpack:///../node_modules/semver/functions/clean.js","webpack:///../node_modules/semver/functions/cmp.js","webpack:///../node_modules/semver/functions/coerce.js","webpack:///../node_modules/semver/functions/compare-build.js","webpack:///../node_modules/semver/functions/compare-loose.js","webpack:///../node_modules/semver/functions/compare.js","webpack:///../node_modules/semver/functions/diff.js","webpack:///../node_modules/semver/functions/eq.js","webpack:///../node_modules/semver/functions/gt.js","webpack:///../node_modules/semver/functions/gte.js","webpack:///../node_modules/semver/functions/inc.js","webpack:///../node_modules/semver/functions/lt.js","webpack:///../node_modules/semver/functions/lte.js","webpack:///../node_modules/semver/functions/major.js","webpack:///../node_modules/semver/functions/minor.js","webpack:///../node_modules/semver/functions/neq.js","webpack:///../node_modules/semver/functions/parse.js","webpack:///../node_modules/semver/functions/patch.js","webpack:///../node_modules/semver/functions/prerelease.js","webpack:///../node_modules/semver/functions/rcompare.js","webpack:///../node_modules/semver/functions/rsort.js","webpack:///../node_modules/semver/functions/satisfies.js","webpack:///../node_modules/semver/functions/sort.js","webpack:///../node_modules/semver/functions/valid.js","webpack:///../node_modules/semver/index.js","webpack:///../node_modules/semver/internal/constants.js","webpack:///../node_modules/semver/internal/debug.js","webpack:///../node_modules/semver/internal/identifiers.js","webpack:///../node_modules/semver/internal/parse-options.js","webpack:///../node_modules/semver/internal/re.js","webpack:///../node_modules/semver/ranges/gtr.js","webpack:///../node_modules/semver/ranges/intersects.js","webpack:///../node_modules/semver/ranges/ltr.js","webpack:///../node_modules/semver/ranges/max-satisfying.js","webpack:///../node_modules/semver/ranges/min-satisfying.js","webpack:///../node_modules/semver/ranges/min-version.js","webpack:///../node_modules/semver/ranges/outside.js","webpack:///../node_modules/semver/ranges/simplify.js","webpack:///../node_modules/semver/ranges/subset.js","webpack:///../node_modules/semver/ranges/to-comparators.js","webpack:///../node_modules/semver/ranges/valid.js","webpack:///../node_modules/yallist/iterator.js","webpack:///../node_modules/yallist/yallist.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"app/core/config\"","webpack:///external amd \"app/core/core\"","webpack:///external amd \"app/core/table_model\"","webpack:///external amd \"app/core/utils/datemath\"","webpack:///external amd \"app/core/utils/kbn\"","webpack:///external amd \"lodash\"","webpack:///external amd \"moment\"","webpack:///external amd \"react\"","webpack:///external amd \"react-dom\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./datasource/constants.ts","webpack:///./datasource/types.ts","webpack:///./datasource/utils.ts","webpack:///./datasource/migrations.ts","webpack:///./datasource/metricFunctions.ts","webpack:///./datasource/dataProcessor.ts","webpack:///./datasource/responseHandler.ts","webpack:///./datasource/problemsHandler.ts","webpack:///./datasource/zabbix/proxy/cachingProxy.ts","webpack:///./datasource/zabbix/connectors/dbConnector.ts","webpack:///./datasource/zabbix/connectors/zabbix_api/zabbixAPIConnector.ts","webpack:///./datasource/zabbix/connectors/sql/mysql.ts","webpack:///./datasource/zabbix/connectors/sql/postgres.ts","webpack:///./datasource/zabbix/connectors/sql/sqlConnector.ts","webpack:///./datasource/zabbix/connectors/influxdb/influxdbConnector.ts","webpack:///./datasource/zabbix/zabbix.ts","webpack:///../node_modules/react-use/node_modules/tslib/tslib.es6.js","webpack:///../node_modules/react-use/esm/useAsyncFn.js","webpack:///../node_modules/react-use/esm/useMountedState.js","webpack:///./datasource/components/QueryEditor/QueryEditorRow.tsx","webpack:///./components/ActionButton/ActionButton.tsx","webpack:///./components/ConfigProvider/ConfigProvider.tsx","webpack:///./components/Modal/ModalController.tsx","webpack:///./components/MetricPicker/constants.ts","webpack:///./components/MetricPicker/MetricPickerMenu.tsx","webpack:///./components/MetricPicker/MetricPicker.tsx","webpack:///./datasource/components/QueryEditor/utils.ts","webpack:///./datasource/components/AnnotationQueryEditor.tsx","webpack:///./datasource/datasource.ts","webpack:///./datasource/components/QueryEditor/MetricsQueryEditor.tsx","webpack:///./datasource/components/FunctionEditor/FunctionEditorControls.tsx","webpack:///./datasource/components/FunctionEditor/FunctionEditor.tsx","webpack:///./datasource/components/FunctionEditor/FunctionParamEditor.tsx","webpack:///./datasource/components/FunctionEditor/helpers.ts","webpack:///./datasource/components/FunctionEditor/ZabbixFunctionEditor.tsx","webpack:///./datasource/components/FunctionEditor/AddZabbixFunction.tsx","webpack:///./datasource/components/QueryEditor/QueryFunctionsEditor.tsx","webpack:///./datasource/components/QueryEditor/QueryOptionsEditor.tsx","webpack:///./datasource/components/QueryEditor/TextMetricsQueryEditor.tsx","webpack:///./datasource/components/QueryEditor/ProblemsQueryEditor.tsx","webpack:///./datasource/components/QueryEditor/ItemIdQueryEditor.tsx","webpack:///./datasource/components/QueryEditor/ServicesQueryEditor.tsx","webpack:///./datasource/components/QueryEditor/TriggersQueryEditor.tsx","webpack:///./datasource/components/QueryEditor/UserMacrosQueryEditor.tsx","webpack:///./datasource/components/QueryEditor.tsx","webpack:///./datasource/components/ZabbixInput.tsx","webpack:///./datasource/components/VariableQueryEditor.tsx","webpack:///./datasource/components/ConfigEditor.tsx","webpack:///./datasource/module.ts"],"sourcesContent":["'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst { ANY } = require('../classes/comparator.js')\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a subset of some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else return false\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n// - If any C is a = range, and GT or LT are set, return false\n// - Else return true\n\nconst subset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY)\n    return dom.length === 1 && dom[0].semver === ANY\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__346__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7294__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4745__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7084__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7399__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8283__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2650__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2729__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Plugin IDs\nexport const ZABBIX_PROBLEMS_PANEL_ID = 'alexanderzobnin-zabbix-triggers-panel';\nexport const ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\n\n// Data point\nexport const DATAPOINT_VALUE = 0;\nexport const DATAPOINT_TS = 1;\n\n// Editor modes\nexport const MODE_METRICS = '0';\nexport const MODE_ITSERVICE = '1';\nexport const MODE_TEXT = '2';\nexport const MODE_ITEMID = '3';\nexport const MODE_TRIGGERS = '4';\nexport const MODE_PROBLEMS = '5';\nexport const MODE_MACROS = '6';\n\n// Triggers severity\nexport const SEV_NOT_CLASSIFIED = 0;\nexport const SEV_INFORMATION = 1;\nexport const SEV_WARNING = 2;\nexport const SEV_AVERAGE = 3;\nexport const SEV_HIGH = 4;\nexport const SEV_DISASTER = 5;\n\nexport const SHOW_ALL_TRIGGERS = [0, 1];\nexport const SHOW_ALL_EVENTS = [0, 1];\nexport const SHOW_OK_EVENTS = 1;\n\n// Acknowledge\nexport const ZBX_ACK_ACTION_NONE = 0;\nexport const ZBX_ACK_ACTION_CLOSE = 1;\nexport const ZBX_ACK_ACTION_ACK = 2;\nexport const ZBX_ACK_ACTION_ADD_MESSAGE = 4;\nexport const ZBX_ACK_ACTION_CHANGE_SEVERITY = 8;\n\nexport const TRIGGER_SEVERITY = [\n  { val: 0, text: 'Not classified' },\n  { val: 1, text: 'Information' },\n  { val: 2, text: 'Warning' },\n  { val: 3, text: 'Average' },\n  { val: 4, text: 'High' },\n  { val: 5, text: 'Disaster' },\n];\n\n/** Minimum interval for SLA over time (1 hour) */\nexport const MIN_SLA_INTERVAL = 3600;\n\nexport const RANGE_VARIABLE_VALUE = 'range_series';\n\nexport const DEFAULT_ZABBIX_PROBLEMS_LIMIT = 1001;\n","import { BusEventWithPayload, DataQuery, DataSourceJsonData, DataSourceRef, SelectableValue } from '@grafana/data';\n\nexport interface ZabbixDSOptions extends DataSourceJsonData {\n  username: string;\n  password?: string;\n  trends: boolean;\n  trendsFrom: string;\n  trendsRange: string;\n  cacheTTL: string;\n  timeout?: number;\n  dbConnectionEnable: boolean;\n  dbConnectionDatasourceId?: number;\n  dbConnectionDatasourceName?: string;\n  dbConnectionRetentionPolicy?: string;\n  disableReadOnlyUsersAck: boolean;\n  disableDataAlignment: boolean;\n}\n\nexport interface ZabbixSecureJSONData {\n  password?: string;\n}\n\nexport interface ZabbixConnectionInfo {\n  zabbixVersion: string;\n  dbConnectorStatus: {\n    dsType: string;\n    dsName: string;\n  };\n}\n\nexport interface ZabbixConnectionTestQuery {\n  datasourceId: number;\n  queryType: string;\n}\n\nexport interface ZabbixMetricsQuery extends DataQuery {\n  schema: number;\n  queryType: string;\n  datasourceId: number;\n  group: { filter: string; name?: string };\n  host: { filter: string; name?: string };\n  application: { filter: string; name?: string };\n  itemTag: { filter: string; name?: string };\n  item: { filter: string; name?: string };\n  macro: { filter: string; macro?: string };\n  textFilter: string;\n  mode: number;\n  itemids: string;\n  useCaptureGroups: boolean;\n  proxy?: { filter: string };\n  trigger?: { filter: string };\n  itServiceFilter?: string;\n  slaFilter?: string;\n  slaProperty?: any;\n  slaInterval?: string;\n  tags?: { filter: string };\n  triggers?: { minSeverity: number; acknowledged: number; count: boolean };\n  countTriggersBy?: 'problems' | 'items' | '';\n  functions?: MetricFunc[];\n  options?: ZabbixQueryOptions;\n  // Problems\n  showProblems?: ShowProblemTypes;\n  // Deprecated\n  hostFilter?: string;\n  itemFilter?: string;\n  macroFilter?: string;\n}\n\nexport interface ZabbixQueryOptions {\n  showDisabledItems?: boolean;\n  skipEmptyValues?: boolean;\n  disableDataAlignment?: boolean;\n  useZabbixValueMapping?: boolean;\n  useTrends?: 'default' | 'true' | 'false';\n  // Problems options\n  minSeverity?: number;\n  sortProblems?: string;\n  acknowledged?: number;\n  hostsInMaintenance?: boolean;\n  hostProxy?: boolean;\n  limit?: number;\n  useTimeRange?: boolean;\n  severities?: number[];\n  count?: boolean;\n\n  // Annotations\n  showOkEvents?: boolean;\n  hideAcknowledged?: boolean;\n  showHostname?: boolean;\n}\n\nexport interface MetricFunc {\n  text: string;\n  params: Array<string | number>;\n  def: FuncDef;\n  added?: boolean;\n}\n\nexport interface FuncDef {\n  name: string;\n  params: ParamDef[];\n  defaultParams: Array<string | number>;\n  category?: string;\n  shortName?: any;\n  fake?: boolean;\n  version?: string;\n  description?: string;\n  /**\n   * True if the function was not found on the list of available function descriptions.\n   */\n  unknown?: boolean;\n}\n\nexport type ParamDef = {\n  name: string;\n  type: string;\n  options?: Array<string | number>;\n  multiple?: boolean;\n  optional?: boolean;\n  version?: string;\n};\n\n// The paths of these files have moved around in Grafana and they don't resolve properly\n// either. Safer not to bother trying to import them just for type hinting.\n\nexport interface TemplateSrv {\n  variables: {\n    name: string;\n  };\n\n  highlightVariablesAsHtml(str: any): any;\n\n  replace(target: any, scopedVars?: any, format?: any): any;\n}\n\nexport interface DashboardSrv {\n  dash: any;\n}\n\n// Grafana types from backend code\n\ntype RowValues = object[];\ntype TimePoint = [number?, number?];\ntype TimeSeriesPoints = TimePoint[];\ntype TimeSeriesSlice = TimeSeries[];\n\ninterface TimeSeries {\n  name: string;\n  points: TimeSeriesPoints;\n  tags: { [key: string]: string };\n}\n\ninterface TableColumn {\n  text: string;\n}\n\ninterface Table {\n  columns: TableColumn[];\n  rows: RowValues[];\n}\n\ninterface QueryResult {\n  error: string;\n  refId: string;\n  meta: any;\n  series: TimeSeriesSlice[];\n  tables: Table[];\n}\n\nexport interface TSDBResponse {\n  results: { [key: string]: QueryResult };\n  message: string;\n}\n\nexport interface VariableQueryProps {\n  query: LegacyVariableQuery;\n  onChange: (query: VariableQuery, definition: string) => void;\n  datasource: any;\n  templateSrv: any;\n}\n\nexport interface VariableQueryData extends VariableQuery {\n  selectedQueryType: SelectableValue<VariableQueryTypes>;\n  legacyQuery?: string;\n}\n\nexport interface VariableQuery {\n  queryType: VariableQueryTypes;\n  group?: string;\n  host?: string;\n  application?: string;\n  itemTag?: string;\n  item?: string;\n  macro?: string;\n}\n\nexport type LegacyVariableQuery = VariableQuery | string;\n\nexport enum VariableQueryTypes {\n  Group = 'group',\n  Host = 'host',\n  Application = 'application',\n  Macro = 'macro',\n  ItemTag = 'itemTag',\n  Item = 'item',\n  ItemValues = 'itemValues',\n}\n\nexport enum ShowProblemTypes {\n  Problems = 'problems',\n  Recent = 'recent',\n  History = 'history',\n}\n\nexport interface ProblemDTO {\n  triggerid?: string;\n  eventid?: string;\n  timestamp: number;\n  lastchange?: string;\n  lastchangeUnix?: number;\n\n  /** Name of the trigger. */\n  name?: string;\n\n  /** Same as a name. */\n  description?: string;\n\n  /** Whether the trigger is in OK or problem state. */\n  value?: string;\n\n  datasource?: DataSourceRef | string;\n  comments?: string;\n  host?: string;\n  hostTechName?: string;\n  proxy?: string;\n  severity?: string;\n  priority?: string;\n  opdata?: string;\n\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n\n  groups?: ZBXGroup[];\n  hosts?: ZBXHost[];\n  items?: ZBXItem[];\n  alerts?: ZBXAlert[];\n  tags?: ZBXTag[];\n  url?: string;\n\n  expression?: string;\n  correlation_mode?: string;\n  correlation_tag?: string;\n  suppressed?: string;\n  suppression_data?: any[];\n  state?: string;\n  maintenance?: boolean;\n  manual_close?: string;\n  error?: string;\n\n  showAckButton?: boolean;\n  type?: string;\n}\n\nexport interface ZBXProblem {\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n  clock: string;\n  ns: string;\n  correlationid?: string;\n  datasource?: string;\n  name?: string;\n  eventid?: string;\n  maintenance?: boolean;\n  object?: string;\n  objectid?: string;\n  opdata?: any;\n  r_eventid?: string;\n  r_clock?: string;\n  r_ns?: string;\n  severity?: string;\n  showAckButton?: boolean;\n  source?: string;\n  suppressed?: string;\n  suppression_data?: any[];\n  tags?: ZBXTag[];\n  userid?: string;\n}\n\nexport interface ZBXTrigger {\n  acknowledges?: ZBXAcknowledge[];\n  showAckButton?: boolean;\n  alerts?: ZBXAlert[];\n  age?: string;\n  color?: string;\n  comments?: string;\n  correlation_mode?: string;\n  correlation_tag?: string;\n  datasource?: string;\n  description?: string;\n  error?: string;\n  expression?: string;\n  flags?: string;\n  groups?: ZBXGroup[];\n  host?: string;\n  hostTechName?: string;\n  hosts?: ZBXHost[];\n  items?: ZBXItem[];\n  lastEvent?: ZBXEvent;\n  lastchange?: string;\n  lastchangeUnix?: number;\n  maintenance?: boolean;\n  manual_close?: string;\n  priority?: string;\n  proxy?: string;\n  recovery_expression?: string;\n  recovery_mode?: string;\n  severity?: string;\n  state?: string;\n  status?: string;\n  tags?: ZBXTag[];\n  templateid?: string;\n  triggerid?: string;\n  /** Whether the trigger can generate multiple problem events. */\n  type?: string;\n  url?: string;\n  value?: string;\n}\n\nexport interface ZBXGroup {\n  groupid: string;\n  name: string;\n}\n\nexport interface ZBXHost {\n  hostid: string;\n  name: string;\n  host: string;\n  maintenance_status?: string;\n  proxy_hostid?: string;\n  proxy?: any;\n  description?: string;\n}\n\nexport interface ZBXItem {\n  itemid: string;\n  name: string;\n  key_: string;\n  lastvalue?: string;\n  tags?: ZBXItemTag[];\n}\n\nexport interface ZBXApp {\n  applicationid: string;\n  hostid: string;\n  name: string;\n  templateids?: string;\n}\n\nexport interface ZBXItemTag {\n  tag: string;\n  value?: string;\n}\n\nexport interface ZBXEvent {\n  eventid: string;\n  clock: string;\n  ns?: string;\n  value?: string;\n  name?: string;\n  source?: string;\n  object?: string;\n  objectid?: string;\n  severity?: string;\n  hosts?: ZBXHost[];\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n  tags?: ZBXTag[];\n  suppressed?: string;\n}\n\nexport interface ZBXTag {\n  tag: string;\n  value?: string;\n}\n\nexport interface ZBXAcknowledge {\n  acknowledgeid: string;\n  eventid: string;\n  userid: string;\n  action: string;\n  clock: string;\n  time: string;\n  message?: string;\n  user: string;\n  alias: string;\n  name: string;\n  surname: string;\n}\n\nexport interface ZBXAlert {\n  eventid: string;\n  clock: string;\n  message: string;\n  error: string;\n}\n\nexport class ZBXQueryUpdatedEvent extends BusEventWithPayload<any> {\n  static type = 'zbx-query-updated';\n}\n","import _ from 'lodash';\n// eslint-disable-next-line\nimport moment from 'moment';\nimport * as c from './constants';\nimport { VariableQuery, VariableQueryTypes, ZBXItemTag } from './types';\nimport {\n  DataFrame,\n  FieldType,\n  getValueFormats,\n  MappingType,\n  rangeUtil,\n  TIME_SERIES_TIME_FIELD_NAME,\n  ValueMapping,\n} from '@grafana/data';\n\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]    [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n\n/**\n * Expand Zabbix item name\n *\n * @param  {string} name item name, ie \"CPU $2 time\"\n * @param  {string} key  item key, ie system.cpu.util[,system,avg1]\n * @return {string}      expanded name, ie \"CPU system time\"\n */\nexport function expandItemName(name: string, key: string): string {\n  // extract params from key:\n  // \"system.cpu.util[,system,avg1]\" --> [\"\", \"system\", \"avg1\"]\n  const key_params_str = key.substring(key.indexOf('[') + 1, key.lastIndexOf(']'));\n  const key_params = splitKeyParams(key_params_str);\n\n  // replace item parameters\n  for (let i = key_params.length; i >= 1; i--) {\n    name = name.replace('$' + i, key_params[i - 1]);\n  }\n  return name;\n}\n\nexport function expandItems(items: any[]) {\n  _.forEach(items, (item) => {\n    item.item = item.name;\n    item.name = expandItemName(item.item, item.key_);\n    return item;\n  });\n  return items;\n}\n\nfunction splitKeyParams(paramStr) {\n  const params = [];\n  let quoted = false;\n  let in_array = false;\n  const split_symbol = ',';\n  let param = '';\n\n  _.forEach(paramStr, (symbol) => {\n    if (symbol === '\"' && in_array) {\n      param += symbol;\n    } else if (symbol === '\"' && quoted) {\n      quoted = false;\n    } else if (symbol === '\"' && !quoted) {\n      quoted = true;\n    } else if (symbol === '[' && !quoted) {\n      in_array = true;\n    } else if (symbol === ']' && !quoted) {\n      in_array = false;\n    } else if (symbol === split_symbol && !quoted && !in_array) {\n      params.push(param);\n      param = '';\n    } else {\n      param += symbol;\n    }\n  });\n\n  params.push(param);\n  return params;\n}\n\nconst MACRO_PATTERN = /{\\$[A-Z0-9_\\.]+}/g;\n\nexport function containsMacro(itemName) {\n  return MACRO_PATTERN.test(itemName);\n}\n\nexport function replaceMacro(item, macros, isTriggerItem?) {\n  let itemName = isTriggerItem ? item.url : item.name;\n  const item_macros = itemName.match(MACRO_PATTERN);\n  _.forEach(item_macros, (macro) => {\n    const host_macros = _.filter(macros, (m) => {\n      if (m.hostid) {\n        if (isTriggerItem) {\n          // Trigger item can have multiple hosts\n          // Check all trigger host ids against macro host id\n          let hostIdFound = false;\n          _.forEach(item.hosts, (h) => {\n            if (h.hostid === m.hostid) {\n              hostIdFound = true;\n            }\n          });\n          return hostIdFound;\n        } else {\n          // Check app host id against macro host id\n          return m.hostid === item.hostid;\n        }\n      } else {\n        // Add global macros\n        return true;\n      }\n    });\n\n    const macro_def = _.find(host_macros, { macro: macro });\n    if (macro_def && macro_def.value) {\n      const macro_value = macro_def.value;\n      const macro_regex = new RegExp(escapeMacro(macro));\n      itemName = itemName.replace(macro_regex, macro_value);\n    }\n  });\n\n  return itemName;\n}\n\nfunction escapeMacro(macro) {\n  macro = macro.replace(/\\$/, '\\\\$');\n  return macro;\n}\n\nexport function parseLegacyVariableQuery(query: string): VariableQuery {\n  let queryType: VariableQueryTypes;\n  const parts = [];\n\n  // Split query. Query structure: group.host.app.item\n  _.each(splitTemplateQuery(query), (part) => {\n    // Replace wildcard to regex\n    if (part === '*') {\n      part = '/.*/';\n    }\n    parts.push(part);\n  });\n  const template = _.zipObject(['group', 'host', 'app', 'item'], parts);\n\n  if (parts.length === 4 && template.app === '/.*/') {\n    // Search for all items, even it's not belong to any application\n    template.app = '';\n  }\n\n  switch (parts.length) {\n    case 1:\n      queryType = VariableQueryTypes.Group;\n      break;\n    case 2:\n      queryType = VariableQueryTypes.Host;\n      break;\n    case 3:\n      queryType = VariableQueryTypes.Application;\n      break;\n    case 4:\n      queryType = VariableQueryTypes.Item;\n      break;\n  }\n\n  const variableQuery: VariableQuery = {\n    queryType,\n    group: template.group || '',\n    host: template.host || '',\n    application: template.app || '',\n    item: template.item || '',\n  };\n\n  return variableQuery;\n}\n\n/**\n * Split template query to parts of zabbix entities\n * group.host.app.item -> [group, host, app, item]\n * {group}{host.com} -> [group, host.com]\n */\nexport function splitTemplateQuery(query) {\n  const splitPattern = /\\{[^\\{\\}]*\\}|\\{\\/.*\\/\\}/g;\n  let split;\n\n  if (isContainsBraces(query)) {\n    const result = query.match(splitPattern);\n    split = _.map(result, (part) => {\n      return _.trim(part, '{}');\n    });\n  } else {\n    split = query.split('.');\n  }\n\n  return split;\n}\n\nfunction isContainsBraces(query) {\n  const bracesPattern = /^\\{.+\\}$/;\n  return bracesPattern.test(query);\n}\n\n// Pattern for testing regex\nexport const regexPattern = /^\\/(.*)\\/([gmi]*)$/m;\n\nexport function isRegex(str) {\n  return regexPattern.test(str);\n}\n\nexport function isTemplateVariable(str, templateVariables) {\n  const variablePattern = /^\\$\\w+/;\n  if (variablePattern.test(str)) {\n    const variables = _.map(templateVariables, (variable) => {\n      return '$' + variable.name;\n    });\n    return _.includes(variables, str);\n  } else {\n    return false;\n  }\n}\n\nexport function getRangeScopedVars(range) {\n  const msRange = range.to.diff(range.from);\n  const sRange = Math.round(msRange / 1000);\n  const regularRange = rangeUtil.secondsToHms(msRange / 1000);\n  return {\n    __range_ms: { text: msRange, value: msRange },\n    __range_s: { text: sRange, value: sRange },\n    __range: { text: regularRange, value: regularRange },\n    __range_series: { text: c.RANGE_VARIABLE_VALUE, value: c.RANGE_VARIABLE_VALUE },\n  };\n}\n\nexport function buildRegex(str) {\n  const matches = str.match(regexPattern);\n  const pattern = matches[1];\n  const flags = matches[2] !== '' ? matches[2] : undefined;\n  return new RegExp(pattern, flags);\n}\n\n// Need for template variables replace\n// From Grafana's templateSrv.js\nexport function escapeRegex(value) {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n\n/**\n * Parses Zabbix item update interval (returns milliseconds). Returns 0 in case of custom intervals.\n */\nexport function parseItemInterval(interval: string): number {\n  const normalizedInterval = normalizeZabbixInterval(interval);\n  if (normalizedInterval) {\n    return parseInterval(normalizedInterval);\n  }\n  return 0;\n}\n\nexport function normalizeZabbixInterval(interval: string): string {\n  const intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)?/g;\n  const parsedInterval = intervalPattern.exec(interval);\n  if (!parsedInterval || !interval || (parsedInterval.length > 2 && !parsedInterval[2])) {\n    return '';\n  }\n  return parsedInterval[1] + (parsedInterval.length > 2 ? parsedInterval[2] : 's');\n}\n\n// Returns interval in milliseconds\nexport function parseInterval(interval: string): number {\n  const intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)/g;\n  const momentInterval: any[] = intervalPattern.exec(interval);\n  const duration = moment.duration(Number(momentInterval[1]), momentInterval[2]);\n  return duration.valueOf() as number;\n}\n\nexport function parseTimeShiftInterval(interval) {\n  const intervalPattern = /^([\\+\\-]*)([\\d]+)(y|M|w|d|h|m|s)/g;\n  const momentInterval: any[] = intervalPattern.exec(interval);\n  let duration: any = 0;\n\n  if (momentInterval[1] === '+') {\n    duration = 0 - (moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf() as any);\n  } else {\n    duration = moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf();\n  }\n\n  return duration;\n}\n\n/**\n * Format acknowledges.\n *\n * @param  {array} acknowledges array of Zabbix acknowledge objects\n * @return {string} HTML-formatted table\n */\nexport function formatAcknowledges(acknowledges) {\n  if (acknowledges.length) {\n    let formatted_acknowledges =\n      '<br><br>Acknowledges:<br><table><tr><td><b>Time</b></td>' + '<td><b>User</b></td><td><b>Comments</b></td></tr>';\n    _.each(\n      _.map(acknowledges, (ack) => {\n        const timestamp = moment.unix(ack.clock);\n        return (\n          '<tr><td><i>' +\n          timestamp.format('DD MMM YYYY HH:mm:ss') +\n          '</i></td><td>' +\n          ack.alias +\n          ' (' +\n          ack.name +\n          ' ' +\n          ack.surname +\n          ')' +\n          '</td><td>' +\n          ack.message +\n          '</td></tr>'\n        );\n      }),\n      (ack) => {\n        formatted_acknowledges = formatted_acknowledges.concat(ack);\n      }\n    );\n    formatted_acknowledges = formatted_acknowledges.concat('</table>');\n    return formatted_acknowledges;\n  } else {\n    return '';\n  }\n}\n\nexport function convertToZabbixAPIUrl(url) {\n  const zabbixAPIUrlPattern = /.*api_jsonrpc.php$/;\n  const trimSlashPattern = /(.*?)[\\/]*$/;\n  if (url.match(zabbixAPIUrlPattern)) {\n    return url;\n  } else {\n    return url.replace(trimSlashPattern, '$1');\n  }\n}\n\n/**\n * Wrap function to prevent multiple calls\n * when waiting for result.\n */\nexport function callOnce(func, promiseKeeper) {\n  return function () {\n    if (!promiseKeeper) {\n      promiseKeeper = Promise.resolve(\n        func\n          .apply(this, arguments)\n          .then((result) => {\n            promiseKeeper = null;\n            return result;\n          })\n          .catch((err) => {\n            promiseKeeper = null;\n            throw err;\n          })\n      );\n    }\n    return promiseKeeper;\n  };\n}\n\n/**\n * Apply function one by one: `sequence([a(), b(), c()]) = c(b(a()))`\n * @param {*} funcsArray functions to apply\n */\nexport function sequence(funcsArray) {\n  return function (result) {\n    for (let i = 0; i < funcsArray.length; i++) {\n      result = funcsArray[i].call(this, result);\n    }\n    return result;\n  };\n}\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport function isValidVersion(version) {\n  return versionPattern.exec(version);\n}\n\nexport function parseVersion(version: string) {\n  const match = versionPattern.exec(version);\n  if (!match) {\n    return null;\n  }\n  const major = Number(match[1]);\n  const minor = Number(match[2] || 0);\n  const patch = Number(match[3] || 0);\n  const meta = match[4];\n  return { major, minor, patch, meta };\n}\n\n/**\n * Replaces any space-like symbols (tabs, new lines, spaces) by single whitespace.\n */\nexport function compactQuery(query) {\n  return query.replace(/\\s+/g, ' ').trim();\n}\n\nexport function getArrayDepth(a, level = 0) {\n  if (a.length === 0) {\n    return 1;\n  }\n  const elem = a[0];\n  if (_.isArray(elem)) {\n    return getArrayDepth(elem, level + 1);\n  }\n  return level + 1;\n}\n\n/**\n * Checks whether its argument represents a numeric value.\n */\nexport function isNumeric(n: any): boolean {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Parses tags string into array of {tag: value} objects\n */\nexport function parseTags(tagStr: string): any[] {\n  if (!tagStr) {\n    return [];\n  }\n\n  let tags: any[] = _.map(tagStr.split(','), (tag) => tag.trim());\n  tags = _.map(tags, (tag) => {\n    const tagParts = tag.split(':');\n    return { tag: tagParts[0]?.trim(), value: tagParts[1]?.trim() };\n  });\n  return tags;\n}\n\n// Parses string representation of tag into the object\nexport function parseItemTag(tagStr: string): ZBXItemTag {\n  const itemTag: ZBXItemTag = { tag: '', value: '' };\n  const firstIdx = tagStr.indexOf(':');\n  if (firstIdx > 0) {\n    itemTag.tag = tagStr.slice(0, firstIdx).trim();\n    itemTag.value = tagStr.slice(Math.min(firstIdx + 1, tagStr.length)).trim();\n  } else {\n    itemTag.tag = tagStr.trim();\n  }\n  return itemTag;\n}\n\nexport function itemTagToString(t: ZBXItemTag): string {\n  return t.value ? `${t.tag}: ${t.value}` : t.tag;\n}\n\nexport function mustArray(result: any): any[] {\n  return result || [];\n}\n\nconst getUnitsMap = () => ({\n  '%': 'percent',\n  b: 'decbits', // bits(SI)\n  bps: 'bps', // bits/sec(SI)\n  B: 'bytes', // bytes(IEC)\n  Bps: 'binBps', // bytes/sec(IEC)\n  // 'unixtime': 'dateTimeAsSystem',\n  uptime: 'dtdhms',\n  qps: 'qps', // requests/sec (rps)\n  iops: 'iops', // I/O ops/sec (iops)\n  Hz: 'hertz', // Hertz (1/s)\n  V: 'volt', // Volt (V)\n  C: 'celsius', // Celsius (°C)\n  RPM: 'rotrpm', // Revolutions per minute (rpm)\n  dBm: 'dBm', // Decibel-milliwatt (dBm)\n});\n\nconst getKnownGrafanaUnits = () => {\n  const units = {};\n  const categories = getValueFormats();\n  for (const category of categories) {\n    for (const unitDesc of category.submenu) {\n      const unit = unitDesc.value;\n      units[unit] = unit;\n    }\n  }\n  return units;\n};\n\nconst unitsMap = getUnitsMap();\nconst knownGrafanaUnits = getKnownGrafanaUnits();\n\nexport function convertZabbixUnit(zabbixUnit: string): string {\n  let unit = unitsMap[zabbixUnit];\n  if (!unit) {\n    unit = knownGrafanaUnits[zabbixUnit];\n  }\n  return unit;\n}\n\nexport function getValueMapping(item, valueMappings: any[]): ValueMapping[] | null {\n  const { valuemapid } = item;\n  const mapping = valueMappings?.find((m) => m.valuemapid === valuemapid);\n  if (!mapping) {\n    return null;\n  }\n\n  return (mapping.mappings as any[]).map((m, i) => {\n    const valueMapping: ValueMapping = {\n      // id: i,\n      type: MappingType.ValueToText,\n      options: {\n        value: m.value,\n        text: m.newvalue,\n      },\n    };\n    return valueMapping;\n  });\n}\n\nexport function isProblemsDataFrame(data: DataFrame): boolean {\n  return (\n    data.fields.length && data.fields[0].type === FieldType.other && data.fields[0].config.custom['type'] === 'problems'\n  );\n}\n\nexport function isMacrosDataFrame(data: DataFrame): boolean {\n  return data.name === 'macros';\n}\n\nexport function nonTimeSeriesDataFrame(data: DataFrame): boolean {\n  return !data.fields.find((f) => f.type === FieldType.time || f.name === TIME_SERIES_TIME_FIELD_NAME);\n}\n\n// Swap n and k elements.\nexport function swap<T>(list: T[], n: number, k: number): T[] {\n  if (list === null || list.length < 2 || k > list.length - 1 || k < 0 || n > list.length - 1 || n < 0) {\n    return list;\n  }\n\n  const newList: T[] = new Array(list.length);\n  for (let i = 0; i < list.length; i++) {\n    if (i === n) {\n      newList[i] = list[k];\n    } else if (i === k) {\n      newList[i] = list[n];\n    } else {\n      newList[i] = list[i];\n    }\n  }\n  return newList;\n}\n","import _ from 'lodash';\nimport { ZabbixMetricsQuery } from './types';\nimport * as c from './constants';\n\nexport const DS_QUERY_SCHEMA = 12;\nexport const DS_CONFIG_SCHEMA = 3;\n\n/**\n * Query format migration.\n * This module can detect query format version and make migration.\n */\n\nexport function isGrafana2target(target) {\n  if (!target.mode || target.mode === 0 || target.mode === 2) {\n    if (\n      (target.hostFilter || target.itemFilter || target.downsampleFunction || (target.host && target.host.host)) &&\n      target.item.filter === undefined &&\n      target.host.filter === undefined\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport function migrateFrom2To3version(target: ZabbixMetricsQuery) {\n  target.group.filter = target.group.name === '*' ? '/.*/' : target.group.name;\n  target.host.filter = target.host.name === '*' ? convertToRegex(target.hostFilter) : target.host.name;\n  target.application.filter = target.application.name === '*' ? '' : target.application.name;\n  target.item.filter = target.item.name === 'All' ? convertToRegex(target.itemFilter) : target.item.name;\n  target.macro.filter = target.macro.macro === '*' ? convertToRegex(target.macroFilter) : target.macro.macro;\n  return target;\n}\n\nfunction migratePercentileAgg(target) {\n  if (target.functions) {\n    for (const f of target.functions) {\n      if (f.def && f.def.name === 'percentil') {\n        f.def.name = 'percentile';\n      }\n    }\n  }\n}\n\nfunction migrateQueryType(target) {\n  if (target.queryType === undefined) {\n    if (target.mode === 'Metrics') {\n      // Explore mode\n      target.queryType = c.MODE_METRICS;\n    } else if (target.mode !== undefined) {\n      target.queryType = target.mode;\n      delete target.mode;\n    }\n  }\n\n  // queryType is a string in query model\n  if (typeof target.queryType === 'number') {\n    target.queryType = (target.queryType as number)?.toString();\n  }\n}\n\nfunction migrateSLA(target) {\n  if (target.queryType === c.MODE_ITSERVICE && !target.slaInterval) {\n    target.slaInterval = 'none';\n  }\n}\n\nfunction migrateProblemSort(target) {\n  if (target.options?.sortProblems === 'priority') {\n    target.options.sortProblems = 'severity';\n  }\n}\n\nfunction migrateApplications(target) {\n  if (!target.itemTag) {\n    target.itemTag = { filter: '' };\n    if (target.application?.filter) {\n      target.itemTag.filter = `Application: ${target.application?.filter}`;\n    }\n  }\n}\n\nfunction migrateSLAProperty(target) {\n  if (target.slaProperty?.property) {\n    target.slaProperty = target.slaProperty?.property;\n  }\n}\n\nfunction migrateTriggersMode(target: any) {\n  if (target.triggers?.minSeverity) {\n    target.options.minSeverity = target.triggers?.minSeverity;\n    delete target.triggers.minSeverity;\n  }\n  if (target.triggers?.count) {\n    target.options.count = target.triggers?.count;\n    delete target.triggers.count;\n  }\n}\n\nfunction migrateNewTriggersCountModes(target: any) {\n  if (target.schema >= 11) {\n    return;\n  }\n  if (target.queryType === '6') {\n    target.queryType = c.MODE_TRIGGERS;\n    target.countTriggersBy = 'items';\n  } else if (target.queryType === '7') {\n    target.queryType = c.MODE_TRIGGERS;\n    target.countTriggersBy = 'problems';\n  } else if (target.queryType === '8') {\n    target.queryType = c.MODE_MACROS;\n  }\n}\n\nfunction migrateProblemsSeverity(target: any) {\n  if (target.schema >= 12) {\n    return;\n  }\n  if (target?.options?.minSeverity) {\n    target.options.severities = [0, 1, 2, 3, 4, 5].filter((v) => v >= target.options.minSeverity);\n  }\n}\n\nexport function migrate(target) {\n  target.resultFormat = target.resultFormat || 'time_series';\n  target = fixTargetGroup(target);\n  if (isGrafana2target(target)) {\n    return migrateFrom2To3version(target);\n  }\n  migratePercentileAgg(target);\n  migrateQueryType(target);\n  migrateSLA(target);\n  migrateProblemSort(target);\n  migrateApplications(target);\n  migrateSLAProperty(target);\n  migrateTriggersMode(target);\n  migrateNewTriggersCountModes(target);\n  migrateProblemsSeverity(target);\n\n  target.schema = DS_QUERY_SCHEMA;\n  return target;\n}\n\nfunction fixTargetGroup(target) {\n  if (target.group && Array.isArray(target.group)) {\n    target.group = { filter: '' };\n  }\n  return target;\n}\n\nfunction convertToRegex(str) {\n  if (str) {\n    return '/' + str + '/';\n  } else {\n    return '/.*/';\n  }\n}\n\nexport function migrateDSConfig(jsonData) {\n  if (!jsonData) {\n    jsonData = {};\n  }\n\n  if (!shouldMigrateDSConfig(jsonData)) {\n    return jsonData;\n  }\n\n  const oldVersion = jsonData.schema || 1;\n  jsonData.schema = DS_CONFIG_SCHEMA;\n\n  if (oldVersion < 2) {\n    const dbConnectionOptions = jsonData.dbConnection || {};\n    jsonData.dbConnectionEnable = dbConnectionOptions.enable || false;\n    jsonData.dbConnectionDatasourceId = dbConnectionOptions.datasourceId || null;\n    delete jsonData.dbConnection;\n  }\n\n  if (oldVersion < 3) {\n    jsonData.timeout = (jsonData.timeout as string) === '' ? null : Number(jsonData.timeout as string);\n  }\n\n  return jsonData;\n}\n\nfunction shouldMigrateDSConfig(jsonData): boolean {\n  if (jsonData.dbConnection && !_.isEmpty(jsonData.dbConnection)) {\n    return true;\n  }\n  if (jsonData.schema && jsonData.schema < DS_CONFIG_SCHEMA) {\n    return true;\n  }\n  return false;\n}\n\nconst getDefaultAnnotationTarget = (json: any) => {\n  return {\n    group: { filter: json.group ?? '' },\n    host: { filter: json.host ?? '' },\n    application: { filter: json.application ?? '' },\n    trigger: { filter: json.trigger ?? '' },\n    options: {\n      minSeverity: json.minseverity ?? 0,\n      showOkEvents: json.showOkEvents ?? false,\n      hideAcknowledged: json.hideAcknowledged ?? false,\n      showHostname: json.showHostname ?? false,\n    },\n  };\n};\n\nexport const prepareAnnotation = (json: any) => {\n  const defaultTarget = getDefaultAnnotationTarget(json);\n\n  json.target = {\n    ...defaultTarget,\n    ...json.target,\n    fromAnnotations: true,\n    options: {\n      ...defaultTarget.options!,\n      ...json.target?.options,\n    },\n  };\n\n  return json;\n};\n","import _ from 'lodash';\nimport { FuncDef } from './types';\nimport { isNumeric } from './utils';\n\nconst index = {};\nconst categories: { [key: string]: FuncDef[] } = {\n  Transform: [],\n  Aggregate: [],\n  Filter: [],\n  Trends: [],\n  Time: [],\n  Alias: [],\n  Special: [],\n};\n\nfunction addFuncDef(funcDef: FuncDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\n// Transform\n\naddFuncDef({\n  name: 'groupBy',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] },\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'float', options: [100, 0.01, 10, -1] }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{ name: 'delta', type: 'float', options: [-100, 100] }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'delta',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'rate',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int', options: [6, 10, 60, 100, 600] }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Transform',\n  params: [{ name: 'smoothing', type: 'float', options: [6, 10, 60, 100, 600] }],\n  defaultParams: [0.2],\n});\n\naddFuncDef({\n  name: 'percentile',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'percent', type: 'float', options: [25, 50, 75, 90, 95, 99, 99.9] },\n  ],\n  defaultParams: ['1m', 95],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Transform',\n  params: [{ name: 'number', type: 'float' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Transform',\n  params: [{ name: 'number', type: 'float' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{ name: 'number', type: 'float' }],\n  defaultParams: [0],\n});\n\n// Aggregate\n\naddFuncDef({\n  name: 'aggregateBy',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] },\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  category: 'Aggregate',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'percentileAgg',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'percent', type: 'float', options: [25, 50, 75, 90, 95, 99, 99.9] },\n  ],\n  defaultParams: ['1m', 95],\n});\n\n// Filter\n\naddFuncDef({\n  name: 'top',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] },\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'bottom',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] },\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'sortSeries',\n  category: 'Filter',\n  params: [{ name: 'direction', type: 'string', options: ['asc', 'desc'] }],\n  defaultParams: ['asc'],\n});\n\n// Trends\n\naddFuncDef({\n  name: 'trendValue',\n  category: 'Trends',\n  params: [{ name: 'type', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count'] }],\n  defaultParams: ['avg'],\n});\n\n// Time\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Time',\n  params: [{ name: 'interval', type: 'string', options: ['24h', '7d', '1M', '+24h', '-24h'] }],\n  defaultParams: ['24h'],\n});\n\n//Alias\n\naddFuncDef({\n  name: 'setAlias',\n  category: 'Alias',\n  params: [{ name: 'alias', type: 'string' }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'setAliasByRegex',\n  category: 'Alias',\n  params: [{ name: 'aliasByRegex', type: 'string' }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'replaceAlias',\n  category: 'Alias',\n  params: [\n    { name: 'regexp', type: 'string' },\n    { name: 'newAlias', type: 'string' },\n  ],\n  defaultParams: ['/(.*)/', '$1'],\n});\n\n// Special\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [{ name: 'type', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count'] }],\n  defaultParams: ['avg'],\n});\n\n_.each(categories, (funcList, catName) => {\n  categories[catName] = _.sortBy(funcList, 'name');\n});\n\nclass FuncInstance {\n  def: any;\n  params: any;\n  text: string;\n  added: boolean;\n\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    const func = metricFunctions[this.def.name];\n    if (func) {\n      // Bind function arguments\n      let bindedFunc = func;\n      let param;\n      for (let i = 0; i < this.params.length; i++) {\n        param = this.params[i];\n\n        // Convert numeric params\n        if (this.def.params[i].type === 'int' || this.def.params[i].type === 'float') {\n          param = Number(param);\n        }\n        bindedFunc = _.partial(bindedFunc, param);\n      }\n      return bindedFunc;\n    } else {\n      throw { message: 'Method not found ' + this.def.name };\n    }\n  }\n\n  render(metricExp) {\n    const str = this.def.name + '(';\n    const parameters = _.map(this.params, (value, index) => {\n      const paramType = this.def.params[index].type;\n      if (paramType === 'int' || paramType === 'float' || paramType === 'value_or_series' || paramType === 'boolean') {\n        return value;\n      } else if (paramType === 'int_or_interval' && isNumeric(value)) {\n        return value;\n      }\n\n      return \"'\" + value + \"'\";\n    });\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params?) {\n  if (_.isString(funcDef)) {\n    if (!index[funcDef]) {\n      throw { message: 'Method not found ' + name };\n    }\n    funcDef = index[funcDef];\n  }\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return index[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n","import _ from 'lodash';\nimport * as utils from './utils';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { DataFrame, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '@grafana/data';\n\nfunction setAlias(alias: string, frame: DataFrame) {\n  if (frame.fields?.length <= 2) {\n    const valueField = frame.fields.find((f) => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (valueField?.config?.custom?.scopedVars) {\n      alias = getTemplateSrv().replace(alias, valueField?.config?.custom?.scopedVars);\n    }\n    if (valueField) {\n      valueField.config.displayNameFromDS = alias;\n    }\n    frame.name = alias;\n    return frame;\n  }\n\n  for (let fieldIndex = 0; fieldIndex < frame.fields.length; fieldIndex++) {\n    const field = frame.fields[fieldIndex];\n    if (field.type !== FieldType.time) {\n      if (field?.config?.custom?.scopedVars) {\n        alias = getTemplateSrv().replace(alias, field?.config?.custom?.scopedVars);\n      }\n      field.config.displayNameFromDS = alias;\n    }\n  }\n  return frame;\n}\n\nfunction replaceAlias(regexp: string, newAlias: string, frame: DataFrame) {\n  let pattern: string | RegExp;\n  if (utils.isRegex(regexp)) {\n    pattern = utils.buildRegex(regexp);\n  } else {\n    pattern = regexp;\n  }\n\n  if (frame.fields?.length <= 2) {\n    let alias = frame.name.replace(pattern, newAlias);\n    const valueField = frame.fields.find((f) => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (valueField?.state?.scopedVars) {\n      alias = getTemplateSrv().replace(alias, valueField?.state?.scopedVars);\n    }\n    if (valueField) {\n      valueField.config.displayNameFromDS = alias;\n    }\n    frame.name = alias;\n    return frame;\n  }\n\n  for (const field of frame.fields) {\n    if (field.type !== FieldType.time) {\n      let alias = field.config?.displayNameFromDS?.replace(pattern, newAlias);\n      if (field?.state?.scopedVars && alias) {\n        alias = getTemplateSrv().replace(alias, field?.state?.scopedVars);\n      }\n      field.name = alias || field.name;\n    }\n  }\n  return frame;\n}\n\nfunction setAliasByRegex(alias: string, frame: DataFrame) {\n  if (frame.fields?.length <= 2) {\n    const valueField = frame.fields.find((f) => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    try {\n      if (valueField) {\n        valueField.config.displayNameFromDS = extractText(valueField.config?.displayNameFromDS, alias);\n      }\n      frame.name = extractText(frame.name, alias);\n    } catch (error: any) {\n      console.error('Failed to apply RegExp:', error?.message || error);\n    }\n    return frame;\n  }\n\n  for (const field of frame.fields) {\n    if (field.type !== FieldType.time) {\n      try {\n        field.config.displayNameFromDS = extractText(field.config?.displayNameFromDS, alias);\n      } catch (error: any) {\n        console.error('Failed to apply RegExp:', error?.message || error);\n      }\n    }\n  }\n\n  return frame;\n}\n\nfunction extractText(str: string, pattern: string) {\n  const extractPattern = new RegExp(pattern);\n  const extractedValue = extractPattern.exec(str);\n  return extractedValue[0];\n}\n\nfunction timeShift(interval, range) {\n  const shift = utils.parseTimeShiftInterval(interval) / 1000;\n  return _.map(range, (time) => {\n    return time - shift;\n  });\n}\n\nconst metricFunctions = {\n  timeShift: timeShift,\n  setAlias: setAlias,\n  setAliasByRegex: setAliasByRegex,\n  replaceAlias: replaceAlias,\n};\n\nexport default {\n  get metricFunctions() {\n    return metricFunctions;\n  },\n};\n","import _ from 'lodash';\nimport TableModel from 'grafana/app/core/table_model';\nimport * as c from './constants';\nimport * as utils from './utils';\nimport {\n  ArrayVector,\n  DataFrame,\n  dataFrameFromJSON,\n  DataFrameJSON,\n  DataQueryResponse,\n  Field,\n  FieldType,\n  getTimeField,\n  MutableDataFrame,\n  MutableField,\n  TIME_SERIES_TIME_FIELD_NAME,\n  TIME_SERIES_VALUE_FIELD_NAME,\n} from '@grafana/data';\nimport { ZabbixMetricsQuery, ZBXGroup, ZBXTrigger } from './types';\n\n/**\n * Convert Zabbix API history.get response to Grafana format\n *\n * @return {Array}            Array of timeseries in Grafana format\n *                            {\n *                               target: \"Metric name\",\n *                               datapoints: [[<value>, <unixtime>], ...]\n *                            }\n */\nfunction convertHistory(history, items, addHostName, convertPointCallback) {\n  /**\n   * Response should be in the format:\n   * data: [\n   *          {\n   *             target: \"Metric name\",\n   *             datapoints: [[<value>, <unixtime>], ...]\n   *          }, ...\n   *       ]\n   */\n\n  // Group history by itemid\n  const grouped_history = _.groupBy(history, 'itemid');\n  const hosts = _.uniqBy(_.flatten(_.map(items, 'hosts')), 'hostid'); //uniqBy is needed to deduplicate\n\n  return _.map(grouped_history, (hist, itemid) => {\n    const item = _.find(items, { itemid: itemid }) as any;\n    let alias = item.name;\n\n    // Add scopedVars for using in alias functions\n    const scopedVars: any = {\n      __zbx_item: { value: item.name },\n      __zbx_item_name: { value: item.name },\n      __zbx_item_key: { value: item.key_ },\n      __zbx_item_interval: { value: item.delay },\n    };\n\n    if (_.keys(hosts).length > 0) {\n      const host = _.find(hosts, { hostid: item.hostid });\n      scopedVars['__zbx_host'] = { value: host.host };\n      scopedVars['__zbx_host_name'] = { value: host.name };\n\n      // Only add host when multiple hosts selected\n      if (_.keys(hosts).length > 1 && addHostName) {\n        alias = host.name + ': ' + alias;\n      }\n    }\n\n    return {\n      target: alias,\n      datapoints: _.map(hist, convertPointCallback),\n      scopedVars,\n      item,\n    };\n  });\n}\n\nfunction handleMacro(macros, target): MutableDataFrame {\n  const frame = new MutableDataFrame({\n    refId: target.refId,\n    name: 'macros',\n    fields: [\n      { name: 'Host', type: FieldType.string },\n      { name: 'Macros', type: FieldType.string },\n      { name: TIME_SERIES_VALUE_FIELD_NAME, type: FieldType.string },\n    ],\n  });\n\n  for (let i = 0; i < macros.length; i++) {\n    const m = macros[i];\n    const dataRow: any = {\n      Host: m.hosts[0]!.name,\n      Macros: m.macro,\n      [TIME_SERIES_VALUE_FIELD_NAME]: m.value,\n    };\n    frame.add(dataRow);\n  }\n  return frame;\n}\n\nexport function seriesToDataFrame(\n  timeseries,\n  target: ZabbixMetricsQuery,\n  valueMappings?: any[],\n  fieldType?: FieldType\n): MutableDataFrame {\n  const { datapoints, scopedVars, target: seriesName, item } = timeseries;\n\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {},\n    },\n    values: new ArrayVector<number>(datapoints.map((p) => p[c.DATAPOINT_TS])),\n  };\n\n  let values: ArrayVector<number> | ArrayVector<string>;\n  if (fieldType === FieldType.string) {\n    values = new ArrayVector<string>(datapoints.map((p) => p[c.DATAPOINT_VALUE]));\n  } else {\n    values = new ArrayVector<number>(datapoints.map((p) => p[c.DATAPOINT_VALUE]));\n  }\n\n  const valueFiled: Field = {\n    name: TIME_SERIES_VALUE_FIELD_NAME,\n    type: fieldType ?? FieldType.number,\n    labels: {},\n    config: {\n      displayNameFromDS: seriesName,\n      custom: {},\n    },\n    values,\n  };\n\n  if (scopedVars) {\n    timeFiled.config.custom = {\n      itemInterval: scopedVars['__zbx_item_interval']?.value,\n    };\n\n    valueFiled.labels = {\n      host: scopedVars['__zbx_host_name']?.value,\n      item: scopedVars['__zbx_item']?.value,\n      item_key: scopedVars['__zbx_item_key']?.value,\n    };\n\n    valueFiled.config.custom = {\n      itemInterval: scopedVars['__zbx_item_interval']?.value,\n    };\n  }\n\n  if (item) {\n    // Try to use unit configured in Zabbix\n    const unit = utils.convertZabbixUnit(item.units);\n    if (unit) {\n      console.log(`Datasource: unit detected: ${unit} (${item.units})`);\n      valueFiled.config.unit = unit;\n\n      if (unit === 'percent') {\n        valueFiled.config.min = 0;\n        valueFiled.config.max = 100;\n      }\n    }\n\n    // Try to use value mapping from Zabbix\n    const mappings = utils.getValueMapping(item, valueMappings);\n    if (mappings && target.options?.useZabbixValueMapping) {\n      console.log(`Datasource: using Zabbix value mapping`);\n      valueFiled.config.mappings = mappings;\n    }\n  }\n\n  const fields: Field[] = [timeFiled, valueFiled];\n\n  const frame: DataFrame = {\n    name: seriesName,\n    refId: target.refId,\n    fields,\n    length: datapoints.length,\n  };\n\n  const mutableFrame = new MutableDataFrame(frame);\n  return mutableFrame;\n}\n\n// Converts DataResponse to the format which backend works with (for data processing)\nexport function dataResponseToTimeSeries(response: DataFrameJSON[], items, request) {\n  const series = [];\n  if (response.length === 0) {\n    return [];\n  }\n\n  for (const frameJSON of response) {\n    const frame = dataFrameFromJSON(frameJSON);\n    const { timeField, timeIndex } = getTimeField(frame);\n    for (let i = 0; i < frame.fields.length; i++) {\n      const field = frame.fields[i];\n      if (i === timeIndex || !field.values || !field.values.length) {\n        continue;\n      }\n\n      const s = [];\n      for (let j = 0; j < field.values.length; j++) {\n        const v = field.values.get(j);\n        if (v !== null) {\n          s.push({ time: timeField.values.get(j) / 1000, value: v });\n        }\n      }\n\n      const itemid = field.name;\n      const item = _.find(items, { itemid: itemid });\n\n      // Convert interval to nanoseconds in order to unmarshall it on the backend to time.Duration\n      let interval = request.intervalMs * 1000000;\n      const itemInterval = utils.parseItemInterval(item.delay) * 1000000;\n      // Provided interval is using for the data alignment, so it shouldn't be less than item update interval\n      interval = Math.max(interval, itemInterval);\n      if (interval === 0) {\n        interval = null;\n      }\n\n      let seriesName = item.name;\n      if (item.hosts?.length > 0) {\n        seriesName = `${item.hosts[0].name}: ${seriesName}`;\n      }\n\n      const timeSeriesData = {\n        ts: s,\n        meta: {\n          name: seriesName,\n          item,\n          interval,\n        },\n      };\n\n      series.push(timeSeriesData);\n    }\n  }\n\n  return series;\n}\n\n// Get units from Zabbix\nexport function convertZabbixUnits(response: DataQueryResponse) {\n  for (let i = 0; i < response.data.length; i++) {\n    const frame: DataFrame = response.data[i];\n    for (const field of frame.fields) {\n      const zabbixUnits = field.config.custom?.units;\n      if (zabbixUnits) {\n        const unit = utils.convertZabbixUnit(zabbixUnits);\n        if (unit) {\n          field.config.unit = unit;\n\n          if (unit === 'percent') {\n            field.config.min = 0;\n            field.config.max = 100;\n          }\n        }\n      }\n    }\n  }\n  return response;\n}\n\nexport function itServiceResponseToTimeSeries(response: any, interval) {\n  const series = [];\n  if (response.length === 0) {\n    return [];\n  }\n\n  for (const s of response) {\n    const ts = [];\n\n    if (!s.datapoints) {\n      continue;\n    }\n\n    const dp = s.datapoints;\n    for (let i = 0; i < dp.length; i++) {\n      ts.push({ time: dp[i][1] / 1000, value: dp[i][0] });\n    }\n\n    // Convert interval to nanoseconds in order to unmarshall it on the backend to time.Duration\n    let intervalNS = utils.parseItemInterval(interval) * 1000000;\n    if (intervalNS === 0) {\n      intervalNS = null;\n    }\n\n    const timeSeriesData = {\n      ts: ts,\n      meta: {\n        name: s.target,\n        interval: null,\n        item: {},\n      },\n    };\n\n    series.push(timeSeriesData);\n  }\n\n  return series;\n}\n\nexport function isConvertibleToWide(data: DataFrame[]): boolean {\n  if (!data || data.length < 2) {\n    return false;\n  }\n\n  const first = data[0].fields.find((f) => f.type === FieldType.time);\n  if (!first) {\n    return false;\n  }\n\n  for (let i = 1; i < data.length; i++) {\n    const timeField = data[i].fields.find((f) => f.type === FieldType.time);\n\n    for (let j = 0; j < Math.min(data.length, 2); j++) {\n      if (timeField.values.get(j) !== first.values.get(j)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport function alignFrames(data: MutableDataFrame[]): MutableDataFrame[] {\n  if (!data || data.length === 0) {\n    return data;\n  }\n\n  // Get oldest time stamp for all frames\n  let minTimestamp = data[0].fields.find((f) => f.name === TIME_SERIES_TIME_FIELD_NAME).values.get(0);\n  for (let i = 0; i < data.length; i++) {\n    const timeField = data[i].fields.find((f) => f.name === TIME_SERIES_TIME_FIELD_NAME);\n    const firstTs = timeField.values.get(0);\n    if (firstTs < minTimestamp) {\n      minTimestamp = firstTs;\n    }\n  }\n\n  for (let i = 0; i < data.length; i++) {\n    const frame = data[i];\n    const timeField = frame.fields.find((f) => f.name === TIME_SERIES_TIME_FIELD_NAME);\n    const valueField = frame.fields.find((f) => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    const firstTs = timeField.values.get(0);\n\n    if (firstTs > minTimestamp) {\n      console.log('Data frames: adding missing points');\n      let timestamps = timeField.values.toArray();\n      let values = valueField.values.toArray();\n      const missingTimestamps = [];\n      const missingValues = [];\n      const frameInterval: number = timeField.config.custom?.itemInterval;\n      for (let j = minTimestamp; j < firstTs; j += frameInterval) {\n        missingTimestamps.push(j);\n        missingValues.push(null);\n      }\n\n      timestamps = missingTimestamps.concat(timestamps);\n      values = missingValues.concat(values);\n      timeField.values = new ArrayVector(timestamps);\n      valueField.values = new ArrayVector(values);\n    }\n  }\n\n  return data;\n}\n\nexport function convertToWide(data: MutableDataFrame[]): DataFrame[] {\n  const maxLengthIndex = getLongestFrame(data);\n  const timeField = data[maxLengthIndex].fields.find((f) => f.type === FieldType.time);\n  if (!timeField) {\n    return [];\n  }\n\n  const fields: MutableField[] = [timeField];\n\n  for (let i = 0; i < data.length; i++) {\n    const valueField = data[i].fields.find((f) => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (!valueField) {\n      continue;\n    }\n\n    valueField.name = data[i].name;\n\n    // Add null value to the end if series is shifted by 1 time frame\n    if (timeField.values.length - valueField.values.length === 1) {\n      valueField.values.add(null);\n    }\n    fields.push(valueField);\n  }\n\n  const frame: DataFrame = {\n    name: 'wide',\n    fields,\n    length: timeField.values.length,\n  };\n\n  return [frame];\n}\n\nfunction getLongestFrame(data: MutableDataFrame[]): number {\n  let maxLengthIndex = 0;\n  let maxLength = 0;\n  for (let i = 0; i < data.length; i++) {\n    const timeField = data[i].fields.find((f) => f.type === FieldType.time);\n    if (timeField.values.length > maxLength) {\n      maxLength = timeField.values.length;\n      maxLengthIndex = i;\n    }\n  }\n\n  return maxLengthIndex;\n}\n\nfunction sortTimeseries(timeseries) {\n  // Sort trend data, issue #202\n  _.forEach(timeseries, (series) => {\n    series.datapoints = _.sortBy(series.datapoints, (point) => point[c.DATAPOINT_TS]);\n  });\n  return timeseries;\n}\n\nfunction handleHistory(history, items, addHostName = true) {\n  return convertHistory(history, items, addHostName, convertHistoryPoint);\n}\n\nfunction handleTrends(history, items, valueType, addHostName = true) {\n  const convertPointCallback = _.partial(convertTrendPoint, valueType);\n  return convertHistory(history, items, addHostName, convertPointCallback);\n}\n\nfunction handleText(history, items, target, addHostName = true) {\n  const convertTextCallback = _.partial(convertText, target);\n  return convertHistory(history, items, addHostName, convertTextCallback);\n}\n\nfunction handleHistoryAsTable(history, items, target) {\n  const table: any = new TableModel();\n  table.addColumn({ text: 'Host' });\n  table.addColumn({ text: 'Item' });\n  table.addColumn({ text: 'Key' });\n  table.addColumn({ text: 'Last value' });\n\n  const grouped_history = _.groupBy(history, 'itemid');\n  _.each(items, (item) => {\n    const itemHistory = grouped_history[item.itemid] || [];\n    const lastPoint = _.last(itemHistory);\n    let lastValue = lastPoint ? lastPoint.value : null;\n\n    if (target.options.skipEmptyValues && (!lastValue || lastValue === '')) {\n      return;\n    }\n\n    // Regex-based extractor\n    if (target.textFilter) {\n      lastValue = extractText(lastValue, target.textFilter, target.useCaptureGroups);\n    }\n\n    let host: any = _.first(item.hosts);\n    host = host ? host.name : '';\n\n    table.rows.push([host, item.name, item.key_, lastValue]);\n  });\n\n  return table;\n}\n\nfunction convertText(target, point) {\n  let value = point.value;\n\n  // Regex-based extractor\n  if (target.textFilter) {\n    value = extractText(point.value, target.textFilter, target.useCaptureGroups);\n  }\n\n  return [value, point.clock * 1000 + Math.round(point.ns / 1000000)];\n}\n\nfunction extractText(str, pattern, useCaptureGroups) {\n  const extractPattern = new RegExp(pattern);\n  const extractedValue = extractPattern.exec(str);\n  if (extractedValue) {\n    if (useCaptureGroups) {\n      return extractedValue[1];\n    } else {\n      return extractedValue[0];\n    }\n  }\n  return '';\n}\n\nexport function handleSLIResponse(response: any, itservices: any[], target: ZabbixMetricsQuery) {\n  const timestamps = [];\n  for (let i = 0; i < response?.periods?.length; i++) {\n    const period = response.periods[i];\n    timestamps.push(period.period_from * 1000);\n  }\n\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {},\n    },\n    values: new ArrayVector<number>(timestamps),\n  };\n\n  const valueFields: Field[] = [];\n  const values: number[][] = [];\n\n  let slaProperty = mapLegacySLAProperty(target.slaProperty);\n  for (let i = 0; i < response?.sli?.length; i++) {\n    const slis = response.sli[i];\n    for (let j = 0; j < slis.length; j++) {\n      const sli = slis[j];\n      const value = sli[slaProperty];\n      if (!values[j]) {\n        values[j] = [];\n      }\n      values[j].push(value);\n    }\n  }\n\n  for (let i = 0; i < response?.serviceids?.length; i++) {\n    const serviceId = response?.serviceids[i].toString();\n    const service = itservices.find((s) => s.serviceid === serviceId);\n    valueFields.push({\n      name: service ? service.name : serviceId,\n      type: FieldType.number,\n      config: {},\n      values: new ArrayVector<number>(values[i]),\n    });\n  }\n\n  return new MutableDataFrame({\n    refId: target.refId,\n    name: 'SLI',\n    fields: [timeFiled, ...valueFields],\n  });\n}\n\nfunction mapLegacySLAProperty(property: string) {\n  switch (property) {\n    case 'sla':\n      return 'sli';\n    case 'okTime':\n      return 'uptime';\n    case 'downtimeTime':\n      return 'downtime';\n    default:\n      return property;\n  }\n}\n\nexport function handleServiceResponse(response: any, itservices: any[], target: ZabbixMetricsQuery) {\n  const valueFields: Field[] = [];\n  for (let i = 0; i < response?.length; i++) {\n    const service = response[i];\n    const status = Number(service.status);\n    valueFields.push({\n      name: service ? service.name : i,\n      type: FieldType.number,\n      config: {},\n      values: new ArrayVector<number>([status]),\n    });\n  }\n\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {},\n    },\n    values: new ArrayVector<number>([Date.now()]),\n  };\n\n  return new MutableDataFrame({\n    refId: target.refId,\n    name: 'Service status',\n    fields: [timeFiled, ...valueFields],\n  });\n}\n\nexport function handleSLAResponse(itservice, slaProperty, slaObject) {\n  const targetSLA = slaObject[itservice.serviceid].sla;\n  if (slaProperty === 'status') {\n    const targetStatus = parseInt(slaObject[itservice.serviceid].status, 10);\n    return {\n      target: itservice.name + ' ' + slaProperty,\n      datapoints: [[targetStatus, targetSLA[0].to * 1000]],\n    };\n  } else {\n    let i;\n    const slaArr = [];\n    for (i = 0; i < targetSLA.length; i++) {\n      if (i === 0) {\n        slaArr.push([targetSLA[i][slaProperty], targetSLA[i].from * 1000]);\n      }\n      slaArr.push([targetSLA[i][slaProperty], targetSLA[i].to * 1000]);\n    }\n    return {\n      target: itservice.name + ' ' + slaProperty,\n      datapoints: slaArr,\n    };\n  }\n}\n\nfunction handleTriggersResponse(triggers: ZBXTrigger[], groups: ZBXGroup[], timeRange: number[], target) {\n  if (!_.isArray(triggers)) {\n    // Handling count mode\n    let triggersCount = null;\n    try {\n      triggersCount = Number(triggers);\n    } catch (err) {\n      console.log('Error when handling triggers count: ', err);\n    }\n\n    const frame = new MutableDataFrame({\n      name: `Count ${target.refId}`,\n      refId: target.refId,\n      fields: [\n        { name: TIME_SERIES_TIME_FIELD_NAME, type: FieldType.time, values: new ArrayVector([timeRange[1] * 1000]) },\n        { name: TIME_SERIES_VALUE_FIELD_NAME, type: FieldType.number, values: new ArrayVector([triggersCount]) },\n      ],\n      length: 1,\n    });\n\n    return frame;\n  } else {\n    const stats = getTriggerStats(triggers);\n    const frame = new MutableDataFrame({\n      name: `Triggers ${target.refId}`,\n      refId: target.refId,\n      fields: [{ name: 'Host group', type: FieldType.string, values: new ArrayVector() }],\n    });\n\n    for (let i = c.TRIGGER_SEVERITY.length - 1; i >= 0; i--) {\n      frame.fields.push({\n        name: c.TRIGGER_SEVERITY[i].text,\n        type: FieldType.number,\n        config: { unit: 'none', decimals: 0 },\n        values: new ArrayVector(),\n      });\n    }\n\n    const groupNames = groups?.map((g) => g.name);\n    groupNames?.forEach((group) => {\n      frame.add({\n        'Host group': group,\n        Disaster: stats[group] ? stats[group][5] : 0,\n        High: stats[group] ? stats[group][4] : 0,\n        Average: stats[group] ? stats[group][3] : 0,\n        Warning: stats[group] ? stats[group][2] : 0,\n        Information: stats[group] ? stats[group][1] : 0,\n        'Not classified': stats[group] ? stats[group][0] : 0,\n      });\n    });\n\n    return frame;\n  }\n}\n\nfunction getTriggerStats(triggers) {\n  const groups = _.uniq(_.flattenDeep(_.map(triggers, (trigger) => _.map(trigger.groups, 'name'))));\n  // let severity = _.map(c.TRIGGER_SEVERITY, 'text');\n  const stats = {};\n  _.each(groups, (group) => {\n    stats[group] = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 }; // severity:count\n  });\n  _.each(triggers, (trigger) => {\n    _.each(trigger.groups, (group) => {\n      stats[group.name][trigger.priority]++;\n    });\n  });\n  return stats;\n}\n\nfunction convertHistoryPoint(point) {\n  // Value must be a number for properly work\n  return [Number(point.value), point.clock * 1000 + Math.round(point.ns / 1000000)];\n}\n\nfunction convertTrendPoint(valueType, point) {\n  let value;\n  switch (valueType) {\n    case 'min':\n      value = point.value_min;\n      break;\n    case 'max':\n      value = point.value_max;\n      break;\n    case 'avg':\n      value = point.value_avg;\n      break;\n    case 'sum':\n      value = point.value_avg * point.num;\n      break;\n    case 'count':\n      value = point.num;\n      break;\n    default:\n      value = point.value_avg;\n  }\n\n  return [Number(value), point.clock * 1000];\n}\n\nexport default {\n  handleHistory,\n  convertHistory,\n  handleTrends,\n  handleText,\n  handleMacro,\n  handleHistoryAsTable,\n  handleSLAResponse,\n  handleTriggersResponse,\n  sortTimeseries,\n  seriesToDataFrame,\n  dataResponseToTimeSeries,\n  itServiceResponseToTimeSeries,\n  isConvertibleToWide,\n  convertToWide,\n  alignFrames,\n  convertZabbixUnits,\n};\n","import _ from 'lodash';\nimport * as utils from './utils';\nimport { DataFrame, Field, FieldType, ArrayVector, dateTime } from '@grafana/data';\nimport { ZBXProblem, ZBXTrigger, ProblemDTO, ZBXEvent, ZabbixMetricsQuery } from './types';\n\nexport function joinTriggersWithProblems(problems: ZBXProblem[], triggers: ZBXTrigger[]): ProblemDTO[] {\n  const problemDTOList: ProblemDTO[] = [];\n\n  for (let i = 0; i < problems.length; i++) {\n    const p = problems[i];\n    const triggerId = Number(p.objectid);\n    const t = triggers[triggerId];\n\n    if (t) {\n      const problemDTO: ProblemDTO = {\n        timestamp: Number(p.clock),\n        triggerid: p.objectid,\n        eventid: p.eventid,\n        name: p.name,\n        severity: p.severity,\n        acknowledged: p.acknowledged,\n        acknowledges: p.acknowledges,\n        tags: p.tags,\n        suppressed: p.suppressed,\n        suppression_data: p.suppression_data,\n        description: p.name || t.description,\n        comments: t.comments,\n        value: t.value,\n        opdata: p.opdata,\n        groups: t.groups,\n        hosts: t.hosts,\n        items: t.items,\n        alerts: t.alerts,\n        url: t.url,\n        expression: t.expression,\n        correlation_mode: t.correlation_mode,\n        correlation_tag: t.correlation_tag,\n        manual_close: t.manual_close,\n        state: t.state,\n        error: t.error,\n      };\n\n      problemDTOList.push(problemDTO);\n    }\n  }\n\n  return problemDTOList;\n}\n\ninterface JoinOptions {\n  valueFromEvent?: boolean;\n}\n\nexport function joinTriggersWithEvents(\n  events: ZBXEvent[],\n  triggers: ZBXTrigger[],\n  options?: JoinOptions\n): ProblemDTO[] {\n  const { valueFromEvent } = options;\n  const problemDTOList: ProblemDTO[] = [];\n\n  for (let i = 0; i < events.length; i++) {\n    const e = events[i];\n    const triggerId = Number(e.objectid);\n    const t = triggers[triggerId];\n\n    if (t) {\n      const problemDTO: ProblemDTO = {\n        value: valueFromEvent ? e.value : t.value,\n        timestamp: Number(e.clock),\n        triggerid: e.objectid,\n        eventid: e.eventid,\n        name: e.name,\n        severity: e.severity,\n        acknowledged: e.acknowledged,\n        acknowledges: e.acknowledges,\n        tags: e.tags,\n        suppressed: e.suppressed,\n        description: t.description,\n        comments: t.comments,\n        groups: t.groups,\n        hosts: t.hosts,\n        items: t.items,\n        alerts: t.alerts,\n        url: t.url,\n        expression: t.expression,\n        correlation_mode: t.correlation_mode,\n        correlation_tag: t.correlation_tag,\n        manual_close: t.manual_close,\n        state: t.state,\n        error: t.error,\n      };\n\n      problemDTOList.push(problemDTO);\n    }\n  }\n\n  return problemDTOList;\n}\n\nexport function setMaintenanceStatus(triggers) {\n  _.each(triggers, (trigger) => {\n    trigger.hostInMaintenance = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\n    trigger.maintenance = false;\n    if (trigger.suppressed === '1') {\n      trigger.maintenance = true;\n    }\n  });\n  return triggers;\n}\n\nexport function setAckButtonStatus(triggers, showAckButton) {\n  _.each(triggers, (trigger) => {\n    trigger.showAckButton = showAckButton;\n  });\n  return triggers;\n}\n\nexport function addTriggerDataSource(triggers, target) {\n  _.each(triggers, (trigger) => {\n    trigger.datasource = target.datasource;\n  });\n  return triggers;\n}\n\nexport function addTriggerHostProxy(triggers, proxies) {\n  triggers.forEach((trigger) => {\n    if (trigger.hosts && trigger.hosts.length) {\n      const host = trigger.hosts[0];\n      if (host.proxy_hostid !== '0') {\n        const hostProxy = proxies[host.proxy_hostid];\n        host.proxy = hostProxy ? hostProxy.host : '';\n      }\n    }\n  });\n  return triggers;\n}\n\nexport function formatAcknowledges(triggers, users) {\n  if (!users) {\n    return;\n  }\n  triggers.forEach((trigger) => {\n    if (trigger.acknowledges?.length) {\n      for (let i = 0; i < trigger.acknowledges.length; i++) {\n        const ack = trigger.acknowledges[i];\n        let userData = users[ack.userid];\n\n        // User with id 1 is Admin\n        if (!userData && ack.userid === '1') {\n          userData = {\n            username: 'Admin',\n          };\n        }\n\n        ack['user'] = userData?.username || '';\n        ack['name'] = userData?.name || '';\n        ack['surname'] = userData?.surname || '';\n\n        const ts = Number(ack.clock) * 1000;\n        if (!isNaN(ts)) {\n          ack['time'] = dateTime(ts).format('YYYY-MM-DD HH:mm:ss');\n        }\n      }\n    }\n  });\n  return triggers;\n}\n\nexport function filterTriggersPre(triggerList, replacedTarget) {\n  // Filter triggers by description\n  const triggerFilter = replacedTarget.trigger.filter;\n  if (triggerFilter) {\n    triggerList = filterTriggers(triggerList, triggerFilter);\n  }\n\n  // Filter by maintenance status\n  if (!replacedTarget.options.hostsInMaintenance) {\n    triggerList = _.filter(triggerList, (trigger) => !trigger.maintenance);\n  }\n\n  return triggerList;\n}\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, (trigger) => {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, (trigger) => {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n\nexport function sortProblems(problems: ProblemDTO[], target) {\n  if (target.options?.sortProblems === 'severity') {\n    problems = _.orderBy(problems, ['severity', 'eventid'], ['desc', 'desc']);\n  } else if (target.options?.sortProblems === 'lastchange') {\n    problems = _.orderBy(problems, ['timestamp', 'eventid'], ['desc', 'desc']);\n  }\n  return problems;\n}\n\nexport function toDataFrame(problems: any[], query: ZabbixMetricsQuery): DataFrame {\n  const problemsField: Field<any> = {\n    name: 'Problems',\n    type: FieldType.other,\n    values: new ArrayVector(problems),\n    config: {\n      custom: {\n        type: 'problems',\n      },\n    },\n  };\n\n  const response: DataFrame = {\n    name: 'problems',\n    refId: query?.refId || 'A',\n    fields: [problemsField],\n    length: problems.length,\n  };\n\n  return response;\n}\n\nconst problemsHandler = {\n  addTriggerDataSource,\n  addTriggerHostProxy,\n  formatAcknowledges,\n  setMaintenanceStatus,\n  setAckButtonStatus,\n  filterTriggersPre,\n  sortProblems,\n  toDataFrame,\n  joinTriggersWithProblems,\n  joinTriggersWithEvents,\n};\n\nexport default problemsHandler;\n","/**\n * This module allows to deduplicate function calls with the same params and\n * cache result of function call.\n */\n\nexport class CachingProxy {\n  cacheEnabled: boolean;\n  ttl: number;\n  cache: any;\n  promises: any;\n\n  constructor(cacheOptions) {\n    this.cacheEnabled = cacheOptions.enabled;\n    this.ttl = cacheOptions.ttl || 600000; // 10 minutes by default\n\n    // Internal objects for data storing\n    this.cache = {};\n    this.promises = {};\n  }\n\n  /**\n   * Check that result is present in the cache and is up to date or send request otherwise.\n   */\n  cacheRequest(func, funcName, funcScope) {\n    return cacheRequest(func, funcName, funcScope, this);\n  }\n\n  /**\n   * Wrap request to prevent multiple calls with same params when request is waiting for response.\n   */\n  proxify(func, funcName, funcScope) {\n    if (!this.promises[funcName]) {\n      this.promises[funcName] = {};\n    }\n    const promiseKeeper = this.promises[funcName];\n    return callOnce(func, promiseKeeper, funcScope);\n  }\n\n  proxifyWithCache(func, funcName, funcScope) {\n    const proxified = this.proxify(func, funcName, funcScope);\n    return this.cacheRequest(proxified, funcName, funcScope);\n  }\n\n  _isExpired(cacheObject) {\n    if (cacheObject) {\n      const object_age = Date.now() - cacheObject.timestamp;\n      return !(cacheObject.timestamp && object_age < this.ttl);\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Wrap request to prevent multiple calls\n * with same params when waiting for result.\n */\nfunction callOnce(func, promiseKeeper, funcScope) {\n  // tslint:disable-next-line: only-arrow-functions\n  return function () {\n    const hash = getRequestHash(arguments);\n    if (!promiseKeeper[hash]) {\n      promiseKeeper[hash] = Promise.resolve(\n        func\n          .apply(funcScope, arguments)\n          .then((result) => {\n            promiseKeeper[hash] = null;\n            return result;\n          })\n          .catch((err) => {\n            promiseKeeper[hash] = null;\n            throw err;\n          })\n      );\n    }\n    return promiseKeeper[hash];\n  };\n}\n\nfunction cacheRequest(func, funcName, funcScope, self) {\n  // tslint:disable-next-line: only-arrow-functions\n  return function () {\n    if (!self.cache[funcName]) {\n      self.cache[funcName] = {};\n    }\n\n    const cacheObject = self.cache[funcName];\n    const hash = getRequestHash(arguments);\n    if (self.cacheEnabled && !self._isExpired(cacheObject[hash])) {\n      return Promise.resolve(cacheObject[hash].value);\n    } else {\n      return func.apply(funcScope, arguments).then((result) => {\n        if (result !== undefined) {\n          cacheObject[hash] = {\n            value: result,\n            timestamp: Date.now(),\n          };\n        }\n        return result;\n      });\n    }\n  };\n}\n\nfunction getRequestHash(args) {\n  const argsJson = JSON.stringify(args);\n  return getHash(argsJson);\n}\n\nfunction getHash(str: string): number {\n  let hash = 0,\n    i,\n    chr,\n    len;\n  if (str.length !== 0) {\n    for (i = 0, len = str.length; i < len; i++) {\n      chr = str.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  }\n  return hash;\n}\n","import _ from 'lodash';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nexport const DEFAULT_QUERY_LIMIT = 10000;\n\nexport const HISTORY_TO_TABLE_MAP = {\n  '0': 'history',\n  '1': 'history_str',\n  '2': 'history_log',\n  '3': 'history_uint',\n  '4': 'history_text',\n};\n\nexport const TREND_TO_TABLE_MAP = {\n  '0': 'trends',\n  '3': 'trends_uint',\n};\n\nexport const consolidateByFunc = {\n  avg: 'AVG',\n  min: 'MIN',\n  max: 'MAX',\n  sum: 'SUM',\n  count: 'COUNT',\n};\n\nexport const consolidateByTrendColumns = {\n  avg: 'value_avg',\n  min: 'value_min',\n  max: 'value_max',\n  sum: 'num*value_avg', // sum of sums inside the one-hour trend period\n};\n\n/**\n * Base class for external history database connectors. Subclasses should implement `getHistory()`, `getTrends()` and\n * `testDataSource()` methods, which describe how to fetch data from source other than Zabbix API.\n */\nexport class DBConnector {\n  protected datasourceId: any;\n  private datasourceName: any;\n  protected datasourceTypeId: any;\n  // private datasourceTypeName: any;\n\n  constructor(options) {\n    this.datasourceId = options.datasourceId;\n    this.datasourceName = options.datasourceName;\n    this.datasourceTypeId = null;\n    // this.datasourceTypeName = null;\n  }\n\n  static loadDatasource(dsId, dsName) {\n    if (!dsName && dsId !== undefined) {\n      const ds = _.find(getDataSourceSrv().getList(), { id: dsId });\n      if (!ds) {\n        return Promise.reject(`Data Source with ID ${dsId} not found`);\n      }\n      dsName = ds.name;\n    }\n    if (dsName) {\n      return getDataSourceSrv().get(dsName);\n    } else {\n      return Promise.reject(`Data Source name should be specified`);\n    }\n  }\n\n  loadDBDataSource() {\n    return DBConnector.loadDatasource(this.datasourceId, this.datasourceName).then((ds) => {\n      this.datasourceTypeId = ds.meta.id;\n      // this.datasourceTypeName = ds.meta.name;\n      if (!this.datasourceName) {\n        this.datasourceName = ds.name;\n      }\n      if (!this.datasourceId) {\n        this.datasourceId = ds.id;\n      }\n      return ds;\n    });\n  }\n}\n\nexport default {\n  DBConnector,\n  DEFAULT_QUERY_LIMIT,\n  HISTORY_TO_TABLE_MAP,\n  TREND_TO_TABLE_MAP,\n  consolidateByFunc,\n  consolidateByTrendColumns,\n};\n","import _ from 'lodash';\nimport semver from 'semver';\nimport kbn from 'grafana/app/core/utils/kbn';\nimport * as utils from '../../../utils';\nimport { MIN_SLA_INTERVAL, ZBX_ACK_ACTION_ADD_MESSAGE, ZBX_ACK_ACTION_NONE } from '../../../constants';\nimport { ShowProblemTypes, ZBXProblem, ZBXTrigger } from '../../../types';\nimport { APIExecuteScriptResponse, JSONRPCError, ZBXScript } from './types';\nimport { BackendSrvRequest, getBackendSrv } from '@grafana/runtime';\nimport { rangeUtil } from '@grafana/data';\nimport { parseItemTag } from '../../../utils';\n\nconst DEFAULT_ZABBIX_VERSION = '3.0.0';\n\n// Backward compatibility. Since Grafana 7.2 roundInterval() func was moved to @grafana/data package\nconst roundInterval: (interval: number) => number = rangeUtil?.roundInterval || kbn.roundInterval || kbn.round_interval;\n\n/**\n * Zabbix API Wrapper.\n * Creates Zabbix API instance with given parameters (url, credentials and other).\n * Wraps API calls and provides high-level methods.\n */\nexport class ZabbixAPIConnector {\n  backendAPIUrl: string;\n  requestOptions: { basicAuth: any; withCredentials: boolean };\n  getTrend: (items: any, timeFrom: any, timeTill: any) => Promise<any[]>;\n  version: string;\n  getVersionPromise: Promise<string>;\n  datasourceId: number;\n\n  constructor(basicAuth: any, withCredentials: boolean, datasourceId: number) {\n    this.datasourceId = datasourceId;\n    this.backendAPIUrl = `/api/datasources/${this.datasourceId}/resources/zabbix-api`;\n\n    this.requestOptions = {\n      basicAuth: basicAuth,\n      withCredentials: withCredentials,\n    };\n\n    this.getTrend = this.getTrend_ZBXNEXT1193;\n    //getTrend = getTrend_30;\n\n    this.initVersion();\n  }\n\n  //////////////////////////\n  // Core method wrappers //\n  //////////////////////////\n\n  request(method: string, params?: any) {\n    if (!this.version) {\n      return this.initVersion().then(() => this.request(method, params));\n    }\n\n    return this.backendAPIRequest(method, params);\n  }\n\n  async backendAPIRequest(method: string, params: any = {}) {\n    const requestOptions: BackendSrvRequest = {\n      url: this.backendAPIUrl,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      hideFromInspector: false,\n      data: {\n        datasourceId: this.datasourceId,\n        method,\n        params,\n      },\n    };\n\n    // Set request options for basic auth\n    if (this.requestOptions.basicAuth || this.requestOptions.withCredentials) {\n      requestOptions.withCredentials = true;\n    }\n    if (this.requestOptions.basicAuth) {\n      requestOptions.headers.Authorization = this.requestOptions.basicAuth;\n    }\n\n    const response = await getBackendSrv().fetch<any>(requestOptions).toPromise();\n    return response?.data?.result;\n  }\n\n  /**\n   * Get Zabbix API version\n   */\n  getVersion() {\n    return this.backendAPIRequest('apiinfo.version');\n  }\n\n  initVersion(): Promise<string> {\n    if (this.version) {\n      return Promise.resolve(this.version);\n    }\n\n    if (!this.getVersionPromise) {\n      this.getVersionPromise = Promise.resolve(\n        this.getVersion().then((version) => {\n          if (version) {\n            console.log(`Zabbix version detected: ${version}`);\n          } else {\n            console.log(`Failed to detect Zabbix version, use default ${DEFAULT_ZABBIX_VERSION}`);\n          }\n\n          this.version = version || DEFAULT_ZABBIX_VERSION;\n          this.getVersionPromise = null;\n          return version;\n        })\n      );\n    }\n    return this.getVersionPromise;\n  }\n\n  isZabbix54OrHigher() {\n    return semver.gte(this.version, '5.4.0');\n  }\n\n  ////////////////////////////////\n  // Zabbix API method wrappers //\n  ////////////////////////////////\n\n  acknowledgeEvent(eventid: string, message: string, action?: number, severity?: number) {\n    if (!action) {\n      action = semver.gte(this.version, '4.0.0') ? ZBX_ACK_ACTION_ADD_MESSAGE : ZBX_ACK_ACTION_NONE;\n    }\n\n    const params: any = {\n      eventids: eventid,\n      message: message,\n      action: action,\n    };\n\n    if (severity !== undefined) {\n      params.severity = severity;\n    }\n\n    return this.request('event.acknowledge', params);\n  }\n\n  getGroups() {\n    const params = {\n      output: ['name', 'groupid'],\n      sortfield: 'name',\n      real_hosts: true,\n    };\n\n    return this.request('hostgroup.get', params);\n  }\n\n  getHosts(groupids): Promise<any[]> {\n    const params: any = {\n      output: ['hostid', 'name', 'host'],\n      sortfield: 'name',\n    };\n    if (groupids) {\n      params.groupids = groupids;\n    }\n\n    return this.request('host.get', params);\n  }\n\n  async getApps(hostids): Promise<any[]> {\n    if (this.isZabbix54OrHigher()) {\n      return [];\n    }\n\n    const params = {\n      output: 'extend',\n      hostids: hostids,\n    };\n\n    return this.request('application.get', params);\n  }\n\n  /**\n   * Get Zabbix items\n   * @param  {[type]} hostids  host ids\n   * @param  {[type]} appids   application ids\n   * @param  {String} itemtype 'num' or 'text'\n   * @return {[type]}          array of items\n   */\n  getItems(hostids, appids, itemtype, itemTagFilter?: string): Promise<any[]> {\n    const params: any = {\n      output: ['itemid', 'name', 'key_', 'value_type', 'hostid', 'status', 'state', 'units', 'valuemapid', 'delay'],\n      sortfield: 'name',\n      webitems: true,\n      filter: {},\n      selectHosts: ['hostid', 'name', 'host'],\n    };\n    if (hostids) {\n      params.hostids = hostids;\n    }\n    if (appids) {\n      params.applicationids = appids;\n    }\n    if (itemtype === 'num') {\n      // Return only numeric metrics\n      params.filter.value_type = [0, 3];\n    }\n    if (itemtype === 'text') {\n      // Return only text metrics\n      params.filter.value_type = [1, 2, 4];\n    }\n\n    if (this.isZabbix54OrHigher()) {\n      params.selectTags = 'extend';\n      if (itemTagFilter) {\n        const allTags = itemTagFilter.split(',');\n        let tagsParam = [];\n        for (let i = 0; i < allTags.length; i++) {\n          const tag = parseItemTag(allTags[i]);\n          tagsParam.push({ tag: tag.tag, value: tag.value, operator: '1' });\n        }\n        params.tags = tagsParam;\n        // Use OR eval type\n        params.evaltype = 2;\n      }\n    }\n\n    return this.request('item.get', params).then(utils.expandItems);\n  }\n\n  getItemsByIDs(itemids) {\n    const params: any = {\n      itemids: itemids,\n      output: ['itemid', 'name', 'key_', 'value_type', 'hostid', 'status', 'state', 'units', 'valuemapid', 'delay'],\n      webitems: true,\n      selectHosts: ['hostid', 'name'],\n    };\n\n    if (this.isZabbix54OrHigher()) {\n      params.selectTags = 'extend';\n    }\n\n    return this.request('item.get', params).then((items) => utils.expandItems(items));\n  }\n\n  getMacros(hostids) {\n    const params = {\n      output: 'extend',\n      hostids: hostids,\n    };\n\n    return this.request('usermacro.get', params);\n  }\n\n  getUserMacros(hostmacroids) {\n    const params = {\n      output: 'extend',\n      hostmacroids: hostmacroids,\n      selectHosts: ['hostid', 'name'],\n    };\n    return this.request('usermacro.get', params);\n  }\n\n  getGlobalMacros() {\n    const params = {\n      output: 'extend',\n      globalmacro: true,\n    };\n\n    return this.request('usermacro.get', params);\n  }\n\n  getLastValue(itemid) {\n    const params = {\n      output: ['lastvalue'],\n      itemids: itemid,\n    };\n    return this.request('item.get', params).then((items) => (items.length ? items[0].lastvalue : null));\n  }\n\n  /**\n   * Perform history query from Zabbix API\n   *\n   * @param  {Array}  items       Array of Zabbix item objects\n   * @param  {Number} timeFrom   Time in seconds\n   * @param  {Number} timeTill   Time in seconds\n   * @return {Array}  Array of Zabbix history objects\n   */\n  getHistory(items, timeFrom, timeTill) {\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const params: any = {\n        output: 'extend',\n        history: value_type,\n        itemids: itemids,\n        sortfield: 'clock',\n        sortorder: 'ASC',\n        time_from: timeFrom,\n      };\n\n      // Relative queries (e.g. last hour) don't include an end time\n      if (timeTill) {\n        params.time_till = timeTill;\n      }\n\n      return this.request('history.get', params);\n    });\n\n    return Promise.all(promises).then(_.flatten);\n  }\n\n  /**\n   * Perform trends query from Zabbix API\n   * Use trends api extension from ZBXNEXT-1193 patch.\n   *\n   * @param  {Array}  items       Array of Zabbix item objects\n   * @param  {Number} time_from   Time in seconds\n   * @param  {Number} time_till   Time in seconds\n   * @return {Array}  Array of Zabbix trend objects\n   */\n  getTrend_ZBXNEXT1193(items, timeFrom, timeTill) {\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const params: any = {\n        output: 'extend',\n        trend: value_type,\n        itemids: itemids,\n        sortfield: 'clock',\n        sortorder: 'ASC',\n        time_from: timeFrom,\n      };\n\n      // Relative queries (e.g. last hour) don't include an end time\n      if (timeTill) {\n        params.time_till = timeTill;\n      }\n\n      return this.request('trend.get', params);\n    });\n\n    return Promise.all(promises).then(_.flatten);\n  }\n\n  getTrend_30(items, time_from, time_till, value_type) {\n    const self = this;\n    const itemids = _.map(items, 'itemid');\n\n    const params: any = {\n      output: ['itemid', 'clock', value_type],\n      itemids: itemids,\n      time_from: time_from,\n    };\n\n    // Relative queries (e.g. last hour) don't include an end time\n    if (time_till) {\n      params.time_till = time_till;\n    }\n\n    return self.request('trend.get', params);\n  }\n\n  getITService(serviceids?: any[]) {\n    const params = {\n      output: 'extend',\n      serviceids: serviceids,\n    };\n    return this.request('service.get', params);\n  }\n\n  // Returns services. Non-cached method (for getting actual service status).\n  getServices(serviceids?: any[]) {\n    const params = {\n      output: 'extend',\n      serviceids: serviceids,\n    };\n    return this.request('service.get', params);\n  }\n\n  getSLAList() {\n    const params = {\n      output: 'extend',\n    };\n    return this.request('sla.get', params);\n  }\n\n  getSLA(serviceids, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    let intervals = [{ from: timeFrom, to: timeTo }];\n    if (options.slaInterval === 'auto') {\n      const interval = getSLAInterval(options.intervalMs);\n      intervals = buildSLAIntervals(timeRange, interval);\n    } else if (options.slaInterval !== 'none') {\n      const interval = utils.parseInterval(options.slaInterval) / 1000;\n      intervals = buildSLAIntervals(timeRange, interval);\n    }\n\n    const params: any = {\n      serviceids,\n      intervals,\n    };\n\n    return this.request('service.getsla', params);\n  }\n\n  async getSLA60(serviceids, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    let intervals = [{ from: timeFrom, to: timeTo }];\n    if (options.slaInterval === 'auto') {\n      const interval = getSLAInterval(options.intervalMs);\n      intervals = buildSLAIntervals(timeRange, interval);\n    } else if (options.slaInterval !== 'none') {\n      const interval = utils.parseInterval(options.slaInterval) / 1000;\n      intervals = buildSLAIntervals(timeRange, interval);\n    }\n\n    const params: any = {\n      output: 'extend',\n      serviceids,\n    };\n\n    const slaObjects = await this.request('sla.get', params);\n    if (slaObjects.length === 0) {\n      return {};\n    }\n    const sla = slaObjects[0];\n\n    // const periods = intervals.map(interval => ({\n    //   period_from: interval.from,\n    //   period_to: interval.to,\n    // }));\n    const sliParams: any = {\n      slaid: sla.slaid,\n      serviceids,\n      period_from: timeFrom,\n      period_to: timeTo,\n      periods: Math.min(intervals.length, 100),\n    };\n\n    const sliResponse = await this.request('sla.getsli', sliParams);\n    if (sliResponse.length === 0) {\n      return {};\n    }\n\n    const slaLikeResponse: any = {};\n    sliResponse.serviceids.forEach((serviceid) => {\n      slaLikeResponse[serviceid] = {\n        sla: [],\n      };\n    });\n    sliResponse.sli.forEach((sliItem, i) => {\n      sliItem.forEach((sli, j) => {\n        slaLikeResponse[sliResponse.serviceids[j]].sla.push({\n          downtimeTime: sli.downtime,\n          okTime: sli.uptime,\n          sla: sli.sli,\n          from: sliResponse.periods[i].period_from,\n          to: sliResponse.periods[i].period_to,\n        });\n      });\n    });\n    return slaLikeResponse;\n  }\n\n  async getSLI(slaid, serviceids, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    let intervals = [{ from: timeFrom, to: timeTo }];\n    if (options.slaInterval === 'auto') {\n      const interval = getSLAInterval(options.intervalMs);\n      intervals = buildSLAIntervals(timeRange, interval);\n    } else if (options.slaInterval !== 'none') {\n      const interval = utils.parseInterval(options.slaInterval) / 1000;\n      intervals = buildSLAIntervals(timeRange, interval);\n    }\n\n    const sliParams: any = {\n      slaid,\n      serviceids,\n      period_from: timeFrom,\n      period_to: timeTo,\n      periods: Math.min(intervals.length, 100),\n    };\n\n    const sliResponse = await this.request('sla.getsli', sliParams);\n    return sliResponse;\n  }\n\n  getProblems(groupids, hostids, applicationids, options): Promise<ZBXProblem[]> {\n    const { timeFrom, timeTo, recent, severities, limit, acknowledged, tags } = options;\n\n    const params: any = {\n      output: 'extend',\n      selectAcknowledges: 'extend',\n      selectSuppressionData: 'extend',\n      selectTags: 'extend',\n      source: '0',\n      object: '0',\n      sortfield: ['eventid'],\n      sortorder: 'DESC',\n      evaltype: '2',\n      // preservekeys: '1',\n      groupids,\n      hostids,\n      applicationids,\n      recent,\n    };\n\n    if (severities) {\n      params.severities = severities;\n    }\n\n    if (acknowledged !== undefined) {\n      params.acknowledged = acknowledged;\n    }\n\n    if (tags) {\n      params.tags = tags;\n    }\n\n    if (limit) {\n      params.limit = limit;\n    }\n\n    if (timeFrom || timeTo) {\n      params.time_from = timeFrom;\n      params.time_till = timeTo;\n    }\n\n    return this.request('problem.get', params).then(utils.mustArray);\n  }\n\n  getTriggersByIds(triggerids: string[]) {\n    const params: any = {\n      output: 'extend',\n      triggerids: triggerids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      expandExpression: true,\n      monitored: true,\n      skipDependent: true,\n      selectGroups: ['name', 'groupid'],\n      selectHosts: ['hostid', 'name', 'host', 'maintenance_status', 'proxy_hostid', 'description'],\n      selectItems: ['itemid', 'name', 'key_', 'lastvalue'],\n      // selectLastEvent: 'extend',\n      // selectTags: 'extend',\n      preservekeys: '1',\n    };\n\n    return this.request('trigger.get', params).then(utils.mustArray);\n  }\n\n  getTriggers(groupids, hostids, applicationids, options) {\n    const { showTriggers, maintenance, timeFrom, timeTo } = options;\n\n    const params: any = {\n      output: 'extend',\n      groupids: groupids,\n      hostids: hostids,\n      applicationids: applicationids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      //only_true: true,\n      filter: {\n        value: 1,\n      },\n      selectGroups: ['groupid', 'name'],\n      selectHosts: ['hostid', 'name', 'host', 'maintenance_status', 'proxy_hostid'],\n      selectItems: ['itemid', 'name', 'key_', 'lastvalue'],\n      selectLastEvent: 'extend',\n      selectTags: 'extend',\n    };\n\n    if (showTriggers === ShowProblemTypes.Problems) {\n      params.filter.value = 1;\n    } else if (showTriggers === ShowProblemTypes.Recent || showTriggers === ShowProblemTypes.History) {\n      params.filter.value = [0, 1];\n    }\n\n    if (maintenance) {\n      params.maintenance = true;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params);\n  }\n\n  getEvents(objectids, timeFrom, timeTo, showEvents, limit) {\n    const params: any = {\n      output: 'extend',\n      time_from: timeFrom,\n      time_till: timeTo,\n      objectids: objectids,\n      select_acknowledges: 'extend',\n      selectHosts: 'extend',\n      value: showEvents,\n    };\n\n    if (limit) {\n      params.limit = limit;\n      params.sortfield = 'clock';\n      params.sortorder = 'DESC';\n    }\n\n    return this.request('event.get', params).then(utils.mustArray);\n  }\n\n  getEventsHistory(groupids, hostids, applicationids, options) {\n    const { timeFrom, timeTo, severities, limit, value, tags } = options;\n\n    const params: any = {\n      output: 'extend',\n      time_from: timeFrom,\n      time_till: timeTo,\n      value: '1',\n      source: '0',\n      object: '0',\n      evaltype: '2',\n      sortfield: ['eventid'],\n      sortorder: 'DESC',\n      select_acknowledges: 'extend',\n      selectTags: 'extend',\n      selectSuppressionData: ['maintenanceid', 'suppress_until'],\n      groupids,\n      hostids,\n      applicationids,\n    };\n\n    if (limit) {\n      params.limit = limit;\n    }\n\n    if (severities) {\n      params.severities = severities;\n    }\n\n    if (value) {\n      params.value = value;\n    }\n\n    if (tags) {\n      params.tags = tags;\n    }\n\n    return this.request('event.get', params).then(utils.mustArray);\n  }\n\n  getExtendedEventData(eventids) {\n    const params = {\n      output: 'extend',\n      eventids: eventids,\n      preservekeys: true,\n      select_acknowledges: 'extend',\n      selectTags: 'extend',\n      sortfield: 'clock',\n      sortorder: 'DESC',\n    };\n\n    return this.request('event.get', params);\n  }\n\n  getEventAlerts(eventids) {\n    const params = {\n      eventids: eventids,\n      output: ['alertid', 'eventid', 'message', 'clock', 'error'],\n      selectUsers: true,\n    };\n\n    return this.request('alert.get', params);\n  }\n\n  getAcknowledges(eventids) {\n    const params = {\n      output: 'extend',\n      eventids: eventids,\n      preservekeys: true,\n      select_acknowledges: 'extend',\n      sortfield: 'clock',\n      sortorder: 'DESC',\n    };\n\n    return this.request('event.get', params).then((events) => {\n      return _.filter(events, (event) => event.acknowledges.length);\n    });\n  }\n\n  getAlerts(itemids, timeFrom, timeTo) {\n    const params: any = {\n      output: 'extend',\n      itemids: itemids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      //only_true: true,\n      // filter: {\n      //   value: 1\n      // },\n      selectLastEvent: 'extend',\n    };\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params);\n  }\n\n  async getHostAlerts(hostids, applicationids, options): Promise<ZBXTrigger[]> {\n    const { minSeverity, acknowledged, count, timeFrom, timeTo } = options;\n    const params: any = {\n      output: 'extend',\n      hostids: hostids,\n      min_severity: minSeverity,\n      filter: { value: 1 },\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      selectLastEvent: 'extend',\n      selectGroups: 'extend',\n      selectHosts: ['hostid', 'host', 'name'],\n    };\n\n    if (count && acknowledged !== 1) {\n      params.countOutput = true;\n      if (acknowledged === 0) {\n        params.withLastEventUnacknowledged = true;\n      }\n    }\n\n    if (applicationids && applicationids.length) {\n      params.applicationids = applicationids;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    let triggers = await this.request('trigger.get', params);\n    if (!count || acknowledged === 1) {\n      triggers = filterTriggersByAcknowledge(triggers, acknowledged);\n      if (count) {\n        triggers = triggers.length;\n      }\n    }\n    return triggers;\n  }\n\n  getHostICAlerts(hostids, applicationids, itemids, options) {\n    const { minSeverity, acknowledged, count, timeFrom, timeTo } = options;\n    const params: any = {\n      output: 'extend',\n      hostids: hostids,\n      min_severity: minSeverity,\n      filter: { value: 1 },\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      selectLastEvent: 'extend',\n      selectGroups: 'extend',\n      selectHosts: ['host', 'name'],\n      selectItems: ['name', 'key_'],\n    };\n\n    if (count && acknowledged !== 1) {\n      params.countOutput = true;\n      if (acknowledged === 0) {\n        params.withLastEventUnacknowledged = true;\n      }\n    }\n\n    if (applicationids && applicationids.length) {\n      params.applicationids = applicationids;\n    }\n\n    if (itemids && itemids.length) {\n      params.itemids = itemids;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params).then((triggers) => {\n      if (!count || acknowledged === 1) {\n        triggers = filterTriggersByAcknowledge(triggers, acknowledged);\n        if (count) {\n          triggers = triggers.length;\n        }\n      }\n      return triggers;\n    });\n  }\n\n  getHostPCAlerts(hostids, applicationids, triggerids, options) {\n    const { minSeverity, acknowledged, count, timeFrom, timeTo } = options;\n    const params: any = {\n      output: 'extend',\n      hostids: hostids,\n      triggerids: triggerids,\n      min_severity: minSeverity,\n      filter: { value: 1 },\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      selectLastEvent: 'extend',\n      selectGroups: 'extend',\n      selectHosts: ['host', 'name'],\n      selectItems: ['name', 'key_'],\n    };\n\n    if (count && acknowledged !== 0 && acknowledged !== 1) {\n      params.countOutput = true;\n    }\n\n    if (applicationids && applicationids.length) {\n      params.applicationids = applicationids;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params).then((triggers) => {\n      if (!count || acknowledged === 0 || acknowledged === 1) {\n        triggers = filterTriggersByAcknowledge(triggers, acknowledged);\n        if (count) {\n          triggers = triggers.length;\n        }\n      }\n      return triggers;\n    });\n  }\n\n  getProxies() {\n    const params = {\n      output: ['proxyid', 'host'],\n    };\n\n    return this.request('proxy.get', params);\n  }\n\n  getScripts(hostids: string[], options?: any): Promise<ZBXScript[]> {\n    const params: any = {\n      output: 'extend',\n      hostids,\n    };\n\n    return this.request('script.get', params).then(utils.mustArray);\n  }\n\n  executeScript(hostid: string, scriptid: string): Promise<APIExecuteScriptResponse> {\n    const params: any = {\n      hostid,\n      scriptid,\n    };\n\n    return this.request('script.execute', params);\n  }\n\n  getValueMappings() {\n    const params = {\n      output: 'extend',\n      selectMappings: 'extend',\n    };\n\n    return this.request('valuemap.get', params);\n  }\n\n  getUsers() {\n    const params = {\n      output: ['userid', 'username', 'name', 'surname'],\n    };\n\n    return this.request('user.get', params);\n  }\n}\n\nfunction filterTriggersByAcknowledge(triggers, acknowledged) {\n  if (acknowledged === 0) {\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === '0');\n  } else if (acknowledged === 1) {\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === '1');\n  } else {\n    return triggers;\n  }\n}\n\nfunction getSLAInterval(intervalMs) {\n  // Too many intervals may cause significant load on the database, so decrease number of resulting points\n  const resolutionRatio = 100;\n  const interval = roundInterval(intervalMs * resolutionRatio) / 1000;\n  return Math.max(interval, MIN_SLA_INTERVAL);\n}\n\nfunction buildSLAIntervals(timeRange, interval) {\n  let [timeFrom, timeTo] = timeRange;\n  const intervals = [];\n\n  // Align time range with calculated interval\n  timeFrom = Math.floor(timeFrom / interval) * interval;\n  timeTo = Math.ceil(timeTo / interval) * interval;\n\n  for (let i = timeFrom; i <= timeTo - interval; i += interval) {\n    intervals.push({\n      from: i,\n      to: i + interval,\n    });\n  }\n\n  return intervals;\n}\n\n// Define zabbix API exception type\nexport class ZabbixAPIError {\n  code: number;\n  name: string;\n  data: string;\n  message: string;\n\n  constructor(error: JSONRPCError) {\n    this.code = error.code || null;\n    this.name = error.message || '';\n    this.data = error.data || '';\n    this.message = 'Zabbix API Error: ' + this.name + ' ' + this.data;\n  }\n\n  toString() {\n    return this.name + ' ' + this.data;\n  }\n}\n","/**\n * MySQL queries\n */\n\nfunction historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction) {\n  const time_expression = `clock DIV ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT CAST(itemid AS CHAR) AS metric, ${time_expression} AS time_sec, ${aggFunction}(value) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY ${time_expression}, metric\n      ORDER BY time_sec ASC\n  `;\n}\n\nfunction trendsQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction, valueColumn) {\n  const time_expression = `clock DIV ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT CAST(itemid AS CHAR) AS metric, ${time_expression} AS time_sec, ${aggFunction}(${valueColumn}) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY ${time_expression}, metric\n      ORDER BY time_sec ASC\n  `;\n}\n\nfunction testQuery() {\n  return `SELECT CAST(itemid AS CHAR) AS metric, clock AS time_sec, value_avg AS value\n          FROM trends_uint LIMIT 1`;\n}\n\nconst mysql = {\n  historyQuery,\n  trendsQuery,\n  testQuery,\n};\n\nexport default mysql;\n","/**\n * Postgres queries\n */\n\nconst ITEMID_FORMAT = 'FM99999999999999999999';\n\nfunction historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction) {\n  const time_expression = `clock / ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, ${time_expression} AS time, ${aggFunction}(value) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY 1, 2\n      ORDER BY time ASC\n  `;\n}\n\nfunction trendsQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction, valueColumn) {\n  const time_expression = `clock / ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, ${time_expression} AS time, ${aggFunction}(${valueColumn}) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY 1, 2\n      ORDER BY time ASC\n  `;\n}\n\nconst TEST_QUERY = `\n    SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, clock AS time, value_avg AS value\n    FROM trends_uint LIMIT 1\n`;\n\nfunction testQuery() {\n  return TEST_QUERY;\n}\n\nconst postgres = {\n  historyQuery,\n  trendsQuery,\n  testQuery,\n};\n\nexport default postgres;\n","import _ from 'lodash';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { compactQuery } from '../../../utils';\nimport mysql from './mysql';\nimport postgres from './postgres';\nimport dbConnector, {\n  DBConnector,\n  DEFAULT_QUERY_LIMIT,\n  HISTORY_TO_TABLE_MAP,\n  TREND_TO_TABLE_MAP,\n} from '../dbConnector';\n\nconst supportedDatabases = {\n  mysql: 'mysql',\n  postgres: 'postgres',\n};\n\nexport class SQLConnector extends DBConnector {\n  private limit: number;\n  private sqlDialect: any;\n\n  constructor(options) {\n    super(options);\n\n    this.limit = options.limit || DEFAULT_QUERY_LIMIT;\n    this.sqlDialect = null;\n\n    super.loadDBDataSource().then(() => {\n      this.loadSQLDialect();\n    });\n  }\n\n  loadSQLDialect() {\n    if (this.datasourceTypeId === supportedDatabases.postgres) {\n      this.sqlDialect = postgres;\n    } else {\n      this.sqlDialect = mysql;\n    }\n  }\n\n  /**\n   * Try to invoke test query for one of Zabbix database tables.\n   */\n  testDataSource() {\n    const testQuery = this.sqlDialect.testQuery();\n    return this.invokeSQLQuery(testQuery);\n  }\n\n  getHistory(items, timeFrom, timeTill, options) {\n    const { aggFunction, intervalSec } = getAggFunc(timeFrom, timeTill, options);\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid').join(', ');\n      const table = HISTORY_TO_TABLE_MAP[value_type];\n      let query = this.sqlDialect.historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction);\n\n      query = compactQuery(query);\n      return this.invokeSQLQuery(query);\n    });\n\n    return Promise.all(promises).then((results) => {\n      return _.flatten(results);\n    });\n  }\n\n  getTrends(items, timeFrom, timeTill, options) {\n    const { consolidateBy } = options;\n    const { aggFunction, intervalSec } = getAggFunc(timeFrom, timeTill, options);\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid').join(', ');\n      const table = TREND_TO_TABLE_MAP[value_type];\n      let valueColumn = _.includes(['avg', 'min', 'max', 'sum'], consolidateBy) ? consolidateBy : 'avg';\n      valueColumn = dbConnector.consolidateByTrendColumns[valueColumn];\n      let query = this.sqlDialect.trendsQuery(\n        itemids,\n        table,\n        timeFrom,\n        timeTill,\n        intervalSec,\n        aggFunction,\n        valueColumn\n      );\n\n      query = compactQuery(query);\n      return this.invokeSQLQuery(query);\n    });\n\n    return Promise.all(promises).then((results) => {\n      return _.flatten(results);\n    });\n  }\n\n  invokeSQLQuery(query) {\n    const queryDef = {\n      refId: 'A',\n      format: 'time_series',\n      datasourceId: this.datasourceId,\n      rawSql: query,\n      maxDataPoints: this.limit,\n    };\n\n    return getBackendSrv()\n      .datasourceRequest({\n        url: '/api/ds/query',\n        method: 'POST',\n        data: {\n          queries: [queryDef],\n        },\n      })\n      .then((response) => {\n        const results = response.data.results;\n        if (results['A']) {\n          return results['A'].frames;\n        } else {\n          return null;\n        }\n      });\n  }\n}\n\nfunction getAggFunc(timeFrom, timeTill, options) {\n  const { intervalMs } = options;\n  let { consolidateBy } = options;\n  let intervalSec = Math.ceil(intervalMs / 1000);\n\n  // The interval must match the time range exactly n times, otherwise\n  // the resulting first and last data points will yield invalid values in the\n  // calculated average value in downsampleSeries - when using consolidateBy(avg)\n  const numOfIntervals = Math.ceil((timeTill - timeFrom) / intervalSec);\n  intervalSec = Math.ceil((timeTill - timeFrom) / numOfIntervals);\n\n  consolidateBy = consolidateBy || 'avg';\n  const aggFunction = dbConnector.consolidateByFunc[consolidateBy];\n  return { aggFunction, intervalSec };\n}\n","import {\n  ArrayVector,\n  DataFrame,\n  dataFrameToJSON,\n  Field,\n  FieldType,\n  MutableDataFrame,\n  TIME_SERIES_TIME_FIELD_NAME,\n} from '@grafana/data';\nimport _ from 'lodash';\nimport { compactQuery } from '../../../utils';\nimport { consolidateByTrendColumns, DBConnector, HISTORY_TO_TABLE_MAP } from '../dbConnector';\n\nconst consolidateByFunc = {\n  avg: 'MEAN',\n  min: 'MIN',\n  max: 'MAX',\n  sum: 'SUM',\n  count: 'COUNT',\n};\n\nexport class InfluxDBConnector extends DBConnector {\n  private retentionPolicy: any;\n  private influxDS: any;\n\n  constructor(options) {\n    super(options);\n    this.retentionPolicy = options.retentionPolicy;\n    super.loadDBDataSource().then((ds) => {\n      this.influxDS = ds;\n      return ds;\n    });\n  }\n\n  /**\n   * Try to invoke test query for one of Zabbix database tables.\n   */\n  testDataSource() {\n    return this.influxDS.testDatasource().then((result) => {\n      if (result.status && result.status === 'error') {\n        return Promise.reject({\n          data: {\n            message: `InfluxDB connection error: ${result.message}`,\n          },\n        });\n      }\n      return result;\n    });\n  }\n\n  getHistory(items, timeFrom, timeTill, options) {\n    const { intervalMs, retentionPolicy } = options;\n    let { consolidateBy } = options;\n    const intervalSec = Math.ceil(intervalMs / 1000);\n\n    const range = { timeFrom, timeTill };\n    consolidateBy = consolidateBy || 'avg';\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const table = HISTORY_TO_TABLE_MAP[value_type];\n      const query = this.buildHistoryQuery(itemids, table, range, intervalSec, consolidateBy, retentionPolicy);\n      return this.invokeInfluxDBQuery(query);\n    });\n\n    return Promise.all(promises)\n      .then(_.flatten)\n      .then((results) => {\n        return handleInfluxHistoryResponse(results);\n      });\n  }\n\n  getTrends(items, timeFrom, timeTill, options) {\n    options.retentionPolicy = this.retentionPolicy;\n    return this.getHistory(items, timeFrom, timeTill, options);\n  }\n\n  buildHistoryQuery(itemids, table, range, intervalSec, aggFunction, retentionPolicy) {\n    const { timeFrom, timeTill } = range;\n    const measurement = retentionPolicy ? `\"${retentionPolicy}\".\"${table}\"` : `\"${table}\"`;\n    let value = 'value';\n    if (retentionPolicy) {\n      value = consolidateByTrendColumns[aggFunction] || 'value_avg';\n    }\n    const aggregation = consolidateByFunc[aggFunction] || aggFunction;\n    const where_clause = this.buildWhereClause(itemids);\n    const query = `SELECT ${aggregation}(\"${value}\")\n                   FROM ${measurement}\n                   WHERE ${where_clause}\n                     AND \"time\" >= ${timeFrom}s\n                     AND \"time\" <= ${timeTill}s\n                   GROUP BY time(${intervalSec}s), \"itemid\" fill(none)`;\n    return compactQuery(query);\n  }\n\n  buildWhereClause(itemids) {\n    const itemidsWhere = itemids.map((itemid) => `\"itemid\" = '${itemid}'`).join(' OR ');\n    return `(${itemidsWhere})`;\n  }\n\n  async invokeInfluxDBQuery(query) {\n    const data = await this.influxDS._seriesQuery(query).toPromise();\n    return data?.results || [];\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nfunction handleInfluxHistoryResponse(results) {\n  if (!results) {\n    return [];\n  }\n\n  const frames: DataFrame[] = [];\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n\n    if (result.error) {\n      const error = `InfluxDB error: ${result.error}`;\n      return Promise.reject(new Error(error));\n    }\n\n    if (!result || !result.series) {\n      continue;\n    }\n\n    const influxSeriesList = results[i].series;\n\n    for (let y = 0; y < influxSeriesList.length; y++) {\n      const influxSeries = influxSeriesList[y];\n      const tsBuffer = [];\n      const valuesBuffer = [];\n      if (influxSeries.values) {\n        for (i = 0; i < influxSeries.values.length; i++) {\n          tsBuffer.push(influxSeries.values[i][0]);\n          valuesBuffer.push(influxSeries.values[i][1]);\n        }\n      }\n      const timeFiled: Field<number> = {\n        name: TIME_SERIES_TIME_FIELD_NAME,\n        type: FieldType.time,\n        config: {},\n        values: new ArrayVector(tsBuffer),\n      };\n\n      const valueFiled: Field<number | null> = {\n        name: influxSeries?.tags?.itemid,\n        type: FieldType.number,\n        config: {},\n        values: new ArrayVector(valuesBuffer),\n      };\n\n      frames.push(\n        new MutableDataFrame({\n          name: influxSeries?.tags?.itemid,\n          fields: [timeFiled, valueFiled],\n        })\n      );\n    }\n  }\n\n  return frames.map((f) => dataFrameToJSON(f));\n}\n","import _ from 'lodash';\n// eslint-disable-next-line\nimport moment from 'moment';\nimport semver from 'semver';\nimport * as utils from '../utils';\nimport responseHandler, { handleServiceResponse, handleSLIResponse } from '../responseHandler';\nimport { CachingProxy } from './proxy/cachingProxy';\nimport { DBConnector } from './connectors/dbConnector';\nimport { ZabbixAPIConnector } from './connectors/zabbix_api/zabbixAPIConnector';\nimport { SQLConnector } from './connectors/sql/sqlConnector';\nimport { InfluxDBConnector } from './connectors/influxdb/influxdbConnector';\nimport { ZabbixConnector } from './types';\nimport { joinTriggersWithEvents, joinTriggersWithProblems } from '../problemsHandler';\nimport { ProblemDTO, ZBXApp, ZBXHost, ZBXItem, ZBXItemTag, ZBXTrigger, ZabbixMetricsQuery } from '../types';\n\ninterface AppsResponse extends Array<any> {\n  appFilterEmpty?: boolean;\n  hostids?: any[];\n}\n\nconst REQUESTS_TO_PROXYFY = [\n  'getHistory',\n  'getTrend',\n  'getGroups',\n  'getHosts',\n  'getApps',\n  'getItems',\n  'getMacros',\n  'getUMacros',\n  'getItemsByIDs',\n  'getEvents',\n  'getAlerts',\n  'getHostAlerts',\n  'getUserMacros',\n  'getHostICAlerts',\n  'getHostPCAlerts',\n  'getAcknowledges',\n  'getITService',\n  'getSLA',\n  'getVersion',\n  'getProxies',\n  'getEventAlerts',\n  'getExtendedEventData',\n  'getProblems',\n  'getEventsHistory',\n  'getTriggersByIds',\n  'getScripts',\n  'getValueMappings',\n  'getSLAList',\n  'getUsers',\n];\n\nconst REQUESTS_TO_CACHE = [\n  'getGroups',\n  'getHosts',\n  'getApps',\n  'getItems',\n  'getMacros',\n  'getUMacros',\n  'getItemsByIDs',\n  'getITService',\n  'getProxies',\n  'getValueMappings',\n  'getSLAList',\n  'getUsers',\n];\n\nconst REQUESTS_TO_BIND = [\n  'getHistory',\n  'getTrend',\n  'getMacros',\n  'getItemsByIDs',\n  'getEvents',\n  'getAlerts',\n  'getHostAlerts',\n  'getUserMacros',\n  'getHostICAlerts',\n  'getHostPCAlerts',\n  'getAcknowledges',\n  'getITService',\n  'acknowledgeEvent',\n  'getProxies',\n  'getEventAlerts',\n  'getExtendedEventData',\n  'getScripts',\n  'executeScript',\n  'getValueMappings',\n  'getSLAList',\n  'getUsers',\n];\n\nexport class Zabbix implements ZabbixConnector {\n  enableDirectDBConnection: boolean;\n  cachingProxy: CachingProxy;\n  zabbixAPI: ZabbixAPIConnector;\n  getHistoryDB: any;\n  dbConnector: any;\n  getTrendsDB: any;\n  version: string;\n\n  getHistory: (items, timeFrom, timeTill) => Promise<any>;\n  getTrend: (items, timeFrom, timeTill) => Promise<any>;\n  getItemsByIDs: (itemids) => Promise<any>;\n  getEvents: (objectids, timeFrom, timeTo, showEvents, limit?) => Promise<any>;\n  getAlerts: (itemids, timeFrom?, timeTo?) => Promise<any>;\n  getHostAlerts: (hostids, applicationids, options?) => Promise<ZBXTrigger[]>;\n  getHostICAlerts: (hostids, applicationids, itemids, options?) => Promise<any>;\n  getHostPCAlerts: (hostids, applicationids, triggerids, options?) => Promise<any>;\n  getAcknowledges: (eventids) => Promise<any>;\n  getITService: (serviceids?) => Promise<any>;\n  acknowledgeEvent: (eventid, message) => Promise<any>;\n  getProxies: () => Promise<any>;\n  getEventAlerts: (eventids) => Promise<any>;\n  getExtendedEventData: (eventids) => Promise<any>;\n  getMacros: (hostids: any[]) => Promise<any>;\n  getUserMacros: (hostmacroids) => Promise<any>;\n  getValueMappings: () => Promise<any>;\n  getSLAList: () => Promise<any>;\n  getUsers: () => Promise<any>;\n\n  constructor(options) {\n    const {\n      basicAuth,\n      withCredentials,\n      cacheTTL,\n      enableDirectDBConnection,\n      dbConnectionDatasourceId,\n      dbConnectionDatasourceName,\n      dbConnectionRetentionPolicy,\n      datasourceId,\n    } = options;\n\n    this.enableDirectDBConnection = enableDirectDBConnection;\n\n    // Initialize caching proxy for requests\n    const cacheOptions = {\n      enabled: true,\n      ttl: cacheTTL,\n    };\n    this.cachingProxy = new CachingProxy(cacheOptions);\n\n    this.zabbixAPI = new ZabbixAPIConnector(basicAuth, withCredentials, datasourceId);\n\n    this.proxifyRequests();\n    this.cacheRequests();\n    this.bindRequests();\n\n    if (enableDirectDBConnection) {\n      const connectorOptions: any = { dbConnectionRetentionPolicy };\n      this.initDBConnector(dbConnectionDatasourceId, dbConnectionDatasourceName, connectorOptions).then(() => {\n        this.getHistoryDB = this.cachingProxy.proxifyWithCache(\n          this.dbConnector.getHistory,\n          'getHistory',\n          this.dbConnector\n        );\n        this.getTrendsDB = this.cachingProxy.proxifyWithCache(\n          this.dbConnector.getTrends,\n          'getTrends',\n          this.dbConnector\n        );\n      });\n    }\n  }\n\n  initDBConnector(datasourceId, datasourceName, options) {\n    return DBConnector.loadDatasource(datasourceId, datasourceName).then((ds) => {\n      const connectorOptions: any = { datasourceId, datasourceName };\n      if (ds.type === 'influxdb') {\n        connectorOptions.retentionPolicy = options.dbConnectionRetentionPolicy;\n        this.dbConnector = new InfluxDBConnector(connectorOptions);\n      } else {\n        this.dbConnector = new SQLConnector(connectorOptions);\n      }\n      return this.dbConnector;\n    });\n  }\n\n  proxifyRequests() {\n    for (const request of REQUESTS_TO_PROXYFY) {\n      this.zabbixAPI[request] = this.cachingProxy.proxify(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  cacheRequests() {\n    for (const request of REQUESTS_TO_CACHE) {\n      this.zabbixAPI[request] = this.cachingProxy.cacheRequest(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  bindRequests() {\n    for (const request of REQUESTS_TO_BIND) {\n      this[request] = this.zabbixAPI[request].bind(this.zabbixAPI);\n    }\n  }\n\n  /**\n   * Perform test query for Zabbix API and external history DB.\n   * @return {object} test result object:\n   * ```\n   *    {\n   *      zabbixVersion,\n   *      dbConnectorStatus: {\n   *        dsType,\n   *        dsName\n   *      }\n   *    }\n   * ```\n   */\n  testDataSource() {\n    let zabbixVersion;\n    let dbConnectorStatus;\n    return this.getVersion()\n      .then((version) => {\n        zabbixVersion = version;\n        return this.getAllGroups();\n      })\n      .then(() => {\n        if (this.enableDirectDBConnection) {\n          return this.dbConnector.testDataSource();\n        } else {\n          return Promise.resolve();\n        }\n      })\n      .catch((error) => {\n        return Promise.reject(error);\n      })\n      .then((testResult) => {\n        if (testResult) {\n          dbConnectorStatus = {\n            dsType: this.dbConnector.datasourceTypeName || this.dbConnector.datasourceTypeId,\n            dsName: this.dbConnector.datasourceName,\n          };\n        }\n        return { zabbixVersion, dbConnectorStatus };\n      });\n  }\n\n  async getVersion() {\n    if (!this.version) {\n      if (this.zabbixAPI.version) {\n        this.version = this.zabbixAPI.version;\n      } else {\n        this.version = await this.zabbixAPI.initVersion();\n      }\n    }\n    return this.version;\n  }\n\n  supportsApplications() {\n    const version = this.version || this.zabbixAPI.version;\n    return version ? semver.lt(version, '5.4.0') : true;\n  }\n\n  supportSLA() {\n    const version = this.version || this.zabbixAPI.version;\n    return version ? semver.gte(version, '6.0.0') : true;\n  }\n\n  async isZabbix54OrHigher() {\n    const version = await this.zabbixAPI.initVersion();\n    return version ? semver.gte(version, '5.4.0') : false;\n  }\n\n  isZabbix54OrHigherSync() {\n    return this.version ? semver.gte(this.version, '5.4.0') : false;\n  }\n\n  getItemsFromTarget(target, options) {\n    const parts = ['group', 'host', 'application', 'itemTag', 'item'];\n    const filters = _.map(parts, (p) => target[p].filter);\n    return this.getItems(...filters, options);\n  }\n\n  getMacrosFromTarget(target) {\n    const parts = ['group', 'host', 'macro'];\n    const filters = _.map(parts, (p) => target[p].filter);\n    return this.getUMacros(...filters);\n  }\n\n  async getHostsApsFromTarget(target): Promise<[ZBXHost[], ZBXApp[]]> {\n    const parts = ['group', 'host', 'application'];\n    const filters = parts.map((p) => target[p].filter);\n    const results = await Promise.all([this.getHosts(...filters), this.getApps(...filters)]);\n    const hosts = results[0];\n    let apps: AppsResponse = results[1];\n    if (apps.appFilterEmpty) {\n      apps = [];\n    }\n    return [hosts, apps];\n  }\n\n  async getHostsFromICTarget(target, options): Promise<[ZBXHost[], ZBXApp[], ZBXItem[]]> {\n    const parts = ['group', 'host', 'application', 'itemTag', 'item'];\n    const filters = parts.map((p) => target[p].filter);\n    const [hosts, apps] = await this.getHostsApsFromTarget(target);\n    const items = await this.getItems(...filters, options);\n    return [hosts, apps, items];\n  }\n\n  async getHostsFromPCTarget(target, options): Promise<[ZBXHost[], ZBXApp[], ProblemDTO[]]> {\n    const parts = ['group', 'host', 'application', 'proxy', 'trigger'];\n    const filters = parts.map((p) => target[p].filter);\n    const [hosts, apps] = await this.getHostsApsFromTarget(target);\n    const problems = await this.getCProblems(...filters, options);\n    return [hosts, apps, problems];\n  }\n\n  getAllGroups() {\n    return this.zabbixAPI.getGroups();\n  }\n\n  getGroups(groupFilter): Promise<any[]> {\n    return this.getAllGroups().then((groups) => findByFilter(groups, groupFilter));\n  }\n\n  /**\n   * Get list of host belonging to given groups.\n   */\n  getAllHosts(groupFilter): Promise<any[]> {\n    return this.getGroups(groupFilter).then((groups) => {\n      const groupids = _.map(groups, 'groupid');\n      return this.zabbixAPI.getHosts(groupids);\n    });\n  }\n\n  getHosts(groupFilter?, hostFilter?): Promise<any[]> {\n    return this.getAllHosts(groupFilter).then((hosts) => findByFilter(hosts, hostFilter));\n  }\n\n  /**\n   * Get list of applications belonging to given groups and hosts.\n   */\n  async getAllApps(groupFilter, hostFilter): Promise<any[]> {\n    await this.getVersion();\n    if (!this.supportsApplications()) {\n      return [];\n    }\n\n    return this.getHosts(groupFilter, hostFilter).then((hosts) => {\n      const hostids = _.map(hosts, 'hostid');\n      return this.zabbixAPI.getApps(hostids);\n    });\n  }\n\n  async getApps(groupFilter?, hostFilter?, appFilter?): Promise<AppsResponse> {\n    await this.getVersion();\n    const skipAppFilter = !this.supportsApplications();\n\n    return this.getHosts(groupFilter, hostFilter).then((hosts) => {\n      const hostids = _.map(hosts, 'hostid');\n      if (appFilter && !skipAppFilter) {\n        return this.zabbixAPI.getApps(hostids).then((apps) => filterByQuery(apps, appFilter));\n      } else {\n        const appsResponse: AppsResponse = hostids;\n        appsResponse.hostids = hostids;\n        appsResponse.appFilterEmpty = true;\n        return Promise.resolve(appsResponse);\n      }\n    });\n  }\n\n  async getAllMacros(groupFilter, hostFilter) {\n    const hosts = await this.getHosts(groupFilter, hostFilter);\n    const hostids = hosts?.map((h) => h.hostid);\n    return this.zabbixAPI.getMacros(hostids);\n  }\n\n  async getUMacros(groupFilter?, hostFilter?, macroFilter?) {\n    const allMacros = await this.getAllMacros(groupFilter, hostFilter);\n    return filterByMQuery(allMacros, macroFilter);\n  }\n\n  async getItemTags(groupFilter?, hostFilter?, itemTagFilter?) {\n    const items = await this.getAllItems(groupFilter, hostFilter, null, null, {});\n    let tags: ZBXItemTag[] = _.flatten(\n      items.map((item: ZBXItem) => {\n        if (item.tags) {\n          return item.tags;\n        } else {\n          return [];\n        }\n      })\n    );\n    tags = _.uniqBy(tags, (t) => t.tag + t.value || '');\n    const tagsStr = tags.map((t) => ({ name: utils.itemTagToString(t) }));\n    return findByFilter(tagsStr, itemTagFilter);\n  }\n\n  async getAllItems(\n    groupFilter: string,\n    hostFilter: string,\n    appFilter: string,\n    itemTagFilter: string,\n    options: any = {}\n  ): Promise<any[]> {\n    if (!this.isZabbix54OrHigher()) {\n      return this.getAllItemsBefore54(groupFilter, hostFilter, appFilter, itemTagFilter, options);\n    }\n\n    const hosts = await this.getHosts(groupFilter, hostFilter);\n    const hostids = _.map(hosts, 'hostid');\n\n    // Support regexp in tags\n    if (utils.isRegex(itemTagFilter)) {\n      const tags = await this.getItemTags(groupFilter, hostFilter, itemTagFilter);\n      itemTagFilter = tags.map((t) => t.name).join(',');\n    }\n\n    let items = await this.zabbixAPI.getItems(hostids, undefined, options.itemtype, itemTagFilter);\n\n    if (!options.showDisabledItems) {\n      items = _.filter(items, { status: '0' });\n    }\n\n    return await this.expandUserMacro(items, false);\n  }\n\n  async getAllItemsBefore54(groupFilter, hostFilter, appFilter, itemTagFilter, options: any = {}) {\n    const apps = await this.getApps(groupFilter, hostFilter, appFilter);\n    let items: any[];\n\n    if (apps.appFilterEmpty) {\n      items = await this.zabbixAPI.getItems(apps.hostids, undefined, options.itemtype, undefined);\n    } else {\n      const appids = _.map(apps, 'applicationid');\n      items = await this.zabbixAPI.getItems(undefined, appids, options.itemtype, undefined);\n    }\n\n    if (!options.showDisabledItems) {\n      items = _.filter(items, { status: '0' });\n    }\n\n    return await this.expandUserMacro(items, false);\n  }\n\n  expandUserMacro(items, isTriggerItem) {\n    const hostids = getHostIds(items);\n    return this.getMacros(hostids).then((macros) => {\n      _.forEach(items, (item) => {\n        if (utils.containsMacro(isTriggerItem ? item.url : item.name)) {\n          if (isTriggerItem) {\n            item.url = utils.replaceMacro(item, macros, isTriggerItem);\n          } else {\n            item.name = utils.replaceMacro(item, macros);\n          }\n        }\n      });\n      return items;\n    });\n  }\n\n  getItems(groupFilter?, hostFilter?, appFilter?, itemTagFilter?, itemFilter?, options = {}) {\n    return this.getAllItems(groupFilter, hostFilter, appFilter, itemTagFilter, options).then((items) =>\n      filterByQuery(items, itemFilter)\n    );\n  }\n\n  getItemValues(groupFilter?, hostFilter?, appFilter?, itemFilter?, options: any = {}) {\n    return this.getItems(groupFilter, hostFilter, appFilter, null, itemFilter, options).then((items) => {\n      let timeRange = [moment().subtract(2, 'h').unix(), moment().unix()];\n      if (options.range) {\n        timeRange = [options.range.from.unix(), options.range.to.unix()];\n      }\n      const [timeFrom, timeTo] = timeRange;\n\n      return this.zabbixAPI.getHistory(items, timeFrom, timeTo).then((history) => {\n        if (history) {\n          const values = _.uniq(history.map((v) => v.value));\n          return values.map((value) => ({ name: value }));\n        } else {\n          return [];\n        }\n      });\n    });\n  }\n\n  async getITServices(itServiceFilter: string) {\n    const itServices = await this.zabbixAPI.getITService();\n    return findByFilter(itServices, itServiceFilter);\n  }\n\n  async getSLAs(slaFilter: string) {\n    const slas = await this.zabbixAPI.getSLAList();\n    return findByFilter(slas, slaFilter);\n  }\n\n  getProblems(groupFilter, hostFilter, appFilter, proxyFilter?, options?): Promise<ProblemDTO[]> {\n    const promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter),\n    ];\n\n    return Promise.all(promises)\n      .then((results) => {\n        const [filteredGroups, filteredHosts, filteredApps] = results;\n        const query: any = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter && hostFilter !== '/.*/') {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      })\n      .then((query) => this.zabbixAPI.getProblems(query.groupids, query.hostids, query.applicationids, options))\n      .then((problems) => {\n        const triggerids = problems?.map((problem) => problem.objectid);\n        return Promise.all([Promise.resolve(problems), this.zabbixAPI.getTriggersByIds(triggerids)]);\n      })\n      .then(([problems, triggers]) => joinTriggersWithProblems(problems, triggers))\n      .then((triggers) => this.filterTriggersByProxy(triggers, proxyFilter));\n    // .then(triggers => this.expandUserMacro.bind(this)(triggers, true));\n  }\n\n  getProblemsHistory(groupFilter, hostFilter, appFilter, proxyFilter?, options?): Promise<ProblemDTO[]> {\n    const { valueFromEvent } = options;\n\n    const promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter),\n    ];\n\n    return Promise.all(promises)\n      .then((results) => {\n        const [filteredGroups, filteredHosts, filteredApps] = results;\n        const query: any = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter) {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      })\n      .then((query) => this.zabbixAPI.getEventsHistory(query.groupids, query.hostids, query.applicationids, options))\n      .then((problems) => {\n        const triggerids = problems?.map((problem) => problem.objectid);\n        return Promise.all([Promise.resolve(problems), this.zabbixAPI.getTriggersByIds(triggerids)]);\n      })\n      .then(([problems, triggers]) => joinTriggersWithEvents(problems, triggers, { valueFromEvent }))\n      .then((triggers) => this.filterTriggersByProxy(triggers, proxyFilter));\n    // .then(triggers => this.expandUserMacro.bind(this)(triggers, true));\n  }\n\n  getCProblems(groupFilter?, hostFilter?, appFilter?, proxyFilter?, triggerFilter?, options?): Promise<ProblemDTO[]> {\n    const promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter),\n    ];\n\n    return Promise.all(promises)\n      .then((results) => {\n        const [filteredGroups, filteredHosts, filteredApps] = results;\n        const query: any = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter && hostFilter !== '/.*/') {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      })\n      .then((query) => this.zabbixAPI.getProblems(query.groupids, query.hostids, query.applicationids, options))\n      .then((problems) => findByFilter(problems, triggerFilter))\n      .then((problems) => {\n        const triggerids = problems?.map((problem) => problem.objectid);\n        return Promise.all([Promise.resolve(problems), this.zabbixAPI.getTriggersByIds(triggerids)]);\n      })\n\n      .then(([problems, triggers]) => joinTriggersWithProblems(problems, triggers))\n      .then((triggers) => this.filterTriggersByProxy(triggers, proxyFilter));\n    //.then(triggers => findByFilter(triggers, triggerFilter));\n    // .then(triggers => this.expandUserMacro.bind(this)(triggers, true));\n  }\n\n  filterTriggersByProxy(triggers, proxyFilter) {\n    return this.getFilteredProxies(proxyFilter).then((proxies) => {\n      if (proxyFilter && proxyFilter !== '/.*/' && triggers) {\n        const proxy_ids = proxies.map((proxy) => proxy.proxyid);\n        triggers = triggers.filter((trigger) => {\n          for (let i = 0; i < trigger.hosts.length; i++) {\n            const host = trigger.hosts[i];\n            if (proxy_ids.includes(host.proxy_hostid)) {\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n      return triggers;\n    });\n  }\n\n  getFilteredProxies(proxyFilter) {\n    return this.zabbixAPI.getProxies().then((proxies) => {\n      proxies.forEach((proxy) => (proxy.name = proxy.host));\n      return findByFilter(proxies, proxyFilter);\n    });\n  }\n\n  getHistoryTS(items, timeRange, request) {\n    const [timeFrom, timeTo] = timeRange;\n    if (this.enableDirectDBConnection) {\n      return this.getHistoryDB(items, timeFrom, timeTo, request).then((history) =>\n        responseHandler.dataResponseToTimeSeries(history, items, request)\n      );\n    } else {\n      return this.zabbixAPI\n        .getHistory(items, timeFrom, timeTo)\n        .then((history) => responseHandler.handleHistory(history, items));\n    }\n  }\n\n  getTrends(items, timeRange, request) {\n    const [timeFrom, timeTo] = timeRange;\n    if (this.enableDirectDBConnection) {\n      return this.getTrendsDB(items, timeFrom, timeTo, request).then((history) =>\n        responseHandler.dataResponseToTimeSeries(history, items, request)\n      );\n    } else {\n      const valueType = request.consolidateBy || request.valueType;\n      return this.zabbixAPI\n        .getTrend(items, timeFrom, timeTo)\n        .then((history) => responseHandler.handleTrends(history, items, valueType))\n        .then(responseHandler.sortTimeseries); // Sort trend data, issue #202\n    }\n  }\n\n  getHistoryText(items, timeRange, target) {\n    const [timeFrom, timeTo] = timeRange;\n    if (items.length) {\n      return this.zabbixAPI.getHistory(items, timeFrom, timeTo).then((history) => {\n        if (target.resultFormat === 'table') {\n          return responseHandler.handleHistoryAsTable(history, items, target);\n        } else {\n          return responseHandler.handleText(history, items, target);\n        }\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  }\n\n  async getSLI(itservices: any[], slas: any[], timeRange, target: ZabbixMetricsQuery, options) {\n    const itServiceIds = itservices.map((s) => s.serviceid);\n    if (target.slaProperty === 'status') {\n      const res = await this.zabbixAPI.getServices(itServiceIds);\n      return handleServiceResponse(res, itservices, target);\n    }\n\n    const slaIds = slas.map((s) => s.slaid);\n    const slaId = slaIds?.length > 0 ? slaIds[0] : undefined;\n    const result = await this.zabbixAPI.getSLI(slaId, itServiceIds, timeRange, options);\n    return handleSLIResponse(result, itservices, target);\n  }\n\n  async getSLA(itservices, timeRange, target, options) {\n    const itServiceIds = _.map(itservices, 'serviceid');\n    if (this.supportSLA()) {\n      const slaResponse = await this.zabbixAPI.getSLA60(itServiceIds, timeRange, options);\n      return _.map(itServiceIds, (serviceid) => {\n        const itservice = _.find(itservices, { serviceid: serviceid });\n        return responseHandler.handleSLAResponse(itservice, target.slaProperty, slaResponse);\n      });\n    }\n    const slaResponse = await this.zabbixAPI.getSLA(itServiceIds, timeRange, options);\n    return _.map(itServiceIds, (serviceid) => {\n      const itservice = _.find(itservices, { serviceid: serviceid });\n      return responseHandler.handleSLAResponse(itservice, target.slaProperty, slaResponse);\n    });\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or empty array\n */\nfunction findByName(list, name) {\n  const finded = _.find(list, { name: name });\n  if (finded) {\n    return [finded];\n  } else {\n    return [];\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or empty array\n */\nfunction filterByName(list, name) {\n  const finded = _.filter(list, { name: name });\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByMacro(list, name) {\n  const finded = _.filter(list, { macro: name });\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByRegex(list, regex) {\n  const filterPattern = utils.buildRegex(regex);\n  return _.filter(list, (zbx_obj) => {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction filterByMRegex(list, regex) {\n  const filterPattern = utils.buildRegex(regex);\n  return _.filter(list, (zbx_obj) => {\n    return filterPattern.test(zbx_obj?.macro);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction filterByQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n\nfunction filterByMQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByMRegex(list, filter);\n  } else {\n    return filterByMacro(list, filter);\n  }\n}\n\nfunction getHostIds(items) {\n  const hostIds = _.map(items, (item) => {\n    return _.map(item.hosts, 'hostid');\n  });\n  return _.uniq(_.flatten(hostIds));\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __assign } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import React from 'react';\nimport { InlineFieldRow } from '@grafana/ui';\n\nexport const QueryEditorRow = ({ children }: React.PropsWithChildren<{}>) => {\n  return (\n    <InlineFieldRow>\n      {children}\n      <div className=\"gf-form gf-form--grow\">\n        <div className=\"gf-form-label gf-form-label--grow\" />\n      </div>\n    </InlineFieldRow>\n  );\n};\n","import React, { FC } from 'react';\nimport { cx, css } from '@emotion/css';\nimport { stylesFactory, useTheme, Tooltip } from '@grafana/ui';\nimport { GrafanaTheme, GrafanaThemeType } from '@grafana/data';\nimport { FAIcon } from '../FAIcon/FAIcon';\n\ninterface Props {\n  icon?: string;\n  width?: number;\n  tooltip?: string;\n  className?: string;\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\n}\n\nexport const ActionButton: FC<Props> = ({ icon, width, tooltip, className, children, onClick }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const buttonClass = cx(\n    'btn',\n    styles.button,\n    css`width: ${width || 3}rem`,\n    className,\n  );\n\n  let button = (\n    <button className={buttonClass} onClick={onClick}>\n      {icon && <FAIcon icon={icon} customClass={styles.icon} />}\n      {children}\n    </button>\n  );\n\n  if (tooltip) {\n    button = (\n      <Tooltip placement=\"bottom\" content={tooltip}>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const actionBlue = theme.type === GrafanaThemeType.Light ? '#497dc0' : '#005f81';\n  const hoverBlue = theme.type === GrafanaThemeType.Light ? '#456ba4' : '#354f77';\n\n  return {\n    button: css`\n      height: 2rem;\n      background-image: none;\n      background-color: ${actionBlue};\n      border: 1px solid ${theme.palette.gray1};\n      border-radius: 1px;\n      color: ${theme.colors.text};\n\n      i {\n        vertical-align: middle;\n      }\n\n      &:hover {\n        background-color: ${hoverBlue};\n      }\n    `,\n    icon: css`\n      i {\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n});\n","import React from 'react';\r\nimport { config, GrafanaBootConfig } from '@grafana/runtime';\r\nimport { ThemeContext } from '@grafana/ui';\r\nimport { createTheme } from '@grafana/data';\r\n\r\nexport const ConfigContext = React.createContext<GrafanaBootConfig>(config);\r\nexport const ConfigConsumer = ConfigContext.Consumer;\r\n\r\nexport const provideConfig = (component: React.ComponentType<any>) => {\r\n  const ConfigProvider = (props: any) => (\r\n    <ConfigContext.Provider value={config}>{React.createElement(component, { ...props })}</ConfigContext.Provider>\r\n  );\r\n\r\n  return ConfigProvider;\r\n};\r\n\r\nexport const getCurrentTheme = () => createTheme({\r\n  colors: {\r\n    mode: config.bootData.user.lightTheme ? 'light' : 'dark',\r\n  },\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  return (\r\n    <ConfigConsumer>\r\n      {config => {\r\n        return <ThemeContext.Provider value={getCurrentTheme()}>{children}</ThemeContext.Provider>;\r\n      }}\r\n    </ConfigConsumer>\r\n  );\r\n};\r\n\r\nexport const provideTheme = (component: React.ComponentType<any>) => {\r\n  return provideConfig((props: any) => <ThemeProvider>{React.createElement(component, { ...props })}</ThemeProvider>);\r\n};\r\n","import React, { FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { provideTheme } from '../ConfigProvider/ConfigProvider';\r\n\r\ninterface ModalWrapperProps {\r\n  showModal: <T>(component: React.ComponentType<T>, props: T) => void;\r\n  hideModal: () => void;\r\n}\r\n\r\ntype ModalWrapper<T> = FC<ModalWrapperProps>;\r\n\r\ninterface Props {\r\n  children: ModalWrapper<any>;\r\n}\r\n\r\ninterface State {\r\n  component: React.ComponentType<any> | null;\r\n  props: any;\r\n}\r\n\r\nexport class ModalController extends React.Component<Props, State> {\r\n  modalRoot = document.body;\r\n  modalNode = document.createElement('div');\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      component: null,\r\n      props: {},\r\n    };\r\n  }\r\n\r\n  showModal = (component: React.ComponentType<any>, props: any) => {\r\n    this.setState({\r\n      component,\r\n      props\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.modalRoot.removeChild(this.modalNode);\r\n    this.setState({\r\n      component: null,\r\n      props: {},\r\n    });\r\n  };\r\n\r\n  renderModal() {\r\n    const { component, props } = this.state;\r\n    if (!component) {\r\n      return null;\r\n    }\r\n\r\n    this.modalRoot.appendChild(this.modalNode);\r\n    const modal = React.createElement(provideTheme(component), props);\r\n    return ReactDOM.createPortal(modal, this.modalNode);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const ChildrenComponent = children;\r\n\r\n    return (\r\n      <>\r\n        <ChildrenComponent showModal={this.showModal} hideModal={this.hideModal} />\r\n        {this.renderModal()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const MENU_MAX_HEIGHT = 300; // max height for the picker's dropdown menu\nexport const METRIC_PICKER_WIDTH = 360;\n","import { css, cx } from '@emotion/css';\nimport React, { FormEvent } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { CustomScrollbar, getSelectStyles, Icon, Tooltip, useStyles2, useTheme2 } from '@grafana/ui';\nimport { MENU_MAX_HEIGHT } from './constants';\n\ninterface Props {\n  options: Array<SelectableValue<string>>;\n  onSelect: (option: SelectableValue<string>) => void;\n  offset: { vertical: number; horizontal: number };\n  minWidth?: number;\n  selected?: number;\n}\n\nexport const MetricPickerMenu = ({ options, offset, minWidth, selected, onSelect }: Props): JSX.Element => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const customStyles = useStyles2(getStyles(minWidth));\n\n  return (\n    <div\n      className={cx(\n        styles.menu,\n        customStyles.menuWrapper,\n        { [customStyles.menuLeft]: offset.horizontal > 0 },\n        css`\n          bottom: ${offset.vertical > 0 ? `${offset.vertical}px` : 'unset'};\n          top: ${offset.vertical < 0 ? `${Math.abs(offset.vertical)}px` : 'unset'};\n        `\n      )}\n    >\n      <div className={customStyles.menu} aria-label=\"Metric picker menu\">\n        <CustomScrollbar autoHide={false} autoHeightMax={`${MENU_MAX_HEIGHT}px`} hideHorizontalTrack>\n          <div>\n            <div className={styles.optionBody}>\n              {options?.map((option, i) => (\n                <MenuOption data={option} key={i} onClick={onSelect} isFocused={selected === i} hideDescription />\n              ))}\n            </div>\n          </div>\n        </CustomScrollbar>\n      </div>\n    </div>\n  );\n};\n\ninterface MenuOptionProps<T> {\n  data: SelectableValue<string>;\n  onClick: (value: SelectableValue<string>) => void;\n  isFocused?: boolean;\n  disabled?: boolean;\n  hideDescription?: boolean;\n}\n\nconst MenuOption = React.forwardRef<HTMLDivElement, React.PropsWithChildren<MenuOptionProps<any>>>(\n  ({ data, isFocused, disabled, onClick, hideDescription }, ref) => {\n    const theme = useTheme2();\n    const styles = getSelectStyles(theme);\n    const customStyles = useStyles2(getStyles());\n\n    const wrapperClassName = cx(\n      styles.option,\n      customStyles.menuOptionWrapper,\n      isFocused && styles.optionFocused,\n      disabled && customStyles.menuOptionDisabled\n    );\n\n    const onClickInternal = (event: FormEvent<HTMLElement>) => {\n      if (disabled) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      onClick(data);\n    };\n\n    return (\n      <div ref={ref} className={wrapperClassName} aria-label=\"Menu option\" onClick={onClickInternal}>\n        <div className={cx(styles.optionBody, customStyles.menuOptionBody)}>\n          <span>{data.label || data.value}</span>\n          {!hideDescription && data.description && <div className={styles.optionDescription}>{data.description}</div>}\n        </div>\n        {data.description && (\n          <Tooltip content={data.description}>\n            <Icon name=\"info-circle\" className={customStyles.menuOptionInfoSign} />\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n);\n\nMenuOption.displayName = 'MenuOption';\n\nexport const getStyles = (menuWidth?: number) => (theme: GrafanaTheme2) => {\n  return {\n    menuWrapper: css`\n      display: flex;\n      max-height: 650px;\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      min-width: auto;\n    `,\n    menu: css`\n      min-width: ${theme.spacing(menuWidth || 0)};\n\n      & > div {\n        padding-top: ${theme.spacing(1)};\n      }\n    `,\n    menuLeft: css`\n      right: 0;\n      flex-direction: row-reverse;\n    `,\n    container: css`\n      padding: ${theme.spacing(1)};\n      border: 1px ${theme.colors.border.weak} solid;\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      z-index: ${theme.zIndex.modal};\n    `,\n    menuOptionWrapper: css`\n      padding: ${theme.spacing(0.5)};\n    `,\n    menuOptionBody: css`\n      font-weight: ${theme.typography.fontWeightRegular};\n      padding: ${theme.spacing(0, 1.5, 0, 0)};\n    `,\n    menuOptionDisabled: css`\n      color: ${theme.colors.text.disabled};\n      cursor: not-allowed;\n    `,\n    menuOptionInfoSign: css`\n      color: ${theme.colors.text.disabled};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { FormEvent, useCallback, useEffect, useState, useRef } from 'react';\nimport { ClickOutsideWrapper, Input, Spinner, useStyles2 } from '@grafana/ui';\nimport { MetricPickerMenu } from './MetricPickerMenu';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { isRegex } from '../../datasource/utils';\n\nexport interface Props {\n  value: string;\n  isLoading?: boolean;\n  options: Array<SelectableValue<string>>;\n  width?: number;\n  onChange: (value: string) => void;\n}\n\nexport const MetricPicker = ({ value, options, isLoading, width, onChange }: Props): JSX.Element => {\n  const [isOpen, setOpen] = useState(false);\n  const [query, setQuery] = useState(value);\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [selectedOptionIdx, setSelectedOptionIdx] = useState(-1);\n  const [offset] = useState({ vertical: 0, horizontal: 0 });\n  const ref = useRef<HTMLDivElement>(null);\n  const customStyles = useStyles2(getStyles);\n\n  const inputClass = cx({\n    [customStyles.inputRegexp]: isRegex(query),\n    [customStyles.inputVariable]: query.startsWith('$'),\n  });\n\n  useEffect(() => {\n    setFilteredOptions(options);\n  }, [options]);\n\n  const onOpen = () => {\n    setOpen(true);\n    setFilteredOptions(options);\n  };\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  // Only call onClose if menu is open. Prevent unnecessary calls for multiple pickers on the page.\n  const onClickOutside = () => isOpen && onClose();\n\n  const onInputChange = (v: FormEvent<HTMLInputElement>) => {\n    if (!isOpen) {\n      setOpen(true);\n    }\n    const newQuery = v?.currentTarget?.value;\n    if (newQuery) {\n      setQuery(newQuery);\n      if (value !== newQuery) {\n        const filtered = options.filter(\n          (option) =>\n            option.value?.toLowerCase().includes(newQuery.toLowerCase()) ||\n            option.label?.toLowerCase().includes(newQuery.toLowerCase())\n        );\n        setFilteredOptions(filtered);\n      } else {\n        setFilteredOptions(options);\n      }\n    } else {\n      setQuery('');\n      setFilteredOptions(options);\n    }\n  };\n\n  const onMenuOptionSelect = (option: SelectableValue<string>) => {\n    const newValue = option?.value || '';\n    setQuery(newValue);\n    onChange(newValue);\n    onClose();\n  };\n\n  const onBlurInternal = () => {\n    onChange(query);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown') {\n      if (!isOpen) {\n        setOpen(true);\n      }\n      e.preventDefault();\n      e.stopPropagation();\n      const selected = selectedOptionIdx < filteredOptions.length - 1 ? selectedOptionIdx + 1 : 0;\n      setSelectedOptionIdx(selected);\n    } else if (e.key === 'ArrowUp') {\n      if (!isOpen) {\n        setOpen(true);\n      }\n      e.preventDefault();\n      e.stopPropagation();\n      const selected = selectedOptionIdx > 0 ? selectedOptionIdx - 1 : filteredOptions.length - 1;\n      setSelectedOptionIdx(selected);\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      onMenuOptionSelect(filteredOptions[selectedOptionIdx]);\n    }\n  };\n\n  return (\n    <div data-testid=\"role-picker\" style={{ position: 'relative' }} ref={ref}>\n      <ClickOutsideWrapper onClick={onClickOutside}>\n        <Input\n          className={inputClass}\n          value={query}\n          type=\"text\"\n          onChange={onInputChange}\n          onBlur={onBlurInternal}\n          onMouseDown={onOpen}\n          suffix={isLoading && <Spinner />}\n          width={width}\n          onKeyDown={onKeyDown}\n        />\n        {isOpen && (\n          <MetricPickerMenu\n            options={filteredOptions}\n            onSelect={onMenuOptionSelect}\n            offset={offset}\n            minWidth={width}\n            selected={selectedOptionIdx}\n          />\n        )}\n      </ClickOutsideWrapper>\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputRegexp: css`\n      input {\n        color: ${theme.colors.warning.main};\n      }\n    `,\n    inputVariable: css`\n      input {\n        color: ${theme.colors.primary.text};\n      }\n    `,\n  };\n};\n","import { getTemplateSrv } from '@grafana/runtime';\n\nexport const getVariableOptions = () => {\n  const variables = getTemplateSrv()\n    .getVariables()\n    .filter((v) => {\n      return v.type !== 'datasource' && v.type !== 'interval';\n    });\n  return variables?.map((v) => ({\n    value: `$${v.name}`,\n    label: `$${v.name}`,\n  }));\n};\n","import _ from 'lodash';\nimport React, { useEffect, FormEvent } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { AnnotationQuery, SelectableValue } from '@grafana/data';\nimport { InlineField, InlineSwitch, Input, Select } from '@grafana/ui';\nimport { ZabbixMetricsQuery } from '../types';\nimport { ZabbixQueryEditorProps } from './QueryEditor';\nimport { QueryEditorRow } from './QueryEditor/QueryEditorRow';\nimport { MetricPicker } from '../../components';\nimport { getVariableOptions } from './QueryEditor/utils';\nimport { prepareAnnotation } from '../migrations';\n\nconst severityOptions: Array<SelectableValue<number>> = [\n  { value: 0, label: 'Not classified' },\n  { value: 1, label: 'Information' },\n  { value: 2, label: 'Warning' },\n  { value: 3, label: 'Average' },\n  { value: 4, label: 'High' },\n  { value: 5, label: 'Disaster' },\n];\n\ntype Props = ZabbixQueryEditorProps & {\n  annotation?: AnnotationQuery<ZabbixMetricsQuery>;\n  onAnnotationChange?: (annotation: AnnotationQuery<ZabbixMetricsQuery>) => void;\n};\n\nexport const AnnotationQueryEditor = ({ annotation, onAnnotationChange, datasource }: Props) => {\n  annotation = prepareAnnotation(annotation);\n  const query = annotation.target;\n\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadAppOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const apps = await datasource.zabbix.getAllApps(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = apps?.map((app) => ({\n      value: app.name,\n      label: app.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: appsLoading, value: appOptions }, fetchApps] = useAsyncFn(async () => {\n    const options = await loadAppOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchApps();\n  }, [groupFilter, hostFilter]);\n\n  const onChange = (query: any) => {\n    onAnnotationChange({\n      ...annotation,\n      target: query,\n    });\n  };\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  const onTextFilterChange = (prop: string) => {\n    return (v: FormEvent<HTMLInputElement>) => {\n      const newValue = v?.currentTarget?.value;\n      if (newValue !== null) {\n        onChange({ ...query, [prop]: { filter: newValue } });\n      }\n    };\n  };\n\n  const onMinSeverityChange = (option: SelectableValue) => {\n    if (option.value !== null) {\n      onChange({ ...query, options: { ...query.options, minSeverity: option.value } });\n    }\n  };\n\n  const onOptionSwitch = (prop: string) => () => {\n    onChange({ ...query, options: { ...query.options, [prop]: !query.options[prop] } });\n  };\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group?.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host?.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Application\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.application?.filter}\n            options={appOptions}\n            isLoading={appsLoading}\n            onChange={onFilterChange('application')}\n          />\n        </InlineField>\n        <InlineField label=\"Problem\" labelWidth={12}>\n          <Input\n            width={24}\n            defaultValue={query.trigger?.filter}\n            placeholder=\"Problem name\"\n            onBlur={onTextFilterChange('trigger')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <>\n        <InlineField label=\"Min severity\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.options?.minSeverity}\n            options={severityOptions}\n            onChange={onMinSeverityChange}\n          />\n        </InlineField>\n        <InlineField label=\"Show OK events\" labelWidth={24}>\n          <InlineSwitch value={query.options.showOkEvents} onChange={onOptionSwitch('showOkEvents')} />\n        </InlineField>\n        <InlineField label=\"Hide acknowledged events\" labelWidth={24}>\n          <InlineSwitch value={query.options.hideAcknowledged} onChange={onOptionSwitch('hideAcknowledged')} />\n        </InlineField>\n        <InlineField label=\"Show hostname\" labelWidth={24}>\n          <InlineSwitch value={query.options.showHostname} onChange={onOptionSwitch('showHostname')} />\n        </InlineField>\n      </>\n    </>\n  );\n};\n","import _ from 'lodash';\nimport config from 'grafana/app/core/config';\nimport { contextSrv } from 'grafana/app/core/core';\nimport * as dateMath from 'grafana/app/core/utils/datemath';\nimport * as utils from './utils';\nimport * as migrations from './migrations';\nimport * as metricFunctions from './metricFunctions';\nimport * as c from './constants';\nimport dataProcessor from './dataProcessor';\nimport responseHandler from './responseHandler';\nimport problemsHandler from './problemsHandler';\nimport { Zabbix } from './zabbix/zabbix';\nimport { ZabbixAPIError } from './zabbix/connectors/zabbix_api/zabbixAPIConnector';\nimport { ProblemDTO, ShowProblemTypes, VariableQueryTypes, ZabbixDSOptions, ZabbixMetricsQuery } from './types';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv, toDataQueryResponse } from '@grafana/runtime';\nimport {\n  DataFrame,\n  dataFrameFromJSON,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  FieldType,\n  isDataFrame,\n  LoadingState,\n  toDataFrame,\n} from '@grafana/data';\nimport { AnnotationQueryEditor } from './components/AnnotationQueryEditor';\n\nexport class ZabbixDatasource extends DataSourceApi<ZabbixMetricsQuery, ZabbixDSOptions> {\n  name: string;\n  basicAuth: any;\n  withCredentials: any;\n\n  trends: boolean;\n  trendsFrom: string;\n  trendsRange: string;\n  cacheTTL: any;\n  disableReadOnlyUsersAck: boolean;\n  disableDataAlignment: boolean;\n  enableDirectDBConnection: boolean;\n  dbConnectionDatasourceId: number;\n  dbConnectionDatasourceName: string;\n  dbConnectionRetentionPolicy: string;\n  enableDebugLog: boolean;\n  datasourceId: number;\n  zabbix: Zabbix;\n\n  replaceTemplateVars: (target: any, scopedVars?: any) => any;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<ZabbixDSOptions>) {\n    super(instanceSettings);\n\n    this.enableDebugLog = config.buildInfo.env === 'development';\n\n    this.annotations = {\n      QueryEditor: AnnotationQueryEditor,\n      prepareAnnotation: migrations.prepareAnnotation,\n    };\n\n    // Use custom format for template variables\n    const templateSrv = getTemplateSrv();\n    this.replaceTemplateVars = _.partial(replaceTemplateVars, templateSrv);\n\n    // General data source settings\n    this.datasourceId = instanceSettings.id;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    const jsonData = migrations.migrateDSConfig(instanceSettings.jsonData);\n\n    // Use trends instead history since specified time\n    this.trends = jsonData.trends;\n    this.trendsFrom = jsonData.trendsFrom || '7d';\n    this.trendsRange = jsonData.trendsRange || '4d';\n\n    // Set cache update interval\n    const ttl = jsonData.cacheTTL || '1h';\n    this.cacheTTL = utils.parseInterval(ttl);\n\n    // Other options\n    this.disableReadOnlyUsersAck = jsonData.disableReadOnlyUsersAck;\n    this.disableDataAlignment = jsonData.disableDataAlignment;\n\n    // Direct DB Connection options\n    this.enableDirectDBConnection = jsonData.dbConnectionEnable || false;\n    this.dbConnectionDatasourceId = jsonData.dbConnectionDatasourceId;\n    this.dbConnectionDatasourceName = jsonData.dbConnectionDatasourceName;\n    this.dbConnectionRetentionPolicy = jsonData.dbConnectionRetentionPolicy;\n\n    const zabbixOptions = {\n      basicAuth: this.basicAuth,\n      withCredentials: this.withCredentials,\n      cacheTTL: this.cacheTTL,\n      enableDirectDBConnection: this.enableDirectDBConnection,\n      dbConnectionDatasourceId: this.dbConnectionDatasourceId,\n      dbConnectionDatasourceName: this.dbConnectionDatasourceName,\n      dbConnectionRetentionPolicy: this.dbConnectionRetentionPolicy,\n      datasourceId: this.datasourceId,\n    };\n\n    this.zabbix = new Zabbix(zabbixOptions);\n  }\n\n  ////////////////////////\n  // Datasource methods //\n  ////////////////////////\n\n  /**\n   * Query panel data. Calls for each panel in dashboard.\n   * @param  {Object} request   Contains time range, targets and other info.\n   * @return {Object} Grafana metrics object with timeseries data for each target.\n   */\n  query(request: DataQueryRequest<ZabbixMetricsQuery>) {\n    // Migrate old targets\n    const requestTargets = request.targets.map((t) => {\n      // Prevent changes of original object\n      const target = _.cloneDeep(t);\n      return migrations.migrate(target);\n    });\n\n    const backendResponsePromise = this.backendQuery({ ...request, targets: requestTargets });\n    const dbConnectionResponsePromise = this.dbConnectionQuery({ ...request, targets: requestTargets });\n    const frontendResponsePromise = this.frontendQuery({ ...request, targets: requestTargets });\n    const annotationResposePromise = this.annotationRequest({ ...request, targets: requestTargets });\n\n    return Promise.all([\n      backendResponsePromise,\n      dbConnectionResponsePromise,\n      frontendResponsePromise,\n      annotationResposePromise,\n    ]).then((rsp) => {\n      // Merge backend and frontend queries results\n      const [backendRes, dbConnectionRes, frontendRes, annotationRes] = rsp;\n      if (dbConnectionRes.data) {\n        backendRes.data = backendRes.data.concat(dbConnectionRes.data);\n      }\n      if (frontendRes.data) {\n        backendRes.data = backendRes.data.concat(frontendRes.data);\n      }\n\n      if (annotationRes.data) {\n        backendRes.data = backendRes.data.concat(annotationRes.data);\n      }\n\n      return {\n        data: backendRes.data,\n        state: LoadingState.Done,\n        key: request.requestId,\n      };\n    });\n  }\n\n  async backendQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const { intervalMs, maxDataPoints, range, requestId } = request;\n    const targets = request.targets.filter(this.isBackendTarget);\n\n    // Add range variables\n    request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n\n    const queries = _.compact(\n      targets.map((query) => {\n        // Don't request for hidden targets\n        if (query.hide) {\n          return null;\n        }\n\n        this.replaceTargetVariables(query, request);\n\n        return {\n          ...query,\n          datasourceId: this.datasourceId,\n          intervalMs,\n          maxDataPoints,\n        };\n      })\n    );\n\n    // Return early if no queries exist\n    if (!queries.length) {\n      return Promise.resolve({ data: [] });\n    }\n\n    const body: any = { queries };\n\n    if (range) {\n      body.range = range;\n      body.from = range.from.valueOf().toString();\n      body.to = range.to.valueOf().toString();\n    }\n\n    let rsp: any;\n    try {\n      rsp = await getBackendSrv()\n        .fetch({\n          url: '/api/ds/query',\n          method: 'POST',\n          data: body,\n          requestId,\n        })\n        .toPromise();\n    } catch (err) {\n      return toDataQueryResponse(err);\n    }\n\n    const resp = toDataQueryResponse(rsp);\n    this.sortByRefId(resp);\n    this.applyFrontendFunctions(resp, request);\n    responseHandler.convertZabbixUnits(resp);\n    if (responseHandler.isConvertibleToWide(resp.data)) {\n      console.log('Converting response to the wide format');\n      resp.data = responseHandler.convertToWide(resp.data);\n    }\n\n    return resp;\n  }\n\n  async frontendQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const frontendTargets = request.targets.filter((t) => !(this.isBackendTarget(t) || this.isDBConnectionTarget(t)));\n    const promises = _.map(frontendTargets, (target) => {\n      // Don't request for hidden targets\n      if (target.hide) {\n        return [];\n      }\n\n      // Add range variables\n      request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n      this.replaceTargetVariables(target, request);\n      const timeRange = this.buildTimeRange(request, target);\n\n      if (target.queryType === c.MODE_TEXT) {\n        // Text query\n        // Don't request undefined targets\n        if (!target.group || !target.host || !target.item) {\n          return [];\n        }\n        return this.queryTextData(target, timeRange);\n      } else if (target.queryType === c.MODE_ITSERVICE) {\n        // IT services query\n        return this.queryITServiceData(target, timeRange, request);\n      } else if (target.queryType === c.MODE_TRIGGERS) {\n        // Triggers query\n        return this.queryTriggersData(target, timeRange, request);\n      } else if (target.queryType === c.MODE_PROBLEMS) {\n        // Problems query\n        return this.queryProblems(target, timeRange, request);\n      } else if (target.queryType === c.MODE_MACROS) {\n        // UserMacro query\n        return this.queryUserMacrosData(target);\n      } else {\n        return [];\n      }\n    });\n\n    // Data for panel (all targets)\n    return Promise.all(_.flatten(promises))\n      .then(_.flatten)\n      .then((data) => {\n        if (\n          data &&\n          data.length > 0 &&\n          isDataFrame(data[0]) &&\n          !utils.isProblemsDataFrame(data[0]) &&\n          !utils.isMacrosDataFrame(data[0]) &&\n          !utils.nonTimeSeriesDataFrame(data[0])\n        ) {\n          data = responseHandler.alignFrames(data);\n          if (responseHandler.isConvertibleToWide(data)) {\n            console.log('Converting response to the wide format');\n            data = responseHandler.convertToWide(data);\n          }\n        }\n        return { data };\n      });\n  }\n\n  async dbConnectionQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const targets = request.targets.filter(this.isDBConnectionTarget);\n\n    const queries = _.compact(\n      targets.map((target) => {\n        // Don't request for hidden targets\n        if (target.hide) {\n          return [];\n        }\n\n        // Add range variables\n        request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n        this.replaceTargetVariables(target, request);\n        const timeRange = this.buildTimeRange(request, target);\n        const useTrends = this.isUseTrends(timeRange, target);\n\n        if (!target.queryType || target.queryType === c.MODE_METRICS) {\n          return this.queryNumericData(target, timeRange, useTrends, request);\n        } else if (target.queryType === c.MODE_ITEMID) {\n          // Item ID query\n          if (!target.itemids) {\n            return [];\n          }\n          return this.queryItemIdData(target, timeRange, useTrends, request);\n        } else {\n          return [];\n        }\n      })\n    );\n\n    const promises: Promise<DataQueryResponse> = Promise.all(queries)\n      .then(_.flatten)\n      .then((data) => ({ data }));\n\n    return promises;\n  }\n\n  buildTimeRange(request, target) {\n    let timeFrom = Math.ceil(dateMath.parse(request.range.from) / 1000);\n    let timeTo = Math.ceil(dateMath.parse(request.range.to) / 1000);\n\n    // Apply Time-related functions (timeShift(), etc)\n    const timeFunctions = bindFunctionDefs(target.functions, 'Time');\n    if (timeFunctions.length) {\n      const [time_from, time_to] = utils.sequence(timeFunctions)([timeFrom, timeTo]);\n      timeFrom = time_from;\n      timeTo = time_to;\n    }\n    return [timeFrom, timeTo];\n  }\n\n  /**\n   * Query target data for Metrics\n   */\n  async queryNumericData(target, timeRange, useTrends, request): Promise<any> {\n    const getItemOptions = {\n      itemtype: 'num',\n    };\n\n    const items = await this.zabbix.getItemsFromTarget(target, getItemOptions);\n\n    const queryStart = new Date().getTime();\n    const result = await this.queryNumericDataForItems(items, target, timeRange, useTrends, request);\n    const queryEnd = new Date().getTime();\n\n    if (this.enableDebugLog) {\n      console.log(`Datasource::Performance Query Time (${this.name}): ${queryEnd - queryStart}`);\n    }\n\n    return this.handleBackendPostProcessingResponse(result, request, target);\n  }\n\n  /**\n   * Query history for numeric items\n   */\n  async queryNumericDataForItems(items, target: ZabbixMetricsQuery, timeRange, useTrends, request) {\n    let history;\n    request.valueType = this.getTrendValueType(target);\n    request.consolidateBy = getConsolidateBy(target) || request.valueType;\n\n    if (useTrends) {\n      history = await this.zabbix.getTrends(items, timeRange, request);\n    } else {\n      history = await this.zabbix.getHistoryTS(items, timeRange, request);\n    }\n\n    const range = {\n      from: timeRange[0],\n      to: timeRange[1],\n    };\n    return await this.invokeDataProcessingQuery(history, target, range);\n  }\n\n  async invokeDataProcessingQuery(timeSeriesData, query, timeRange) {\n    // Request backend for data processing\n    const requestOptions: BackendSrvRequest = {\n      url: `/api/datasources/${this.datasourceId}/resources/db-connection-post`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      hideFromInspector: false,\n      data: {\n        series: timeSeriesData,\n        query,\n        timeRange,\n      },\n    };\n\n    const response: any = await getBackendSrv().fetch<any>(requestOptions).toPromise();\n    return response.data;\n  }\n\n  handleBackendPostProcessingResponse(response, request, target) {\n    const frames = [];\n    for (const frameJSON of response) {\n      const frame = dataFrameFromJSON(frameJSON);\n      frame.refId = target.refId;\n      frames.push(frame);\n    }\n\n    const resp = { data: frames };\n    this.sortByRefId(resp);\n    this.applyFrontendFunctions(resp, request);\n    if (responseHandler.isConvertibleToWide(resp.data)) {\n      console.log('Converting response to the wide format');\n      resp.data = responseHandler.convertToWide(resp.data);\n    }\n\n    return resp.data;\n  }\n\n  getTrendValueType(target) {\n    // Find trendValue() function and get specified trend value\n    const trendFunctions = _.map(metricFunctions.getCategories()['Trends'], 'name');\n    const trendValueFunc = _.find(target.functions, (func) => {\n      return _.includes(trendFunctions, func.def.name);\n    });\n    return trendValueFunc ? trendValueFunc.params[0] : 'avg';\n  }\n\n  sortByRefId(response: DataQueryResponse) {\n    response.data.sort((a, b) => {\n      if (a.refId < b.refId) {\n        return -1;\n      } else if (a.refId > b.refId) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  applyFrontendFunctions(response: DataQueryResponse, request: DataQueryRequest<any>) {\n    for (let i = 0; i < response.data.length; i++) {\n      const frame: DataFrame = response.data[i];\n      const target = getRequestTarget(request, frame.refId);\n\n      // Apply alias functions\n      const aliasFunctions = bindFunctionDefs(target.functions, 'Alias');\n      utils.sequence(aliasFunctions)(frame);\n    }\n    return response;\n  }\n\n  /**\n   * Query target data for Text\n   */\n  queryTextData(target, timeRange) {\n    const options = {\n      itemtype: 'text',\n    };\n    return this.zabbix\n      .getItemsFromTarget(target, options)\n      .then((items) => {\n        return this.zabbix.getHistoryText(items, timeRange, target);\n      })\n      .then((result) => {\n        if (target.resultFormat !== 'table') {\n          return result.map((s) => responseHandler.seriesToDataFrame(s, target, [], FieldType.string));\n        }\n        return result;\n      });\n  }\n\n  /**\n   * Query target data for Item ID\n   */\n  queryItemIdData(target, timeRange, useTrends, options) {\n    let itemids = target.itemids;\n    const templateSrv = getTemplateSrv();\n    itemids = templateSrv.replace(itemids, options.scopedVars, zabbixItemIdsTemplateFormat);\n    itemids = _.map(itemids.split(','), (itemid) => itemid.trim());\n\n    if (!itemids) {\n      return [];\n    }\n\n    return this.zabbix.getItemsByIDs(itemids).then((items) => {\n      return this.queryNumericDataForItems(items, target, timeRange, useTrends, options);\n    });\n  }\n\n  /**\n   * Query target data for IT Services\n   */\n  async queryITServiceData(target: ZabbixMetricsQuery, timeRange, request) {\n    // Don't show undefined and hidden targets\n    if (target.hide || (!(target as any).itservice && !target.itServiceFilter) || !target.slaProperty) {\n      return [];\n    }\n\n    let itServiceFilter;\n    request.isOldVersion = (target as any).itservice && !target.itServiceFilter;\n\n    if (request.isOldVersion) {\n      // Backward compatibility\n      itServiceFilter = '/.*/';\n    } else {\n      itServiceFilter = this.replaceTemplateVars(target.itServiceFilter, request.scopedVars);\n    }\n\n    request.slaInterval = target.slaInterval;\n\n    let itservices = await this.zabbix.getITServices(itServiceFilter);\n    if (request.isOldVersion) {\n      itservices = _.filter(itservices, { serviceid: (target as any).itservice?.serviceid });\n    }\n    if (target.slaFilter !== undefined) {\n      const slaFilter = this.replaceTemplateVars(target.slaFilter, request.scopedVars);\n      const slas = await this.zabbix.getSLAs(slaFilter);\n      const result = await this.zabbix.getSLI(itservices, slas, timeRange, target, request);\n      return result;\n    }\n    const itservicesdp = await this.zabbix.getSLA(itservices, timeRange, target, request);\n    const backendRequest = responseHandler.itServiceResponseToTimeSeries(itservicesdp, target.slaInterval);\n    const processedResponse = await this.invokeDataProcessingQuery(backendRequest, target, {});\n    return this.handleBackendPostProcessingResponse(processedResponse, request, target);\n  }\n\n  async queryUserMacrosData(target) {\n    const groupFilter = target.group.filter;\n    const hostFilter = target.host.filter;\n    const macroFilter = target.macro.filter;\n    const macros = await this.zabbix.getUMacros(groupFilter, hostFilter, macroFilter);\n    const hostmacroids = _.map(macros, 'hostmacroid');\n    const userMacros = await this.zabbix.getUserMacros(hostmacroids);\n    return responseHandler.handleMacro(userMacros, target);\n  }\n\n  async queryTriggersData(target: ZabbixMetricsQuery, timeRange, request) {\n    if (target.countTriggersBy === 'items') {\n      return this.queryTriggersICData(target, timeRange);\n    } else if (target.countTriggersBy === 'problems') {\n      return this.queryTriggersPCData(target, timeRange, request);\n    }\n\n    const [hosts, apps] = await this.zabbix.getHostsApsFromTarget(target);\n    if (!hosts.length) {\n      return Promise.resolve([]);\n    }\n\n    const groupFilter = target.group.filter;\n    const groups = await this.zabbix.getGroups(groupFilter);\n\n    const hostids = hosts?.map((h) => h.hostid);\n    const appids = apps?.map((a) => a.applicationid);\n    const options = getTriggersOptions(target, timeRange);\n    const alerts = await this.zabbix.getHostAlerts(hostids, appids, options);\n    return responseHandler.handleTriggersResponse(alerts, groups, timeRange, target);\n  }\n\n  async queryTriggersICData(target, timeRange) {\n    const getItemOptions = { itemtype: 'num' };\n    const [hosts, apps, items] = await this.zabbix.getHostsFromICTarget(target, getItemOptions);\n    if (!hosts.length) {\n      return Promise.resolve([]);\n    }\n\n    const groupFilter = target.group.filter;\n    const groups = await this.zabbix.getGroups(groupFilter);\n\n    const hostids = hosts?.map((h) => h.hostid);\n    const appids = apps?.map((a) => a.applicationid);\n    const itemids = items?.map((i) => i.itemid);\n    if (!itemids.length) {\n      return Promise.resolve([]);\n    }\n\n    const options = getTriggersOptions(target, timeRange);\n    const alerts = await this.zabbix.getHostICAlerts(hostids, appids, itemids, options);\n    return responseHandler.handleTriggersResponse(alerts, groups, timeRange, target);\n  }\n\n  async queryTriggersPCData(target: ZabbixMetricsQuery, timeRange, request) {\n    const [timeFrom, timeTo] = timeRange;\n    const tagsFilter = this.replaceTemplateVars(target.tags?.filter, request.scopedVars);\n    // replaceTemplateVars() builds regex-like string, so we should trim it.\n    const tagsFilterStr = tagsFilter.replace('/^', '').replace('$/', '');\n    const tags = utils.parseTags(tagsFilterStr);\n    tags.forEach((tag) => {\n      // Zabbix uses {\"tag\": \"<tag>\", \"value\": \"<value>\", \"operator\": \"<operator>\"} format, where 1 means Equal\n      tag.operator = 1;\n    });\n\n    const problemsOptions: any = {\n      minSeverity: target.options?.minSeverity,\n      limit: target.options?.limit,\n    };\n\n    if (tags && tags.length) {\n      problemsOptions.tags = tags;\n    }\n\n    if (target.options?.acknowledged === 0 || target.options?.acknowledged === 1) {\n      problemsOptions.acknowledged = target.options?.acknowledged ? true : false;\n    }\n\n    if (target.options?.minSeverity) {\n      let severities = [0, 1, 2, 3, 4, 5].filter((v) => v >= target.options?.minSeverity);\n      if (target.options?.severities) {\n        severities = severities.filter((v) => target.options?.severities.includes(v));\n      }\n      problemsOptions.severities = severities;\n    }\n\n    if (target.options.useTimeRange) {\n      problemsOptions.timeFrom = timeFrom;\n      problemsOptions.timeTo = timeTo;\n    }\n\n    const [hosts, apps, triggers] = await this.zabbix.getHostsFromPCTarget(target, problemsOptions);\n    if (!hosts.length) {\n      return Promise.resolve([]);\n    }\n\n    const groupFilter = target.group.filter;\n    const groups = await this.zabbix.getGroups(groupFilter);\n\n    const hostids = hosts?.map((h) => h.hostid);\n    const appids = apps?.map((a) => a.applicationid);\n    const triggerids = triggers.map((t) => t.triggerid);\n    const options: any = {\n      minSeverity: target.options?.minSeverity,\n      acknowledged: target.options?.acknowledged,\n      count: target.options.count,\n    };\n    if (target.options.useTimeRange) {\n      options.timeFrom = timeFrom;\n      options.timeTo = timeTo;\n    }\n\n    const alerts = await this.zabbix.getHostPCAlerts(hostids, appids, triggerids, options);\n    return responseHandler.handleTriggersResponse(alerts, groups, timeRange, target);\n  }\n\n  async queryProblems(target: ZabbixMetricsQuery, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    const userIsEditor = contextSrv.isEditor || contextSrv.isGrafanaAdmin;\n\n    let showAckButton = true;\n\n    const showProblems = target.showProblems || ShowProblemTypes.Problems;\n    const showProxy = target.options.hostProxy;\n\n    const getProxiesPromise = showProxy ? this.zabbix.getProxies() : () => [];\n    showAckButton = !this.disableReadOnlyUsersAck || userIsEditor;\n\n    // Replace template variables\n    const groupFilter = this.replaceTemplateVars(target.group?.filter, options.scopedVars);\n    const hostFilter = this.replaceTemplateVars(target.host?.filter, options.scopedVars);\n    const appFilter = this.replaceTemplateVars(target.application?.filter, options.scopedVars);\n    const proxyFilter = this.replaceTemplateVars(target.proxy?.filter, options.scopedVars);\n\n    const triggerFilter = this.replaceTemplateVars(target.trigger?.filter, options.scopedVars);\n    const tagsFilter = this.replaceTemplateVars(target.tags?.filter, options.scopedVars);\n\n    const replacedTarget = {\n      ...target,\n      trigger: { filter: triggerFilter },\n      tags: { filter: tagsFilter },\n    };\n\n    // replaceTemplateVars() builds regex-like string, so we should trim it.\n    const tagsFilterStr = tagsFilter.replace('/^', '').replace('$/', '');\n    const tags = utils.parseTags(tagsFilterStr);\n    tags.forEach((tag) => {\n      // Zabbix uses {\"tag\": \"<tag>\", \"value\": \"<value>\", \"operator\": \"<operator>\"} format, where 1 means Equal\n      tag.operator = 1;\n    });\n\n    const problemsOptions: any = {\n      recent: showProblems === ShowProblemTypes.Recent,\n      minSeverity: target.options?.minSeverity,\n      limit: target.options?.limit,\n    };\n\n    if (tags && tags.length) {\n      problemsOptions.tags = tags;\n    }\n\n    if (target.options?.acknowledged === 0 || target.options?.acknowledged === 1) {\n      problemsOptions.acknowledged = !!target.options?.acknowledged;\n    }\n\n    if (target.options?.severities?.length) {\n      let severities = [0, 1, 2, 3, 4, 5].filter((v) => target.options?.severities.includes(v));\n      problemsOptions.severities = severities;\n    }\n\n    let getProblemsPromise: Promise<ProblemDTO[]>;\n    if (showProblems === ShowProblemTypes.History || target.options?.useTimeRange) {\n      problemsOptions.timeFrom = timeFrom;\n      problemsOptions.timeTo = timeTo;\n      getProblemsPromise = this.zabbix.getProblemsHistory(\n        groupFilter,\n        hostFilter,\n        appFilter,\n        proxyFilter,\n        problemsOptions\n      );\n    } else {\n      getProblemsPromise = this.zabbix.getProblems(groupFilter, hostFilter, appFilter, proxyFilter, problemsOptions);\n    }\n    const getUsersPromise = this.zabbix.getUsers();\n\n    let proxies;\n    let zabbixUsers;\n    const problemsPromises = Promise.all([getProblemsPromise, getProxiesPromise, getUsersPromise])\n      .then(([problems, sourceProxies, users]) => {\n        zabbixUsers = _.keyBy(users, 'userid');\n        proxies = _.keyBy(sourceProxies, 'proxyid');\n        return problems;\n      })\n      .then((problems) => problemsHandler.setMaintenanceStatus(problems))\n      .then((problems) => problemsHandler.setAckButtonStatus(problems, showAckButton))\n      .then((problems) => problemsHandler.filterTriggersPre(problems, replacedTarget))\n      .then((problems) => problemsHandler.sortProblems(problems, target))\n      .then((problems) => problemsHandler.addTriggerDataSource(problems, target))\n      .then((problems) => problemsHandler.formatAcknowledges(problems, zabbixUsers))\n      .then((problems) => problemsHandler.addTriggerHostProxy(problems, proxies));\n\n    return problemsPromises.then((problems) => {\n      const problemsDataFrame = problemsHandler.toDataFrame(problems, target);\n      return problemsDataFrame;\n    });\n  }\n\n  /**\n   * Test connection to Zabbix API and external history DB.\n   */\n  async testDatasource() {\n    try {\n      const { zabbixVersion, dbConnectorStatus } = await this.zabbix.testDataSource();\n      let message = `Zabbix API version: ${zabbixVersion}`;\n      if (dbConnectorStatus) {\n        message += `, DB connector type: ${dbConnectorStatus.dsType}`;\n      }\n      return {\n        status: 'success',\n        title: 'Success',\n        message: message,\n      };\n    } catch (error: any) {\n      if (error instanceof ZabbixAPIError) {\n        return {\n          status: 'error',\n          title: error.message,\n          message: error.message,\n        };\n      } else if (error.data && error.data.message) {\n        return {\n          status: 'error',\n          title: 'Zabbix Client Error',\n          message: error.data.message,\n        };\n      } else if (typeof error === 'string') {\n        return {\n          status: 'error',\n          title: 'Unknown Error',\n          message: error,\n        };\n      } else {\n        console.log(error);\n        return {\n          status: 'error',\n          title: 'Connection failed',\n          message: 'Could not connect to given url',\n        };\n      }\n    }\n  }\n\n  ////////////////\n  // Templating //\n  ////////////////\n\n  /**\n   * Find metrics from templated request.\n   *\n   * @param  {string} query Query from Templating\n   * @param options\n   * @return {string}       Metric name - group, host, app or item or list\n   *                        of metrics in \"{metric1, metric2,..., metricN}\" format.\n   */\n  metricFindQuery(query, options) {\n    let resultPromise;\n    let queryModel = _.cloneDeep(query);\n\n    if (!query) {\n      return Promise.resolve([]);\n    }\n\n    if (typeof query === 'string') {\n      // Backward compatibility\n      queryModel = utils.parseLegacyVariableQuery(query);\n    }\n\n    for (const prop of ['group', 'host', 'application', 'itemTag', 'item']) {\n      queryModel[prop] = this.replaceTemplateVars(queryModel[prop], {});\n    }\n\n    const { group, host, application, item } = queryModel;\n\n    switch (queryModel.queryType) {\n      case VariableQueryTypes.Group:\n        resultPromise = this.zabbix.getGroups(queryModel.group);\n        break;\n      case VariableQueryTypes.Host:\n        resultPromise = this.zabbix.getHosts(queryModel.group, queryModel.host);\n        break;\n      case VariableQueryTypes.Application:\n        resultPromise = this.zabbix.getApps(queryModel.group, queryModel.host, queryModel.application);\n        break;\n      case VariableQueryTypes.ItemTag:\n        resultPromise = this.zabbix.getItemTags(queryModel.group, queryModel.host, queryModel.itemTag);\n        break;\n      case VariableQueryTypes.Item:\n        resultPromise = this.zabbix.getItems(\n          queryModel.group,\n          queryModel.host,\n          queryModel.application,\n          null,\n          queryModel.item\n        );\n        break;\n      case VariableQueryTypes.ItemValues:\n        const range = options?.range;\n        resultPromise = this.zabbix.getItemValues(group, host, application, item, { range });\n        break;\n      default:\n        resultPromise = Promise.resolve([]);\n        break;\n    }\n\n    return resultPromise.then((metrics) => {\n      return _.map(metrics, formatMetric);\n    });\n  }\n\n  targetContainsTemplate(target: ZabbixMetricsQuery): boolean {\n    const templateSrv = getTemplateSrv() as any;\n    return (\n      templateSrv.variableExists(target.group?.filter) ||\n      templateSrv.variableExists(target.host?.filter) ||\n      templateSrv.variableExists(target.application?.filter) ||\n      templateSrv.variableExists(target.itemTag?.filter) ||\n      templateSrv.variableExists(target.item?.filter) ||\n      templateSrv.variableExists(target.macro?.filter) ||\n      templateSrv.variableExists(target.proxy?.filter) ||\n      templateSrv.variableExists(target.trigger?.filter) ||\n      templateSrv.variableExists(target.textFilter) ||\n      templateSrv.variableExists(target.itServiceFilter)\n    );\n  }\n\n  /////////////////\n  // Annotations //\n  /////////////////\n\n  async annotationRequest(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const targets = request.targets.filter((t) => t.fromAnnotations);\n    if (!targets.length) {\n      return Promise.resolve({ data: [] });\n    }\n\n    const events = await this.annotationQueryLegacy({ ...request, targets });\n    return { data: [toDataFrame(events)] };\n  }\n\n  annotationQueryLegacy(options) {\n    const timeRange = options.range || options.rangeRaw;\n    const timeFrom = Math.ceil(dateMath.parse(timeRange.from) / 1000);\n    const timeTo = Math.ceil(dateMath.parse(timeRange.to) / 1000);\n    const annotation = options.targets[0];\n\n    // Show all triggers\n    const problemsOptions: any = {\n      value: annotation.options.showOkEvents ? ['0', '1'] : '1',\n      valueFromEvent: true,\n      timeFrom,\n      timeTo,\n    };\n\n    if (annotation.options.minSeverity) {\n      const severities = [0, 1, 2, 3, 4, 5].filter((v) => v >= Number(annotation.options.minSeverity));\n      problemsOptions.severities = severities;\n    }\n\n    const groupFilter = this.replaceTemplateVars(annotation.group.filter, {});\n    const hostFilter = this.replaceTemplateVars(annotation.host.filter, {});\n    const appFilter = this.replaceTemplateVars(annotation.application.filter, {});\n    const proxyFilter = undefined;\n\n    return this.zabbix\n      .getProblemsHistory(groupFilter, hostFilter, appFilter, proxyFilter, problemsOptions)\n      .then((problems) => {\n        // Filter triggers by description\n        const problemName = this.replaceTemplateVars(annotation.trigger.filter, {});\n        if (utils.isRegex(problemName)) {\n          problems = _.filter(problems, (p) => {\n            return utils.buildRegex(problemName).test(p.description);\n          });\n        } else if (problemName) {\n          problems = _.filter(problems, (p) => {\n            return p.description === problemName;\n          });\n        }\n\n        // Hide acknowledged events if option enabled\n        if (annotation.hideAcknowledged) {\n          problems = _.filter(problems, (p) => {\n            return !p.acknowledges?.length;\n          });\n        }\n\n        return _.map(problems, (p) => {\n          const formattedAcknowledges = utils.formatAcknowledges(p.acknowledges);\n\n          let annotationTags: string[] = [];\n          if (annotation.showHostname) {\n            annotationTags = _.map(p.hosts, 'name');\n          }\n\n          return {\n            title: p.value === '1' ? 'Problem' : 'OK',\n            time: p.timestamp * 1000,\n            annotation: annotation,\n            text: p.name + formattedAcknowledges,\n            tags: annotationTags,\n          };\n        });\n      });\n  }\n\n  // Replace template variables\n  replaceTargetVariables(target, options) {\n    const templateSrv = getTemplateSrv();\n    const parts = ['group', 'host', 'application', 'itemTag', 'item'];\n    _.forEach(parts, (p) => {\n      if (target[p] && target[p].filter) {\n        target[p].filter = this.replaceTemplateVars(target[p].filter, options.scopedVars);\n      }\n    });\n\n    if (target.textFilter) {\n      target.textFilter = this.replaceTemplateVars(target.textFilter, options.scopedVars);\n    }\n\n    if (target.itemids) {\n      target.itemids = templateSrv.replace(target.itemids, options.scopedVars, zabbixItemIdsTemplateFormat);\n    }\n\n    _.forEach(target.functions, (func) => {\n      func.params = _.map(func.params, (param) => {\n        if (typeof param === 'number') {\n          return +templateSrv.replace(param.toString(), options.scopedVars);\n        } else {\n          return templateSrv.replace(param, options.scopedVars);\n        }\n      });\n    });\n  }\n\n  isUseTrends(timeRange, target: ZabbixMetricsQuery) {\n    if (target.options.useTrends === 'false') {\n      return false;\n    }\n    const [timeFrom, timeTo] = timeRange;\n    const useTrendsFrom = Math.ceil(dateMath.parse('now-' + this.trendsFrom) / 1000);\n    const useTrendsRange = Math.ceil(utils.parseInterval(this.trendsRange) / 1000);\n    const useTrendsToggle = target.options.useTrends === 'true';\n    const useTrends =\n      (useTrendsToggle || this.trends) && (timeFrom < useTrendsFrom || timeTo - timeFrom > useTrendsRange);\n    return useTrends;\n  }\n\n  isBackendTarget = (target: any): boolean => {\n    if (this.enableDirectDBConnection) {\n      return false;\n    }\n\n    return target.queryType === c.MODE_METRICS || target.queryType === c.MODE_ITEMID;\n  };\n\n  isDBConnectionTarget = (target: any): boolean => {\n    return this.enableDirectDBConnection && (target.queryType === c.MODE_METRICS || target.queryType === c.MODE_ITEMID);\n  };\n}\n\nfunction bindFunctionDefs(functionDefs, category) {\n  const aggregationFunctions = _.map(metricFunctions.getCategories()[category], 'name');\n  const aggFuncDefs = _.filter(functionDefs, (func) => {\n    return _.includes(aggregationFunctions, func.def.name);\n  });\n\n  return _.map(aggFuncDefs, (func) => {\n    const funcInstance = metricFunctions.createFuncInstance(func.def, func.params);\n    return funcInstance.bindFunction(dataProcessor.metricFunctions);\n  });\n}\n\nfunction getConsolidateBy(target) {\n  let consolidateBy;\n  const funcDef = _.find(target.functions, (func) => {\n    return func.def.name === 'consolidateBy';\n  });\n  if (funcDef && funcDef.params && funcDef.params.length) {\n    consolidateBy = funcDef.params[0];\n  }\n  return consolidateBy;\n}\n\nfunction formatMetric(metricObj) {\n  return {\n    text: metricObj.name,\n    expandable: false,\n  };\n}\n\n/**\n * Custom formatter for template variables.\n * Default Grafana \"regex\" formatter returns\n * value1|value2\n * This formatter returns\n * (value1|value2)\n * This format needed for using in complex regex with\n * template variables, for example\n * /CPU $cpu_item.*time/ where $cpu_item is system,user,iowait\n */\nexport function zabbixTemplateFormat(value) {\n  if (typeof value === 'string') {\n    return utils.escapeRegex(value);\n  }\n\n  const escapedValues = _.map(value, utils.escapeRegex);\n  return '(' + escapedValues.join('|') + ')';\n}\n\nfunction zabbixItemIdsTemplateFormat(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return value.join(',');\n}\n\n/**\n * If template variables are used in request, replace it using regex format\n * and wrap with '/' for proper multi-value work. Example:\n * $variable selected as a, b, c\n * We use filter $variable\n * $variable    -> a|b|c    -> /a|b|c/\n * /$variable/  -> /a|b|c/  -> /a|b|c/\n */\nexport function replaceTemplateVars(templateSrv, target, scopedVars) {\n  let replacedTarget = templateSrv.replace(target, scopedVars, zabbixTemplateFormat);\n  if (target && target !== replacedTarget && !utils.isRegex(replacedTarget)) {\n    replacedTarget = '/^' + replacedTarget + '$/';\n  }\n  return replacedTarget;\n}\n\nexport function base64StringToArrowTable(text: string) {\n  const b64 = atob(text);\n  const arr = Uint8Array.from(b64, (c) => {\n    return c.charCodeAt(0);\n  });\n  return arr;\n}\n\nfunction getRequestTarget(request: DataQueryRequest<any>, refId: string): any {\n  for (let i = 0; i < request.targets.length; i++) {\n    const target = request.targets[i];\n    if (target.refId === refId) {\n      return target;\n    }\n  }\n  return null;\n}\n\nconst getTriggersOptions = (target: ZabbixMetricsQuery, timeRange) => {\n  const [timeFrom, timeTo] = timeRange;\n  const options: any = {\n    minSeverity: target.options?.minSeverity,\n    acknowledged: target.options?.acknowledged,\n    count: target.options?.count,\n  };\n  if (target.options?.useTimeRange) {\n    options.timeFrom = timeFrom;\n    options.timeTo = timeTo;\n  }\n  return options;\n};\n","import _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery, ZBXItem, ZBXItemTag } from '../../types';\nimport { itemTagToString } from '../../utils';\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const MetricsQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadAppOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const apps = await datasource.zabbix.getAllApps(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = apps?.map((app) => ({\n      value: app.name,\n      label: app.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: appsLoading, value: appOptions }, fetchApps] = useAsyncFn(async () => {\n    const options = await loadAppOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadTagOptions = async (group: string, host: string) => {\n    const tagsAvailable = await datasource.zabbix.isZabbix54OrHigher();\n    if (!tagsAvailable) {\n      return [];\n    }\n\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const items = await datasource.zabbix.getAllItems(groupFilter, hostFilter, null, null, {});\n    const tags: ZBXItemTag[] = _.flatten(items.map((item: ZBXItem) => item.tags || []));\n    // const tags: ZBXItemTag[] = await datasource.zabbix.getItemTags(groupFilter, hostFilter, null);\n\n    const tagList = _.uniqBy(tags, (t) => t.tag + t.value || '').map((t) => itemTagToString(t));\n    let options: Array<SelectableValue<string>> = tagList?.map((tag) => ({\n      value: tag,\n      label: tag,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: tagsLoading, value: tagOptions }, fetchTags] = useAsyncFn(async () => {\n    const options = await loadTagOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadItemOptions = async (group: string, host: string, app: string, itemTag: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const appFilter = datasource.replaceTemplateVars(app);\n    const tagFilter = datasource.replaceTemplateVars(itemTag);\n    const options = {\n      itemtype: 'num',\n      showDisabledItems: query.options.showDisabledItems,\n    };\n    const items = await datasource.zabbix.getAllItems(groupFilter, hostFilter, appFilter, tagFilter, options);\n    let itemOptions: Array<SelectableValue<string>> = items?.map((item) => ({\n      value: item.name,\n      label: item.name,\n    }));\n    itemOptions = _.uniqBy(itemOptions, (o) => o.value);\n    itemOptions.unshift(...getVariableOptions());\n    return itemOptions;\n  };\n\n  const [{ loading: itemsLoading, value: itemOptions }, fetchItems] = useAsyncFn(async () => {\n    const options = await loadItemOptions(\n      query.group.filter,\n      query.host.filter,\n      query.application.filter,\n      query.itemTag.filter\n    );\n    return options;\n  }, [query.group.filter, query.host.filter, query.application.filter, query.itemTag.filter]);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n  const appFilter = datasource.replaceTemplateVars(query.application?.filter);\n  const tagFilter = datasource.replaceTemplateVars(query.itemTag?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchApps();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchTags();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchItems();\n  }, [groupFilter, hostFilter, appFilter, tagFilter]);\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  const supportsApplications = datasource.zabbix.supportsApplications();\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        {supportsApplications && (\n          <InlineField label=\"Application\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.application.filter}\n              options={appOptions}\n              isLoading={appsLoading}\n              onChange={onFilterChange('application')}\n            />\n          </InlineField>\n        )}\n        {!supportsApplications && (\n          <InlineField label=\"Item tag\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.itemTag.filter}\n              options={tagOptions}\n              isLoading={tagsLoading}\n              onChange={onFilterChange('itemTag')}\n            />\n          </InlineField>\n        )}\n        <InlineField label=\"Item\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.item.filter}\n            options={itemOptions}\n            isLoading={itemsLoading}\n            onChange={onFilterChange('item')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import React from 'react';\nimport { Icon } from '@grafana/ui';\nimport { MetricFunc } from '../../types';\n\nconst DOCS_FUNC_REF_URL = 'https://alexanderzobnin.github.io/grafana-zabbix/reference/functions/';\n\nexport interface FunctionEditorControlsProps {\n  onMoveLeft: (func: MetricFunc) => void;\n  onMoveRight: (func: MetricFunc) => void;\n  onRemove: (func: MetricFunc) => void;\n}\n\nconst FunctionHelpButton = (props: { description?: string; name: string }) => {\n  return (\n    <Icon\n      className=\"pointer\"\n      name=\"question-circle\"\n      onClick={() => {\n        window.open(`${DOCS_FUNC_REF_URL}#${props.name}`, '_blank');\n      }}\n    />\n  );\n};\n\nexport const FunctionEditorControls = (\n  props: FunctionEditorControlsProps & {\n    func: MetricFunc;\n  }\n) => {\n  const { func, onMoveLeft, onMoveRight, onRemove } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '60px',\n        justifyContent: 'space-between',\n      }}\n    >\n      <Icon className=\"pointer\" name=\"arrow-left\" onClick={() => onMoveLeft(func)} />\n      <FunctionHelpButton name={func.def.name} description={func.def.description} />\n      <Icon className=\"pointer\" name=\"times\" onClick={() => onRemove(func)} />\n      <Icon className=\"pointer\" name=\"arrow-right\" onClick={() => onMoveRight(func)} />\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { FunctionEditorControlsProps, FunctionEditorControls } from './FunctionEditorControls';\n\nimport { useStyles2, Tooltip } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { MetricFunc } from '../../types';\n\ninterface FunctionEditorProps extends FunctionEditorControlsProps {\n  func: MetricFunc;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: css`\n      margin-right: ${theme.spacing(0.5)};\n    `,\n    label: css({\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.bodySmall.fontSize, // to match .gf-form-label\n      cursor: 'pointer',\n      display: 'inline-block',\n    }),\n  };\n};\n\nexport const FunctionEditor: React.FC<FunctionEditorProps> = ({ onMoveLeft, onMoveRight, func, ...props }) => {\n  const styles = useStyles2(getStyles);\n\n  const renderContent = ({ updatePopperPosition }: any) => (\n    <FunctionEditorControls\n      {...props}\n      func={func}\n      onMoveLeft={() => {\n        onMoveLeft(func);\n        updatePopperPosition();\n      }}\n      onMoveRight={() => {\n        onMoveRight(func);\n        updatePopperPosition();\n      }}\n    />\n  );\n\n  return (\n    <Tooltip content={renderContent} placement=\"top\" interactive>\n      <span className={styles.label}>{func.def.name}</span>\n    </Tooltip>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Segment, SegmentInput, useStyles2 } from '@grafana/ui';\n\nexport type EditableParam = {\n  name: string;\n  value: string;\n  optional: boolean;\n  multiple: boolean;\n  options: Array<SelectableValue<string>>;\n};\n\ntype FieldEditorProps = {\n  editableParam: EditableParam;\n  onChange: (value: string) => void;\n  onExpandedChange: (expanded: boolean) => void;\n  autofocus: boolean;\n};\n\n/**\n * Render a function parameter with a segment dropdown for multiple options or simple input.\n */\nexport function FunctionParamEditor({ editableParam, onChange, onExpandedChange, autofocus }: FieldEditorProps) {\n  const styles = useStyles2(getStyles);\n\n  if (editableParam.options?.length > 0) {\n    return (\n      <Segment\n        autofocus={autofocus}\n        value={editableParam.value}\n        inputPlaceholder={editableParam.name}\n        className={styles.segment}\n        options={editableParam.options}\n        placeholder={' +' + editableParam.name}\n        onChange={(value) => {\n          onChange(value.value || '');\n        }}\n        onExpandedChange={onExpandedChange}\n        inputMinWidth={150}\n        allowCustomValue={true}\n        allowEmptyValue={true}\n      ></Segment>\n    );\n  } else {\n    return (\n      <SegmentInput\n        autofocus={autofocus}\n        className={styles.input}\n        value={editableParam.value || ''}\n        placeholder={' +' + editableParam.name}\n        inputPlaceholder={editableParam.name}\n        onChange={(value) => {\n          onChange(value.toString());\n        }}\n        onExpandedChange={onExpandedChange}\n        // input style\n        style={{ height: '25px', paddingTop: '2px', marginTop: '2px', paddingLeft: '4px', minWidth: '100px' }}\n      ></SegmentInput>\n    );\n  }\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  segment: css({\n    margin: 0,\n    padding: 0,\n  }),\n  input: css`\n    margin: 0;\n    padding: 0;\n    input {\n      height: 25px;\n    },\n  `,\n});\n","import { SelectableValue } from '@grafana/data';\nimport { MetricFunc } from '../../types';\n\nexport type ParamDef = {\n  name: string;\n  type: string;\n  options?: Array<string | number>;\n  multiple?: boolean;\n  optional?: boolean;\n  version?: string;\n};\n\nexport type EditableParam = {\n  name: string;\n  value: string;\n  optional: boolean;\n  multiple: boolean;\n  options: Array<SelectableValue<string>>;\n};\n\nfunction createEditableParam(paramDef: ParamDef, additional: boolean, value?: string | number): EditableParam {\n  return {\n    name: paramDef.name,\n    value: value?.toString() || '',\n    optional: !!paramDef.optional || additional, // only first param is required when multiple are allowed\n    multiple: !!paramDef.multiple,\n    options:\n      paramDef.options?.map((option: string | number) => ({\n        value: option.toString(),\n        label: option.toString(),\n      })) ?? [],\n  };\n}\n\n/**\n * Create a list of params that can be edited in the function editor.\n */\nexport function mapFuncInstanceToParams(func: MetricFunc): EditableParam[] {\n  // list of required parameters (from func.def)\n  const params: EditableParam[] = func.def.params.map((paramDef: ParamDef, index: number) =>\n    createEditableParam(paramDef, false, func.params[index])\n  );\n\n  // list of additional (multiple or optional) params entered by the user\n  while (params.length < func.params.length) {\n    const paramDef = func.def.params[func.def.params.length - 1];\n    const value = func.params[params.length];\n    params.push(createEditableParam(paramDef, true, value));\n  }\n\n  // extra \"fake\" param to allow adding more multiple values at the end\n  if (params.length && params[params.length - 1].value && params[params.length - 1]?.multiple) {\n    const paramDef = func.def.params[func.def.params.length - 1];\n    params.push(createEditableParam(paramDef, true, ''));\n  }\n\n  return params;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { HorizontalGroup, InlineLabel, useStyles2 } from '@grafana/ui';\n\nimport { FunctionEditor } from './FunctionEditor';\nimport { EditableParam, FunctionParamEditor } from './FunctionParamEditor';\nimport { mapFuncInstanceToParams } from './helpers';\nimport { MetricFunc } from '../../types';\n\nexport type FunctionEditorProps = {\n  func: MetricFunc;\n  onMoveLeft: (func: MetricFunc) => void;\n  onMoveRight: (func: MetricFunc) => void;\n  onRemove: (func: MetricFunc) => void;\n  onParamChange: (func: MetricFunc, index: number, value: string) => void;\n};\n\n/**\n * Allows editing function params and removing/moving a function (note: editing function name is not supported)\n */\nexport function ZabbixFunctionEditor({ func, onMoveLeft, onMoveRight, onRemove, onParamChange }: FunctionEditorProps) {\n  const styles = useStyles2(getStyles);\n\n  // keep track of mouse over and isExpanded state to display buttons for adding optional/multiple params\n  // only when the user mouse over over the function editor OR any param editor is expanded.\n  const [mouseOver, setIsMouseOver] = useState(false);\n  const [expanded, setIsExpanded] = useState(false);\n\n  let params = mapFuncInstanceToParams(func);\n  params = params.filter((p: EditableParam, index: number) => {\n    // func.added is set for newly added functions - see autofocus below\n    return (index < func.def.params.length && !p.optional) || func.added || p.value || expanded || mouseOver;\n  });\n\n  return (\n    <div\n      className={cx(styles.container)}\n      onMouseOver={() => setIsMouseOver(true)}\n      onMouseLeave={() => setIsMouseOver(false)}\n    >\n      <HorizontalGroup spacing=\"none\">\n        <FunctionEditor func={func} onMoveLeft={onMoveLeft} onMoveRight={onMoveRight} onRemove={onRemove} />\n        <InlineLabel className={styles.label}>(</InlineLabel>\n        {params.map((editableParam: EditableParam, index: number) => {\n          return (\n            <React.Fragment key={index}>\n              <FunctionParamEditor\n                autofocus={index === 0 && func.added}\n                editableParam={editableParam}\n                onChange={(value) => {\n                  if (value !== '' || editableParam.optional) {\n                    // dispatch(actions.updateFunctionParam({ func, index, value }));\n                    onParamChange(func, index, value);\n                  }\n                  setIsExpanded(false);\n                  setIsMouseOver(false);\n                }}\n                onExpandedChange={setIsExpanded}\n              />\n              {index !== params.length - 1 ? ',' : ''}\n            </React.Fragment>\n          );\n        })}\n        <InlineLabel className={styles.label}>)</InlineLabel>\n      </HorizontalGroup>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    backgroundColor: theme.colors.background.secondary,\n    borderRadius: theme.shape.borderRadius(),\n    marginRight: theme.spacing(0.5),\n    padding: `0 ${theme.spacing(1)}`,\n    height: `${theme.v1.spacing.formInputHeight}px`,\n  }),\n  error: css`\n    border: 1px solid ${theme.colors.error.main};\n  `,\n  label: css({\n    padding: 0,\n    margin: 0,\n  }),\n  button: css({\n    padding: theme.spacing(0.5),\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, ClickOutsideWrapper, Icon, Input, Menu, useStyles2, useTheme2 } from '@grafana/ui';\nimport { FuncDef } from '../../types';\nimport { getCategories } from '../../metricFunctions';\n\n// import { mapFuncDefsToSelectables } from './helpers';\n\ntype Props = {\n  // funcDefs: MetricFunc;\n  onFuncAdd: (def: FuncDef) => void;\n};\n\nexport function AddZabbixFunction({ onFuncAdd }: Props) {\n  const [showMenu, setShowMenu] = useState(false);\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const onFuncAddInternal = (def: FuncDef) => {\n    onFuncAdd(def);\n    setShowMenu(false);\n  };\n\n  const onSearch = (e: React.FormEvent<HTMLInputElement>) => {\n    console.log(e.currentTarget.value);\n  };\n\n  const onClickOutside = () => {\n    setShowMenu(false);\n  };\n\n  const menuItems = useMemo(() => buildMenuItems(onFuncAddInternal), [onFuncAdd]);\n\n  return (\n    <div>\n      {!showMenu && (\n        <Button\n          icon=\"plus\"\n          variant=\"secondary\"\n          className={cx(styles.button)}\n          aria-label=\"Add new function\"\n          onClick={() => setShowMenu(!showMenu)}\n        />\n      )}\n      {showMenu && (\n        <ClickOutsideWrapper onClick={onClickOutside} useCapture>\n          <Input onChange={onSearch} suffix={<Icon name=\"search\" />} />\n          <Menu style={{ position: 'absolute', zIndex: theme.zIndex.dropdown }}>{menuItems}</Menu>\n        </ClickOutsideWrapper>\n      )}\n    </div>\n  );\n}\n\nfunction buildMenuItems(onClick: (func: FuncDef) => void) {\n  const categories = getCategories();\n  const menuItems: JSX.Element[] = [];\n  for (const categoryName in categories) {\n    const functions = categories[categoryName];\n    const subItems = functions.map((f) => <Menu.Item label={f.name} key={f.name} onClick={() => onClick(f)} />);\n    menuItems.push(<Menu.Item label={categoryName} key={categoryName} childItems={subItems} />);\n  }\n  return menuItems;\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    button: css`\n      margin-right: ${theme.spacing(0.5)};\n    `,\n  };\n}\n","import React from 'react';\nimport { swap } from '../../utils';\nimport { createFuncInstance } from '../../metricFunctions';\nimport { FuncDef, MetricFunc, ZabbixMetricsQuery } from '../../types';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { InlineFormLabel } from '@grafana/ui';\nimport { ZabbixFunctionEditor } from '../FunctionEditor/ZabbixFunctionEditor';\nimport { AddZabbixFunction } from '../FunctionEditor/AddZabbixFunction';\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const QueryFunctionsEditor = ({ query, onChange }: Props) => {\n  const onFuncParamChange = (func: MetricFunc, index: number, value: string) => {\n    func.params[index] = value;\n    const funcIndex = query.functions.findIndex((f) => f === func);\n    const functions = query.functions;\n    functions[funcIndex] = func;\n    onChange({ ...query, functions });\n  };\n\n  const onMoveFuncLeft = (func: MetricFunc) => {\n    const index = query.functions.indexOf(func);\n    const functions = swap(query.functions, index, index - 1);\n    onChange({ ...query, functions });\n  };\n\n  const onMoveFuncRight = (func: MetricFunc) => {\n    const index = query.functions.indexOf(func);\n    const functions = swap(query.functions, index, index + 1);\n    onChange({ ...query, functions });\n  };\n\n  const onRemoveFunc = (func: MetricFunc) => {\n    const functions = query.functions?.filter((f) => f !== func);\n    onChange({ ...query, functions });\n  };\n\n  const onFuncAdd = (def: FuncDef) => {\n    const newFunc = createFuncInstance(def);\n    newFunc.added = true;\n    let functions = query.functions.concat(newFunc);\n    functions = moveAliasFuncLast(functions);\n\n    // if ((newFunc.params.length && newFunc.added) || newFunc.def.params.length === 0) {\n    // }\n    onChange({ ...query, functions });\n  };\n\n  return (\n    <QueryEditorRow>\n      <InlineFormLabel width={6}>Functions</InlineFormLabel>\n      {query.functions?.map((f, i) => {\n        return (\n          <ZabbixFunctionEditor\n            func={f}\n            key={i}\n            onParamChange={onFuncParamChange}\n            onMoveLeft={onMoveFuncLeft}\n            onMoveRight={onMoveFuncRight}\n            onRemove={onRemoveFunc}\n          />\n        );\n      })}\n      <AddZabbixFunction onFuncAdd={onFuncAdd} />\n    </QueryEditorRow>\n  );\n};\n\nfunction moveAliasFuncLast(functions: MetricFunc[]) {\n  const aliasFuncIndex = functions.findIndex((func) => func.def.category === 'Alias');\n\n  console.log(aliasFuncIndex);\n  if (aliasFuncIndex >= 0) {\n    const aliasFunc = functions[aliasFuncIndex];\n    functions.splice(aliasFuncIndex, 1);\n    functions.push(aliasFunc);\n  }\n  return functions;\n}\n","import { css } from '@emotion/css';\nimport React, { useState, FormEvent } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport {\n  HorizontalGroup,\n  Icon,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  Input,\n  Select,\n  useStyles2,\n} from '@grafana/ui';\nimport * as c from '../../constants';\nimport { ZabbixQueryOptions } from '../../types';\n\nconst ackOptions: Array<SelectableValue<number>> = [\n  { label: 'all triggers', value: 2 },\n  { label: 'unacknowledged', value: 0 },\n  { label: 'acknowledged', value: 1 },\n];\n\nconst sortOptions: Array<SelectableValue<string>> = [\n  { label: 'Default', value: 'default' },\n  { label: 'Last change', value: 'lastchange' },\n  { label: 'Severity', value: 'severity' },\n];\n\nconst trendsOptions: Array<SelectableValue<string>> = [\n  { label: 'Default', value: 'default' },\n  { label: 'True', value: 'true' },\n  { label: 'False', value: 'false' },\n];\n\ninterface Props {\n  queryType: string;\n  queryOptions: ZabbixQueryOptions;\n  onChange: (options: ZabbixQueryOptions) => void;\n}\n\nexport const QueryOptionsEditor = ({ queryType, queryOptions, onChange }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  const onLimitChange = (v: FormEvent<HTMLInputElement>) => {\n    const newValue = Number(v?.currentTarget?.value);\n    if (newValue !== null) {\n      onChange({ ...queryOptions, limit: newValue });\n    }\n  };\n\n  const onPropChange = (prop: string) => {\n    return (option: SelectableValue) => {\n      if (option.value !== null) {\n        onChange({ ...queryOptions, [prop]: option.value });\n      }\n    };\n  };\n\n  const renderClosed = () => {\n    return (\n      <>\n        <HorizontalGroup>\n          {!isOpen && <Icon name=\"angle-right\" />}\n          {isOpen && <Icon name=\"angle-down\" />}\n          <span className={styles.label}>Options</span>\n          <div className={styles.options}>{renderOptions()}</div>\n        </HorizontalGroup>\n      </>\n    );\n  };\n\n  const renderOptions = () => {\n    const elements: JSX.Element[] = [];\n    for (const key in queryOptions) {\n      if (queryOptions.hasOwnProperty(key)) {\n        const value = queryOptions[key];\n        if (value === true && value !== '' && value !== null && value !== undefined) {\n          elements.push(<span className={styles.optionContainer} key={key}>{`${key} = ${value}`}</span>);\n        }\n      }\n    }\n    return elements;\n  };\n\n  const renderEditor = () => {\n    return (\n      <div className={styles.editorContainer}>\n        {queryType === c.MODE_METRICS && renderMetricOptions()}\n        {queryType === c.MODE_ITEMID && renderMetricOptions()}\n        {queryType === c.MODE_ITSERVICE && renderMetricOptions()}\n        {queryType === c.MODE_TEXT && renderTextMetricsOptions()}\n        {queryType === c.MODE_PROBLEMS && renderProblemsOptions()}\n        {queryType === c.MODE_TRIGGERS && renderTriggersOptions()}\n      </div>\n    );\n  };\n\n  const renderMetricOptions = () => {\n    return (\n      <>\n        <InlineField label=\"Trends\" labelWidth={24}>\n          <Select\n            isSearchable={false}\n            width={16}\n            value={queryOptions.useTrends}\n            options={trendsOptions}\n            onChange={onPropChange('useTrends')}\n          />\n        </InlineField>\n        <InlineField label=\"Show disabled items\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.showDisabledItems}\n            onChange={() => onChange({ ...queryOptions, showDisabledItems: !queryOptions.showDisabledItems })}\n          />\n        </InlineField>\n        <InlineField label=\"Use Zabbix value mapping\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.useZabbixValueMapping}\n            onChange={() => onChange({ ...queryOptions, useZabbixValueMapping: !queryOptions.useZabbixValueMapping })}\n          />\n        </InlineField>\n        <InlineField label=\"Disable data alignment\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.disableDataAlignment}\n            onChange={() => onChange({ ...queryOptions, disableDataAlignment: !queryOptions.disableDataAlignment })}\n          />\n        </InlineField>\n      </>\n    );\n  };\n\n  const renderTextMetricsOptions = () => {\n    return (\n      <>\n        <InlineField label=\"Show disabled items\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.showDisabledItems}\n            onChange={() => onChange({ ...queryOptions, showDisabledItems: !queryOptions.showDisabledItems })}\n          />\n        </InlineField>\n      </>\n    );\n  };\n\n  const renderProblemsOptions = () => {\n    return (\n      <>\n        <InlineField label=\"Acknowledged\" labelWidth={24}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={queryOptions.acknowledged}\n            options={ackOptions}\n            onChange={onPropChange('acknowledged')}\n          />\n        </InlineField>\n        <InlineField label=\"Sort by\" labelWidth={24}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={queryOptions.sortProblems}\n            options={sortOptions}\n            onChange={onPropChange('sortProblems')}\n          />\n        </InlineField>\n        <InlineField label=\"Use time range\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.useTimeRange}\n            onChange={() => onChange({ ...queryOptions, useTimeRange: !queryOptions.useTimeRange })}\n          />\n        </InlineField>\n        <InlineField label=\"Hosts in maintenance\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.hostsInMaintenance}\n            onChange={() => onChange({ ...queryOptions, hostsInMaintenance: !queryOptions.hostsInMaintenance })}\n          />\n        </InlineField>\n        <InlineField label=\"Host proxy\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.hostProxy}\n            onChange={() => onChange({ ...queryOptions, hostProxy: !queryOptions.hostProxy })}\n          />\n        </InlineField>\n        <InlineField label=\"Limit\" labelWidth={24}>\n          <Input width={12} type=\"number\" defaultValue={queryOptions.limit} onBlur={onLimitChange} />\n        </InlineField>\n      </>\n    );\n  };\n\n  const renderTriggersOptions = () => {\n    return (\n      <>\n        <InlineField label=\"Acknowledged\" labelWidth={24}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={queryOptions.acknowledged}\n            options={ackOptions}\n            onChange={onPropChange('acknowledged')}\n          />\n        </InlineField>\n        <InlineField label=\"Use time range\" labelWidth={24}>\n          <InlineSwitch\n            value={queryOptions.useTimeRange}\n            onChange={() => onChange({ ...queryOptions, useTimeRange: !queryOptions.useTimeRange })}\n          />\n        </InlineField>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <InlineFieldRow>\n        <div className={styles.container} onClick={() => setIsOpen(!isOpen)}>\n          {renderClosed()}\n        </div>\n      </InlineFieldRow>\n      <InlineFieldRow>{isOpen && renderEditor()}</InlineFieldRow>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    backgroundColor: theme.colors.background.secondary,\n    borderRadius: theme.shape.borderRadius(),\n    marginRight: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.5),\n    padding: `0 ${theme.spacing(1)}`,\n    height: `${theme.v1.spacing.formInputHeight}px`,\n    width: `100%`,\n  }),\n  label: css({\n    color: theme.colors.info.text,\n    fontWeight: theme.typography.fontWeightMedium,\n    cursor: 'pointer',\n  }),\n  options: css({\n    color: theme.colors.text.disabled,\n    fontSize: theme.typography.bodySmall.fontSize,\n  }),\n  optionContainer: css`\n    margin-right: ${theme.spacing(2)};\n  `,\n  editorContainer: css`\n    display: flex;\n    flex-direction: column;\n    margin-left: ${theme.spacing(4)};\n  `,\n});\n","import _ from 'lodash';\nimport React, { useEffect, FormEvent } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineSwitch, Input } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery } from '../../types';\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const TextMetricsQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadAppOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const apps = await datasource.zabbix.getAllApps(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = apps?.map((app) => ({\n      value: app.name,\n      label: app.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: appsLoading, value: appOptions }, fetchApps] = useAsyncFn(async () => {\n    const options = await loadAppOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadItemOptions = async (group: string, host: string, app: string, itemTag: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const appFilter = datasource.replaceTemplateVars(app);\n    const tagFilter = datasource.replaceTemplateVars(itemTag);\n    const options = {\n      itemtype: 'text',\n      showDisabledItems: query.options.showDisabledItems,\n    };\n    const items = await datasource.zabbix.getAllItems(groupFilter, hostFilter, appFilter, tagFilter, options);\n    let itemOptions: Array<SelectableValue<string>> = items?.map((item) => ({\n      value: item.name,\n      label: item.name,\n    }));\n    itemOptions = _.uniqBy(itemOptions, (o) => o.value);\n    itemOptions.unshift(...getVariableOptions());\n    return itemOptions;\n  };\n\n  const [{ loading: itemsLoading, value: itemOptions }, fetchItems] = useAsyncFn(async () => {\n    const options = await loadItemOptions(\n      query.group.filter,\n      query.host.filter,\n      query.application.filter,\n      query.itemTag.filter\n    );\n    return options;\n  }, [query.group.filter, query.host.filter, query.application.filter, query.itemTag.filter]);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n  const appFilter = datasource.replaceTemplateVars(query.application?.filter);\n  const tagFilter = datasource.replaceTemplateVars(query.itemTag?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchApps();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchItems();\n  }, [groupFilter, hostFilter, appFilter, tagFilter]);\n\n  const onTextFilterChange = (v: FormEvent<HTMLInputElement>) => {\n    const newValue = v?.currentTarget?.value;\n    if (newValue !== null) {\n      onChange({ ...query, textFilter: newValue });\n    }\n  };\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Application\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.application.filter}\n            options={appOptions}\n            isLoading={appsLoading}\n            onChange={onFilterChange('application')}\n          />\n        </InlineField>\n        <InlineField label=\"Item\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.item.filter}\n            options={itemOptions}\n            isLoading={itemsLoading}\n            onChange={onFilterChange('item')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Text filter\" labelWidth={12}>\n          <Input width={24} defaultValue={query.textFilter} onBlur={onTextFilterChange} />\n        </InlineField>\n        <InlineField label=\"Use capture groups\" labelWidth={18}>\n          <InlineSwitch\n            value={query.useCaptureGroups}\n            onChange={() => onChange({ ...query, useCaptureGroups: !query.useCaptureGroups })}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import _ from 'lodash';\nimport React, { useEffect, FormEvent } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, Input, MultiSelect, Select } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery } from '../../types';\n\nconst showProblemsOptions: Array<SelectableValue<string>> = [\n  { label: 'Problems', value: 'problems' },\n  { label: 'Recent problems', value: 'recent' },\n  { label: 'History', value: 'history' },\n];\n\nconst severityOptions: Array<SelectableValue<number>> = [\n  { value: 0, label: 'Not classified' },\n  { value: 1, label: 'Information' },\n  { value: 2, label: 'Warning' },\n  { value: 3, label: 'Average' },\n  { value: 4, label: 'High' },\n  { value: 5, label: 'Disaster' },\n];\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const ProblemsQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadAppOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const apps = await datasource.zabbix.getAllApps(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = apps?.map((app) => ({\n      value: app.name,\n      label: app.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: appsLoading, value: appOptions }, fetchApps] = useAsyncFn(async () => {\n    const options = await loadAppOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadProxyOptions = async () => {\n    const proxies = await datasource.zabbix.getProxies();\n    const options = proxies?.map((proxy) => ({\n      value: proxy.host,\n      label: proxy.host,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: proxiesLoading, value: proxiesOptions }, fetchProxies] = useAsyncFn(async () => {\n    const options = await loadProxyOptions();\n    return options;\n  }, []);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchApps();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchProxies();\n  }, []);\n\n  const onTextFilterChange = (prop: string) => {\n    return (v: FormEvent<HTMLInputElement>) => {\n      const newValue = v?.currentTarget?.value;\n      if (newValue !== null) {\n        onChange({ ...query, [prop]: { filter: newValue } });\n      }\n    };\n  };\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  const onPropChange = (prop: string) => {\n    return (option: SelectableValue) => {\n      if (option.value !== null) {\n        onChange({ ...query, [prop]: option.value });\n      }\n    };\n  };\n\n  const onSeveritiesChange = (options: SelectableValue[]) => {\n    if (options !== null) {\n      onChange({ ...query, options: { ...query.options, severities: options.map((o) => o.value) } });\n    }\n  };\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group?.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host?.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n        <InlineField label=\"Proxy\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.proxy?.filter}\n            options={proxiesOptions}\n            isLoading={proxiesLoading}\n            onChange={onFilterChange('proxy')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Application\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.application?.filter}\n            options={appOptions}\n            isLoading={appsLoading}\n            onChange={onFilterChange('application')}\n          />\n        </InlineField>\n        <InlineField label=\"Problem\" labelWidth={12}>\n          <Input\n            width={24}\n            defaultValue={query.trigger?.filter}\n            placeholder=\"Problem name\"\n            onBlur={onTextFilterChange('trigger')}\n          />\n        </InlineField>\n        <InlineField label=\"Tags\" labelWidth={12}>\n          <Input\n            width={24}\n            defaultValue={query.tags?.filter}\n            placeholder=\"tag1:value1, tag2:value2\"\n            onBlur={onTextFilterChange('tags')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Show\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.showProblems}\n            options={showProblemsOptions}\n            onChange={onPropChange('showProblems')}\n          />\n        </InlineField>\n        <InlineField label=\"Severity\" labelWidth={12}>\n          <MultiSelect\n            isSearchable={false}\n            isClearable={true}\n            placeholder=\"Show all problems\"\n            value={query.options?.severities}\n            options={severityOptions}\n            onChange={onSeveritiesChange}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import React, { FormEvent } from 'react';\nimport { InlineField, Input } from '@grafana/ui';\nimport { ZabbixMetricsQuery } from '../../types';\nimport { QueryEditorRow } from './QueryEditorRow';\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const ItemIdQueryEditor = ({ query, onChange }: Props) => {\n  const onItemIdsChange = (v: FormEvent<HTMLInputElement>) => {\n    const newValue = v?.currentTarget?.value;\n    if (newValue !== null) {\n      onChange({ ...query, itemids: newValue });\n    }\n  };\n\n  return (\n    <QueryEditorRow>\n      <InlineField label=\"Item Ids\" labelWidth={12}>\n        <Input width={24} defaultValue={query.itemids} onBlur={onItemIdsChange} />\n      </InlineField>\n    </QueryEditorRow>\n  );\n};\n","import _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, Select } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery } from '../../types';\n\nconst slaPropertyList: Array<SelectableValue<string>> = [\n  { label: 'Status', value: 'status' },\n  { label: 'SLI', value: 'sli' },\n  { label: 'Uptime', value: 'uptime' },\n  { label: 'Downtime', value: 'downtime' },\n  { label: 'Error budget', value: 'error_budget' },\n];\n\nconst slaIntervals: Array<SelectableValue<string>> = [\n  { label: 'No interval', value: 'none' },\n  { label: 'Auto', value: 'auto' },\n  { label: '1 hour', value: '1h' },\n  { label: '12 hours', value: '12h' },\n  { label: '24 hours', value: '1d' },\n  { label: '1 week', value: '1w' },\n  { label: '1 month', value: '1M' },\n];\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const ServicesQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadITServiceOptions = async () => {\n    const services = await datasource.zabbix.getITService();\n    const options = services?.map((s) => ({\n      value: s.name,\n      label: s.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: itServicesLoading, value: itServicesOptions }, fetchITServices] = useAsyncFn(async () => {\n    const options = await loadITServiceOptions();\n    return options;\n  }, []);\n\n  const loadSLAOptions = async () => {\n    const slaOptions = await datasource.zabbix.getSLAList();\n    const options = slaOptions?.map((s) => ({\n      value: s.name,\n      label: s.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: slaLoading, value: slaOptions }, fetchSLAOptions] = useAsyncFn(async () => {\n    const options = await loadSLAOptions();\n    return options;\n  }, []);\n\n  useEffect(() => {\n    fetchITServices();\n    fetchSLAOptions();\n  }, []);\n\n  const onPropChange = (prop: string) => {\n    return (option: SelectableValue) => {\n      if (option.value) {\n        onChange({ ...query, [prop]: option.value });\n      }\n    };\n  };\n\n  const onStringPropChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== undefined) {\n        onChange({ ...query, [prop]: value });\n      }\n    };\n  };\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Service\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.itServiceFilter}\n            options={itServicesOptions}\n            isLoading={itServicesLoading}\n            onChange={onStringPropChange('itServiceFilter')}\n          />\n        </InlineField>\n        <InlineField label=\"SLA\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.slaFilter}\n            options={slaOptions}\n            isLoading={slaLoading}\n            onChange={onStringPropChange('slaFilter')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Property\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.slaProperty}\n            options={slaPropertyList}\n            onChange={onPropChange('slaProperty')}\n          />\n        </InlineField>\n        <InlineField label=\"Interval\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.slaInterval}\n            options={slaIntervals}\n            onChange={onPropChange('slaInterval')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import _ from 'lodash';\nimport React, { useEffect, FormEvent } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineSwitch, Input, Select } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { itemTagToString } from '../../utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery, ZBXItem, ZBXItemTag } from '../../types';\n\nconst countByOptions: Array<SelectableValue<string>> = [\n  { value: '', label: 'All triggers' },\n  // { value: 'problems', label: 'Problems' },\n  // { value: 'items', label: 'Items' },\n];\n\nconst severityOptions: Array<SelectableValue<number>> = [\n  { value: 0, label: 'Not classified' },\n  { value: 1, label: 'Information' },\n  { value: 2, label: 'Warning' },\n  { value: 3, label: 'Average' },\n  { value: 4, label: 'High' },\n  { value: 5, label: 'Disaster' },\n];\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const TriggersQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadAppOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const apps = await datasource.zabbix.getAllApps(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = apps?.map((app) => ({\n      value: app.name,\n      label: app.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: appsLoading, value: appOptions }, fetchApps] = useAsyncFn(async () => {\n    const options = await loadAppOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadTagOptions = async (group: string, host: string) => {\n    const tagsAvailable = await datasource.zabbix.isZabbix54OrHigher();\n    if (!tagsAvailable) {\n      return [];\n    }\n\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const items = await datasource.zabbix.getAllItems(groupFilter, hostFilter, null, null, {});\n    const tags: ZBXItemTag[] = _.flatten(items.map((item: ZBXItem) => item.tags || []));\n\n    const tagList = _.uniqBy(tags, (t) => t.tag + t.value || '').map((t) => itemTagToString(t));\n    let options: Array<SelectableValue<string>> = tagList?.map((tag) => ({\n      value: tag,\n      label: tag,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: tagsLoading, value: tagOptions }, fetchItemTags] = useAsyncFn(async () => {\n    const options = await loadTagOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  const loadProxyOptions = async () => {\n    const proxies = await datasource.zabbix.getProxies();\n    const options = proxies?.map((proxy) => ({\n      value: proxy.host,\n      label: proxy.host,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: proxiesLoading, value: proxiesOptions }, fetchProxies] = useAsyncFn(async () => {\n    const options = await loadProxyOptions();\n    return options;\n  }, []);\n\n  const loadItemOptions = async (group: string, host: string, app: string, itemTag: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const appFilter = datasource.replaceTemplateVars(app);\n    const tagFilter = datasource.replaceTemplateVars(itemTag);\n    const options = {\n      itemtype: 'num',\n      showDisabledItems: query.options.showDisabledItems,\n    };\n    const items = await datasource.zabbix.getAllItems(groupFilter, hostFilter, appFilter, tagFilter, options);\n    let itemOptions: Array<SelectableValue<string>> = items?.map((item) => ({\n      value: item.name,\n      label: item.name,\n    }));\n    itemOptions = _.uniqBy(itemOptions, (o) => o.value);\n    itemOptions.unshift(...getVariableOptions());\n    return itemOptions;\n  };\n\n  const [{ loading: itemsLoading, value: itemOptions }, fetchItems] = useAsyncFn(async () => {\n    const options = await loadItemOptions(\n      query.group.filter,\n      query.host.filter,\n      query.application.filter,\n      query.itemTag.filter\n    );\n    return options;\n  }, [query.group.filter, query.host.filter, query.application.filter, query.itemTag.filter]);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n  const appFilter = datasource.replaceTemplateVars(query.application?.filter);\n  const tagFilter = datasource.replaceTemplateVars(query.itemTag?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchApps();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchItemTags();\n  }, [groupFilter, hostFilter]);\n\n  useEffect(() => {\n    fetchProxies();\n  }, []);\n\n  useEffect(() => {\n    fetchItems();\n  }, [groupFilter, hostFilter, appFilter, tagFilter]);\n\n  const onTextFilterChange = (prop: string) => {\n    return (v: FormEvent<HTMLInputElement>) => {\n      const newValue = v?.currentTarget?.value;\n      if (newValue !== null) {\n        onChange({ ...query, [prop]: { filter: newValue } });\n      }\n    };\n  };\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  const onMinSeverityChange = (option: SelectableValue) => {\n    if (option.value !== null) {\n      onChange({ ...query, options: { ...query.options, minSeverity: option.value } });\n    }\n  };\n\n  const onCountByChange = (option: SelectableValue) => {\n    if (option.value !== null) {\n      onChange({ ...query, countTriggersBy: option.value! });\n    }\n  };\n\n  const supportsApplications = datasource.zabbix.supportsApplications();\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Count by\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.countTriggersBy}\n            options={countByOptions}\n            onChange={onCountByChange}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group?.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host?.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n        {query.countTriggersBy === 'problems' && (\n          <InlineField label=\"Proxy\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.proxy?.filter}\n              options={proxiesOptions}\n              isLoading={proxiesLoading}\n              onChange={onFilterChange('proxy')}\n            />\n          </InlineField>\n        )}\n      </QueryEditorRow>\n      <QueryEditorRow>\n        {(supportsApplications || query.countTriggersBy !== 'items') && (\n          <InlineField label=\"Application\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.application?.filter}\n              options={appOptions}\n              isLoading={appsLoading}\n              onChange={onFilterChange('application')}\n            />\n          </InlineField>\n        )}\n        {!supportsApplications && query.countTriggersBy === 'items' && (\n          <InlineField label=\"Item tag\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.itemTag.filter}\n              options={tagOptions}\n              isLoading={tagsLoading}\n              onChange={onFilterChange('itemTag')}\n            />\n          </InlineField>\n        )}\n        {query.countTriggersBy === 'problems' && (\n          <>\n            <InlineField label=\"Problem\" labelWidth={12}>\n              <Input\n                width={24}\n                defaultValue={query.trigger?.filter}\n                placeholder=\"Problem name\"\n                onBlur={onTextFilterChange('trigger')}\n              />\n            </InlineField>\n            <InlineField label=\"Tags\" labelWidth={12}>\n              <Input\n                width={24}\n                defaultValue={query.tags?.filter}\n                placeholder=\"tag1:value1, tag2:value2\"\n                onBlur={onTextFilterChange('tags')}\n              />\n            </InlineField>\n          </>\n        )}\n        {query.countTriggersBy === 'items' && (\n          <InlineField label=\"Item\" labelWidth={12}>\n            <MetricPicker\n              width={24}\n              value={query.item.filter}\n              options={itemOptions}\n              isLoading={itemsLoading}\n              onChange={onFilterChange('item')}\n            />\n          </InlineField>\n        )}\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Min severity\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={query.options?.minSeverity}\n            options={severityOptions}\n            onChange={onMinSeverityChange}\n          />\n        </InlineField>\n        <InlineField label=\"Count\" labelWidth={12}>\n          <InlineSwitch\n            value={query.options?.count}\n            onChange={() => onChange({ ...query, options: { ...query.options, count: !query.options?.count } })}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField } from '@grafana/ui';\nimport { QueryEditorRow } from './QueryEditorRow';\nimport { MetricPicker } from '../../../components';\nimport { getVariableOptions } from './utils';\nimport { ZabbixDatasource } from '../../datasource';\nimport { ZabbixMetricsQuery } from '../../types';\n\nexport interface Props {\n  query: ZabbixMetricsQuery;\n  datasource: ZabbixDatasource;\n  onChange: (query: ZabbixMetricsQuery) => void;\n}\n\nexport const UserMacrosQueryEditor = ({ query, datasource, onChange }: Props) => {\n  const loadGroupOptions = async () => {\n    const groups = await datasource.zabbix.getAllGroups();\n    const options = groups?.map((group) => ({\n      value: group.name,\n      label: group.name,\n    }));\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: groupsLoading, value: groupsOptions }, fetchGroups] = useAsyncFn(async () => {\n    const options = await loadGroupOptions();\n    return options;\n  }, []);\n\n  const loadHostOptions = async (group: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hosts = await datasource.zabbix.getAllHosts(groupFilter);\n    let options: Array<SelectableValue<string>> = hosts?.map((host) => ({\n      value: host.name,\n      label: host.name,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: hostsLoading, value: hostOptions }, fetchHosts] = useAsyncFn(async () => {\n    const options = await loadHostOptions(query.group.filter);\n    return options;\n  }, [query.group.filter]);\n\n  const loadMacrosOptions = async (group: string, host: string) => {\n    const groupFilter = datasource.replaceTemplateVars(group);\n    const hostFilter = datasource.replaceTemplateVars(host);\n    const macros = await datasource.zabbix.getAllMacros(groupFilter, hostFilter);\n    let options: Array<SelectableValue<string>> = macros?.map((m) => ({\n      value: m.macro,\n      label: m.macro,\n    }));\n    options = _.uniqBy(options, (o) => o.value);\n    options.unshift({ value: '/.*/' });\n    options.unshift(...getVariableOptions());\n    return options;\n  };\n\n  const [{ loading: macrosLoading, value: macrosOptions }, fetchmacros] = useAsyncFn(async () => {\n    const options = await loadMacrosOptions(query.group.filter, query.host.filter);\n    return options;\n  }, [query.group.filter, query.host.filter]);\n\n  // Update suggestions on every metric change\n  const groupFilter = datasource.replaceTemplateVars(query.group?.filter);\n  const hostFilter = datasource.replaceTemplateVars(query.host?.filter);\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    fetchHosts();\n  }, [groupFilter]);\n\n  useEffect(() => {\n    fetchmacros();\n  }, [groupFilter, hostFilter]);\n\n  const onFilterChange = (prop: string) => {\n    return (value: string) => {\n      if (value !== null) {\n        onChange({ ...query, [prop]: { filter: value } });\n      }\n    };\n  };\n\n  return (\n    <>\n      <QueryEditorRow>\n        <InlineField label=\"Group\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.group.filter}\n            options={groupsOptions}\n            isLoading={groupsLoading}\n            onChange={onFilterChange('group')}\n          />\n        </InlineField>\n        <InlineField label=\"Host\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.host.filter}\n            options={hostOptions}\n            isLoading={hostsLoading}\n            onChange={onFilterChange('host')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n      <QueryEditorRow>\n        <InlineField label=\"Macros\" labelWidth={12}>\n          <MetricPicker\n            width={24}\n            value={query.macro.filter}\n            options={macrosOptions}\n            isLoading={macrosLoading}\n            onChange={onFilterChange('macro')}\n          />\n        </InlineField>\n      </QueryEditorRow>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\nimport * as c from '../constants';\nimport { migrate, DS_QUERY_SCHEMA } from '../migrations';\nimport { ZabbixDatasource } from '../datasource';\nimport { ShowProblemTypes, ZabbixDSOptions, ZabbixMetricsQuery, ZabbixQueryOptions } from '../types';\nimport { MetricsQueryEditor } from './QueryEditor/MetricsQueryEditor';\nimport { QueryFunctionsEditor } from './QueryEditor/QueryFunctionsEditor';\nimport { QueryOptionsEditor } from './QueryEditor/QueryOptionsEditor';\nimport { TextMetricsQueryEditor } from './QueryEditor/TextMetricsQueryEditor';\nimport { ProblemsQueryEditor } from './QueryEditor/ProblemsQueryEditor';\nimport { ItemIdQueryEditor } from './QueryEditor/ItemIdQueryEditor';\nimport { ServicesQueryEditor } from './QueryEditor/ServicesQueryEditor';\nimport { TriggersQueryEditor } from './QueryEditor/TriggersQueryEditor';\nimport { UserMacrosQueryEditor } from './QueryEditor/UserMacrosQueryEditor';\n\nconst zabbixQueryTypeOptions: Array<SelectableValue<string>> = [\n  {\n    value: c.MODE_METRICS,\n    label: 'Metrics',\n    description: 'Query numeric metrics',\n  },\n  {\n    value: c.MODE_TEXT,\n    label: 'Text',\n    description: 'Query text data',\n  },\n  {\n    value: c.MODE_ITSERVICE,\n    label: 'Services',\n    description: 'Query services SLA',\n  },\n  {\n    value: c.MODE_ITEMID,\n    label: 'Item Id',\n    description: 'Query metrics by item ids',\n  },\n  {\n    value: c.MODE_TRIGGERS,\n    label: 'Triggers',\n    description: 'Count triggers',\n  },\n  {\n    value: c.MODE_PROBLEMS,\n    label: 'Problems',\n    description: 'Query problems',\n  },\n  {\n    value: c.MODE_MACROS,\n    label: 'User macros',\n    description: 'User Macros',\n  },\n];\n\nconst getDefaultQuery: () => Partial<ZabbixMetricsQuery> = () => ({\n  schema: DS_QUERY_SCHEMA,\n  queryType: c.MODE_METRICS,\n  group: { filter: '' },\n  host: { filter: '' },\n  application: { filter: '' },\n  itemTag: { filter: '' },\n  item: { filter: '' },\n  macro: { filter: '' },\n  functions: [],\n  trigger: { filter: '' },\n  countTriggersBy: '',\n  tags: { filter: '' },\n  proxy: { filter: '' },\n  textFilter: '',\n  options: {\n    showDisabledItems: false,\n    skipEmptyValues: false,\n    disableDataAlignment: false,\n    useZabbixValueMapping: false,\n    useTrends: 'default',\n    count: false,\n  },\n  table: {\n    skipEmptyValues: false,\n  },\n});\n\nfunction getSLAQueryDefaults(): Partial<ZabbixMetricsQuery> {\n  return {\n    itServiceFilter: '',\n    slaFilter: '',\n    slaProperty: 'sla',\n    slaInterval: 'none',\n  };\n}\n\nfunction getProblemsQueryDefaults(): Partial<ZabbixMetricsQuery> {\n  return {\n    showProblems: ShowProblemTypes.Problems,\n    options: {\n      minSeverity: 0,\n      sortProblems: 'default',\n      acknowledged: 2,\n      hostsInMaintenance: false,\n      hostProxy: false,\n      limit: c.DEFAULT_ZABBIX_PROBLEMS_LIMIT,\n      useTimeRange: false,\n      count: false,\n    },\n  };\n}\n\nexport interface ZabbixQueryEditorProps\n  extends QueryEditorProps<ZabbixDatasource, ZabbixMetricsQuery, ZabbixDSOptions> {}\n\nexport const QueryEditor = ({ query, datasource, onChange, onRunQuery }: ZabbixQueryEditorProps) => {\n  const queryDefaults = getDefaultQuery();\n  query = { ...queryDefaults, ...query };\n  query.options = { ...queryDefaults.options, ...query.options };\n  const { queryType } = query;\n  if (queryType === c.MODE_PROBLEMS || queryType === c.MODE_TRIGGERS) {\n    const defaults = getProblemsQueryDefaults();\n    query = { ...defaults, ...query };\n    query.options = { ...defaults.options, ...query.options };\n  }\n  if (queryType === c.MODE_ITSERVICE) {\n    query = { ...getSLAQueryDefaults(), ...query };\n  }\n\n  // Migrate query on load\n  useEffect(() => {\n    const migratedQuery = migrate(query);\n    onChange(migratedQuery);\n  }, []);\n\n  const onPropChange = (prop: string) => {\n    return (option: SelectableValue) => {\n      if (option.value !== null) {\n        onChangeInternal({ ...query, [prop]: option.value });\n      }\n    };\n  };\n\n  const onChangeInternal = (query: ZabbixMetricsQuery) => {\n    onChange(query);\n    onRunQuery();\n  };\n\n  const onOptionsChange = (options: ZabbixQueryOptions) => {\n    onChangeInternal({ ...query, options });\n  };\n\n  const renderMetricsEditor = () => {\n    return (\n      <>\n        <MetricsQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />\n        <QueryFunctionsEditor query={query} onChange={onChangeInternal} />\n      </>\n    );\n  };\n\n  const renderItemIdsEditor = () => {\n    return (\n      <>\n        <ItemIdQueryEditor query={query} onChange={onChangeInternal} />\n        <QueryFunctionsEditor query={query} onChange={onChangeInternal} />\n      </>\n    );\n  };\n\n  const renderTextMetricsEditor = () => {\n    return (\n      <>\n        <TextMetricsQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />\n        {/* <QueryFunctionsEditor query={query} onChange={onChangeInternal} /> */}\n      </>\n    );\n  };\n\n  const renderITServicesEditor = () => {\n    return (\n      <>\n        <ServicesQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />\n        <QueryFunctionsEditor query={query} onChange={onChangeInternal} />\n      </>\n    );\n  };\n\n  const renderProblemsEditor = () => {\n    return <ProblemsQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />;\n  };\n\n  const renderTriggersEditor = () => {\n    return <TriggersQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />;\n  };\n\n  const renderUserMacrosEditor = () => {\n    return <UserMacrosQueryEditor query={query} datasource={datasource} onChange={onChangeInternal} />;\n  };\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Query type\" labelWidth={12}>\n          <Select\n            isSearchable={false}\n            width={24}\n            value={queryType}\n            options={zabbixQueryTypeOptions}\n            onChange={onPropChange('queryType')}\n          />\n        </InlineField>\n        <div className=\"gf-form gf-form--grow\">\n          <div className=\"gf-form-label gf-form-label--grow\" />\n        </div>\n      </InlineFieldRow>\n      {queryType === c.MODE_METRICS && renderMetricsEditor()}\n      {queryType === c.MODE_ITEMID && renderItemIdsEditor()}\n      {queryType === c.MODE_TEXT && renderTextMetricsEditor()}\n      {queryType === c.MODE_ITSERVICE && renderITServicesEditor()}\n      {queryType === c.MODE_PROBLEMS && renderProblemsEditor()}\n      {queryType === c.MODE_TRIGGERS && renderTriggersEditor()}\n      {queryType === c.MODE_MACROS && renderUserMacrosEditor()}\n      <QueryOptionsEditor queryType={queryType} queryOptions={query.options} onChange={onOptionsChange} />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { css } from '@emotion/css';\nimport { EventsWithValidation, ValidationEvents, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { isRegex, variableRegex } from '../utils';\n\nimport * as grafanaUi from '@grafana/ui';\nconst Input = (grafanaUi as any).LegacyForms?.Input || (grafanaUi as any).Input;\n\nconst variablePattern = RegExp(`^${variableRegex.source}`);\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  inputRegex: css`\n    color: ${theme.colors.warning.main};\n  `,\n  inputVariable: css`\n    color: ${theme.colors.action.focus};\n  `,\n});\n\nconst zabbixInputValidationEvents: ValidationEvents = {\n  [EventsWithValidation.onBlur]: [\n    {\n      rule: (value) => {\n        if (!value) {\n          return true;\n        }\n        if (value.length > 1 && value[0] === '/') {\n          if (value[value.length - 1] !== '/') {\n            return false;\n          }\n        }\n        return true;\n      },\n      errorMessage: 'Not a valid regex',\n    },\n    {\n      rule: (value) => {\n        if (value === '*') {\n          return false;\n        }\n        return true;\n      },\n      errorMessage: 'Wildcards not supported. Use /.*/ instead',\n    },\n  ],\n};\n\nexport const ZabbixInput: FC<any> = ({ value, ref, validationEvents, ...restProps }) => {\n  const styles = useStyles2(getStyles);\n\n  let inputClass = styles.inputRegex;\n  if (variablePattern.test(value as string)) {\n    inputClass = styles.inputVariable;\n  } else if (isRegex(value)) {\n    inputClass = styles.inputRegex;\n  }\n\n  return <Input className={inputClass} value={value} validationEvents={zabbixInputValidationEvents} {...restProps} />;\n};\n","import React, { PureComponent } from 'react';\nimport { parseLegacyVariableQuery } from '../utils';\nimport { SelectableValue } from '@grafana/data';\nimport { VariableQuery, VariableQueryData, VariableQueryProps, VariableQueryTypes } from '../types';\nimport { ZabbixInput } from './ZabbixInput';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\n\nexport class ZabbixVariableQueryEditor extends PureComponent<VariableQueryProps, VariableQueryData> {\n  queryTypes: Array<SelectableValue<VariableQueryTypes>> = [\n    { value: VariableQueryTypes.Group, label: 'Group' },\n    { value: VariableQueryTypes.Host, label: 'Host' },\n    { value: VariableQueryTypes.Application, label: 'Application' },\n    { value: VariableQueryTypes.ItemTag, label: 'Item tag' },\n    { value: VariableQueryTypes.Item, label: 'Item' },\n    { value: VariableQueryTypes.ItemValues, label: 'Item values' },\n  ];\n\n  defaults: VariableQueryData = {\n    selectedQueryType: { value: VariableQueryTypes.Group, label: 'Group' },\n    queryType: VariableQueryTypes.Group,\n    group: '/.*/',\n    host: '',\n    application: '',\n    itemTag: '',\n    item: '',\n  };\n\n  constructor(props: VariableQueryProps) {\n    super(props);\n\n    if (this.props.query && typeof this.props.query === 'string') {\n      // Backward compatibility\n      const query = parseLegacyVariableQuery(this.props.query);\n      const selectedQueryType = this.getSelectedQueryType(query.queryType);\n      this.state = {\n        selectedQueryType,\n        legacyQuery: this.props.query,\n        ...query,\n      };\n    } else if (this.props.query) {\n      const query = this.props.query as VariableQuery;\n      const selectedQueryType = this.getSelectedQueryType(query.queryType);\n      this.state = {\n        ...this.defaults,\n        ...query,\n        selectedQueryType,\n      };\n    } else {\n      this.state = this.defaults;\n    }\n  }\n\n  getSelectedQueryType(queryType: VariableQueryTypes) {\n    return this.queryTypes.find((q) => q.value === queryType);\n  }\n\n  handleQueryUpdate = (evt: React.ChangeEvent<HTMLInputElement>, prop: string) => {\n    const value = evt.currentTarget.value;\n    this.setState((prevState: VariableQueryData) => {\n      const newQuery = {\n        ...prevState,\n      };\n      newQuery[prop] = value;\n\n      return {\n        ...newQuery,\n      };\n    });\n  };\n\n  handleQueryChange = () => {\n    const { queryType, group, host, application, itemTag, item } = this.state;\n    const queryModel = { queryType, group, host, application, itemTag, item };\n    this.props.onChange(queryModel, `Zabbix - ${queryType}`);\n  };\n\n  handleQueryTypeChange = (selectedItem: SelectableValue<VariableQueryTypes>) => {\n    this.setState({\n      ...this.state,\n      selectedQueryType: selectedItem,\n      queryType: selectedItem.value,\n    });\n\n    const { group, host, application, itemTag, item } = this.state;\n    const queryType = selectedItem.value;\n    const queryModel = { queryType, group, host, application, itemTag, item };\n    this.props.onChange(queryModel, `Zabbix - ${queryType}`);\n  };\n\n  render() {\n    const { selectedQueryType, legacyQuery, group, host, application, itemTag, item } = this.state;\n    const { datasource } = this.props;\n    const supportsItemTags = datasource?.zabbix?.isZabbix54OrHigherSync() || false;\n\n    return (\n      <>\n        <div className=\"gf-form max-width-21\">\n          <InlineFormLabel width={10}>Query Type</InlineFormLabel>\n          <Select\n            width={11}\n            value={selectedQueryType}\n            options={this.queryTypes}\n            onChange={this.handleQueryTypeChange}\n          />\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form max-width-30\">\n            <InlineFormLabel width={10}>Group</InlineFormLabel>\n            <ZabbixInput\n              value={group}\n              onChange={(evt) => this.handleQueryUpdate(evt, 'group')}\n              onBlur={this.handleQueryChange}\n            />\n          </div>\n          {selectedQueryType.value !== VariableQueryTypes.Group && (\n            <div className=\"gf-form max-width-30\">\n              <InlineFormLabel width={10}>Host</InlineFormLabel>\n              <ZabbixInput\n                value={host}\n                onChange={(evt) => this.handleQueryUpdate(evt, 'host')}\n                onBlur={this.handleQueryChange}\n              />\n            </div>\n          )}\n        </div>\n        {(selectedQueryType.value === VariableQueryTypes.Application ||\n          selectedQueryType.value === VariableQueryTypes.ItemTag ||\n          selectedQueryType.value === VariableQueryTypes.Item ||\n          selectedQueryType.value === VariableQueryTypes.ItemValues) && (\n          <div className=\"gf-form-inline\">\n            {supportsItemTags && (\n              <div className=\"gf-form max-width-30\">\n                <InlineFormLabel width={10}>Item tag</InlineFormLabel>\n                <ZabbixInput\n                  value={itemTag}\n                  onChange={(evt) => this.handleQueryUpdate(evt, 'itemTag')}\n                  onBlur={this.handleQueryChange}\n                />\n              </div>\n            )}\n            {!supportsItemTags && (\n              <div className=\"gf-form max-width-30\">\n                <InlineFormLabel width={10}>Application</InlineFormLabel>\n                <ZabbixInput\n                  value={application}\n                  onChange={(evt) => this.handleQueryUpdate(evt, 'application')}\n                  onBlur={this.handleQueryChange}\n                />\n              </div>\n            )}\n            {(selectedQueryType.value === VariableQueryTypes.Item ||\n              selectedQueryType.value === VariableQueryTypes.ItemValues) && (\n              <div className=\"gf-form max-width-30\">\n                <InlineFormLabel width={10}>Item</InlineFormLabel>\n                <ZabbixInput\n                  value={item}\n                  onChange={(evt) => this.handleQueryUpdate(evt, 'item')}\n                  onBlur={this.handleQueryChange}\n                />\n              </div>\n            )}\n          </div>\n        )}\n\n        {legacyQuery && (\n          <div className=\"gf-form\">\n            <InlineFormLabel width={10} tooltip=\"Original query string, read-only\">\n              Legacy Query\n            </InlineFormLabel>\n            <Input value={legacyQuery} readOnly={true} />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Button, DataSourceHttpSettings, InlineFormLabel, LegacyForms, Select } from '@grafana/ui';\nimport { ZabbixDSOptions, ZabbixSecureJSONData } from '../types';\n\nconst { FormField, Switch } = LegacyForms;\n\nconst SUPPORTED_SQL_DS = ['mysql', 'postgres', 'influxdb'];\n\nexport type Props = DataSourcePluginOptionsEditorProps<ZabbixDSOptions, ZabbixSecureJSONData>;\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  const [selectedDBDatasource, setSelectedDBDatasource] = useState(null);\n  const [currentDSType, setCurrentDSType] = useState('');\n\n  // Apply some defaults on initial render\n  useEffect(() => {\n    const { jsonData, secureJsonFields } = options;\n\n    // Set secureJsonFields.password to password and then remove it from config\n    const { password, ...restJsonData } = jsonData;\n    if (!secureJsonFields?.password) {\n      if (!options.secureJsonData) {\n        options.secureJsonData = {};\n      }\n      options.secureJsonData.password = password;\n    }\n\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        trends: true,\n        trendsFrom: '',\n        trendsRange: '',\n        cacheTTL: '',\n        timeout: undefined,\n        disableDataAlignment: false,\n        ...restJsonData,\n      },\n    });\n\n    if (options.jsonData.dbConnectionEnable) {\n      if (!options.jsonData.dbConnectionDatasourceId) {\n        const dsName = options.jsonData.dbConnectionDatasourceName;\n        getDataSourceSrv()\n          .get(dsName)\n          .then((ds) => {\n            if (ds) {\n              const selectedDs = getDirectDBDatasources().find((dsOption) => dsOption.id === ds.id);\n              setSelectedDBDatasource({ label: selectedDs?.name, value: selectedDs?.id });\n              setCurrentDSType(selectedDs?.type);\n              onOptionsChange({\n                ...options,\n                jsonData: {\n                  ...options.jsonData,\n                  dbConnectionDatasourceId: ds.id,\n                },\n              });\n            }\n          });\n      } else {\n        const selectedDs = getDirectDBDatasources().find(\n          (dsOption) => dsOption.id === options.jsonData.dbConnectionDatasourceId\n        );\n        setSelectedDBDatasource({ label: selectedDs?.name, value: selectedDs?.id });\n        setCurrentDSType(selectedDs?.type);\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl={'http://localhost/zabbix/api_jsonrpc.php'}\n        dataSourceConfig={options}\n        showAccessOptions={true}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Zabbix API details</h3>\n        <div className=\"gf-form max-width-25\">\n          <FormField\n            labelWidth={7}\n            inputWidth={15}\n            label=\"Username\"\n            value={options.jsonData.username || ''}\n            onChange={jsonDataChangeHandler('username', options, onOptionsChange)}\n            required\n          />\n        </div>\n        <div className=\"gf-form max-width-25\">\n          {options.secureJsonFields?.password ? (\n            <>\n              <FormField\n                labelWidth={7}\n                inputWidth={15}\n                label=\"Password\"\n                disabled={true}\n                value=\"\"\n                placeholder=\"Configured\"\n              />\n              <Button onClick={resetSecureJsonField('password', options, onOptionsChange)}>Reset</Button>\n            </>\n          ) : (\n            <FormField\n              labelWidth={7}\n              inputWidth={15}\n              label=\"Password\"\n              type=\"password\"\n              value={options.secureJsonData?.password || options.jsonData.password || ''}\n              onChange={secureJsonDataChangeHandler('password', options, onOptionsChange)}\n              required\n            />\n          )}\n        </div>\n        <Switch\n          label=\"Trends\"\n          labelClass=\"width-7\"\n          checked={options.jsonData.trends}\n          onChange={jsonDataSwitchHandler('trends', options, onOptionsChange)}\n        />\n        {options.jsonData.trends && (\n          <>\n            <div className=\"gf-form\">\n              <FormField\n                labelWidth={7}\n                inputWidth={4}\n                label=\"After\"\n                value={options.jsonData.trendsFrom || ''}\n                placeholder=\"7d\"\n                onChange={jsonDataChangeHandler('trendsFrom', options, onOptionsChange)}\n                tooltip=\"Time after which trends will be used.\n                  Best practice is to set this value to your history storage period (7d, 30d, etc).\"\n              />\n            </div>\n            <div className=\"gf-form\">\n              <FormField\n                labelWidth={7}\n                inputWidth={4}\n                label=\"Range\"\n                value={options.jsonData.trendsRange || ''}\n                placeholder=\"4d\"\n                onChange={jsonDataChangeHandler('trendsRange', options, onOptionsChange)}\n                tooltip=\"Time range width after which trends will be used instead of history.\n                  It's better to set this value in range of 4 to 7 days to prevent loading large amount of history data.\"\n              />\n            </div>\n          </>\n        )}\n        <div className=\"gf-form\">\n          <FormField\n            labelWidth={7}\n            inputWidth={4}\n            label=\"Cache TTL\"\n            value={options.jsonData.cacheTTL || ''}\n            placeholder=\"1h\"\n            onChange={jsonDataChangeHandler('cacheTTL', options, onOptionsChange)}\n            tooltip=\"Zabbix data source caches metric names in memory. Specify how often data will be updated.\"\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormField\n            labelWidth={7}\n            inputWidth={4}\n            type=\"number\"\n            label=\"Timeout\"\n            value={options.jsonData.timeout}\n            onChange={(event) => {\n              onOptionsChange({\n                ...options,\n                jsonData: { ...options.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n              });\n            }}\n            tooltip=\"Zabbix API connection timeout in seconds. Default is 30.\"\n          />\n        </div>\n      </div>\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Direct DB Connection</h3>\n        <Switch\n          label=\"Enable\"\n          labelClass=\"width-9\"\n          checked={options.jsonData.dbConnectionEnable}\n          onChange={jsonDataSwitchHandler('dbConnectionEnable', options, onOptionsChange)}\n        />\n        {options.jsonData.dbConnectionEnable && (\n          <>\n            <div className=\"gf-form\">\n              <InlineFormLabel width={9}>Data Source</InlineFormLabel>\n              <Select\n                width={32}\n                options={getDirectDBDSOptions()}\n                value={selectedDBDatasource}\n                onChange={directDBDatasourceChanegeHandler(\n                  options,\n                  onOptionsChange,\n                  setSelectedDBDatasource,\n                  setCurrentDSType\n                )}\n              />\n            </div>\n            {currentDSType === 'influxdb' && (\n              <div className=\"gf-form\">\n                <FormField\n                  labelWidth={9}\n                  inputWidth={16}\n                  label=\"Retention Policy\"\n                  value={options.jsonData.dbConnectionRetentionPolicy || ''}\n                  placeholder=\"Retention policy name\"\n                  onChange={jsonDataChangeHandler('dbConnectionRetentionPolicy', options, onOptionsChange)}\n                  tooltip=\"Specify retention policy name for fetching long-term stored data (optional).\n                    Leave it blank if only default retention policy used.\"\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Other</h3>\n        <Switch\n          label=\"Disable acknowledges for read-only users\"\n          labelClass=\"width-20\"\n          checked={options.jsonData.disableReadOnlyUsersAck}\n          onChange={jsonDataSwitchHandler('disableReadOnlyUsersAck', options, onOptionsChange)}\n        />\n        <Switch\n          label=\"Disable data alignment\"\n          labelClass=\"width-20\"\n          checked={!!options.jsonData.disableDataAlignment}\n          onChange={jsonDataSwitchHandler('disableDataAlignment', options, onOptionsChange)}\n          tooltip=\"Data alignment feature aligns points based on item update interval.\n            For instance, if value collected once per minute, then timestamp of the each point will be set to the start of corresponding minute.\n            This alignment required for proper work of the stacked graphs.\n            If you don't need stacked graphs and want to get exactly the same timestamps as in Zabbix, then you can disable this feature.\"\n        />\n      </div>\n    </>\n  );\n};\n\nconst jsonDataChangeHandler =\n  (\n    key: keyof ZabbixDSOptions,\n    value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n    onChange: Props['onOptionsChange']\n  ) =>\n  (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: event.currentTarget.value,\n      },\n    });\n  };\n\nconst jsonDataSwitchHandler =\n  (\n    key: keyof ZabbixDSOptions,\n    value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n    onChange: Props['onOptionsChange']\n  ) =>\n  (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      jsonData: {\n        ...value.jsonData,\n        [key]: (event.target as HTMLInputElement).checked,\n      },\n    });\n  };\n\nconst secureJsonDataChangeHandler =\n  (\n    key: keyof ZabbixDSOptions,\n    value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n    onChange: Props['onOptionsChange']\n  ) =>\n  (event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>) => {\n    onChange({\n      ...value,\n      secureJsonData: {\n        ...value.secureJsonData,\n        [key]: event.currentTarget.value,\n      },\n    });\n  };\n\nconst resetSecureJsonField =\n  (\n    key: keyof ZabbixDSOptions,\n    value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n    onChange: Props['onOptionsChange']\n  ) =>\n  (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    onChange({\n      ...value,\n      secureJsonFields: {\n        ...value.secureJsonFields,\n        [key]: false,\n      },\n    });\n  };\n\nconst directDBDatasourceChanegeHandler =\n  (\n    options: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n    onChange: Props['onOptionsChange'],\n    setSelectedDS: React.Dispatch<any>,\n    setSelectedDSType: React.Dispatch<any>\n  ) =>\n  (value: SelectableValue<number>) => {\n    const selectedDs = getDirectDBDatasources().find((dsOption) => dsOption.id === value.value);\n    setSelectedDS({ label: selectedDs.name, value: selectedDs.id });\n    setSelectedDSType(selectedDs.type);\n    onChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        dbConnectionDatasourceId: value.value,\n      },\n    });\n  };\n\nconst getDirectDBDatasources = () => {\n  let dsList = (getDataSourceSrv() as any).getAll();\n  dsList = dsList.filter((ds) => SUPPORTED_SQL_DS.includes(ds.type));\n  return dsList;\n};\n\nconst getDirectDBDSOptions = () => {\n  const dsList = getDirectDBDatasources();\n  const dsOpts: Array<SelectableValue<number>> = dsList.map((ds) => ({\n    label: ds.name,\n    value: ds.id,\n    description: ds.type,\n  }));\n  return dsOpts;\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { ZabbixDatasource } from './datasource';\nimport { QueryEditor } from './components/QueryEditor';\nimport { ZabbixVariableQueryEditor } from './components/VariableQueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin(ZabbixDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setVariableQueryEditor(ZabbixVariableQueryEditor);\n"],"names":["Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","get","self","key","doUse","node","hit","value","isStale","del","now","Date","unshiftNode","maxAge","diff","trim","walker","tail","prev","length","delete","removeNode","Entry","constructor","this","forEachStep","fn","thisp","undefined","call","module","exports","options","max","TypeError","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","head","next","keys","toArray","map","k","values","Map","dump","v","e","filter","h","dumpLru","set","len","has","item","unshift","peek","pop","load","arr","l","expiresAt","prune","ANY","Comparator","comp","parseOptions","loose","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","toString","test","er","cmp","intersects","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","raw","format","split","parseRange","c","first","isNullSet","isAny","comps","join","memoKey","Object","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","rangeList","parseComparator","replaceGTE0","rangeMap","size","result","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","i","testSet","comparators","remainingComparators","slice","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","b","compareBuild","inc","release","identifier","push","isNaN","Error","s","eq","neq","gt","gte","lt","lte","op","String","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","sort","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","Number","MAX_SAFE_COMPONENT_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","opts","reduce","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","sawNonNull","OUTER","simpleSub","simpleDom","isSub","prototype","iterator","arguments","Node","create","pushNode","res","shift","forEachReverse","n","getReverse","mapReverse","initial","acc","reduceReverse","Array","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","inserted","reverse","__WEBPACK_EXTERNAL_MODULE__7644__","__WEBPACK_EXTERNAL_MODULE__3305__","__WEBPACK_EXTERNAL_MODULE__3545__","__WEBPACK_EXTERNAL_MODULE__7388__","__WEBPACK_EXTERNAL_MODULE__346__","__WEBPACK_EXTERNAL_MODULE__7294__","__WEBPACK_EXTERNAL_MODULE__4745__","__WEBPACK_EXTERNAL_MODULE__7084__","__WEBPACK_EXTERNAL_MODULE__7399__","__WEBPACK_EXTERNAL_MODULE__5980__","__WEBPACK_EXTERNAL_MODULE__8283__","__WEBPACK_EXTERNAL_MODULE__2650__","__WEBPACK_EXTERNAL_MODULE__2729__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","prop","hasOwnProperty","toStringTag","MODE_METRICS","MODE_ITSERVICE","MODE_TEXT","MODE_ITEMID","MODE_TRIGGERS","MODE_PROBLEMS","MODE_MACROS","TRIGGER_SEVERITY","val","text","RANGE_VARIABLE_VALUE","VariableQueryTypes","Group","Host","Application","Macro","ItemTag","Item","ItemValues","ShowProblemTypes","Problems","Recent","History","ZBXQueryUpdatedEvent","BusEventWithPayload","expandItems","items","key_params","paramStr","params","quoted","in_array","param","symbol","splitKeyParams","substring","indexOf","lastIndexOf","expandItemName","key_","type","MACRO_PATTERN","replaceMacro","macros","isTriggerItem","itemName","url","item_macros","macro","host_macros","hostid","hostIdFound","hosts","macro_def","macro_value","macro_regex","escapeMacro","parseLegacyVariableQuery","query","queryType","parts","splitPattern","isContainsBraces","part","splitTemplateQuery","template","app","group","host","application","regexPattern","isRegex","str","getRangeScopedVars","msRange","sRange","Math","round","regularRange","rangeUtil","__range_ms","__range_s","__range","__range_series","buildRegex","matches","pattern","flags","escapeRegex","parseItemInterval","interval","normalizedInterval","parsedInterval","normalizeZabbixInterval","parseInterval","momentInterval","moment","valueOf","sequence","funcsArray","compactQuery","parseTags","tagStr","tags","tag","tagParts","parseItemTag","itemTag","firstIdx","itemTagToString","mustArray","unitsMap","bps","B","Bps","uptime","qps","iops","Hz","V","C","RPM","dBm","knownGrafanaUnits","units","categories","getValueFormats","category","unitDesc","submenu","unit","getKnownGrafanaUnits","convertZabbixUnit","zabbixUnit","swap","newList","migrate","target","resultFormat","mode","hostFilter","itemFilter","downsampleFunction","isGrafana2target","isArray","fixTargetGroup","convertToRegex","macroFilter","migrateFrom2To3version","functions","f","def","migratePercentileAgg","migrateQueryType","slaInterval","migrateSLA","sortProblems","migrateProblemSort","migrateApplications","slaProperty","property","migrateSLAProperty","triggers","minSeverity","count","migrateTriggersMode","schema","countTriggersBy","migrateNewTriggersCountModes","severities","migrateProblemsSeverity","prepareAnnotation","json","defaultTarget","trigger","minseverity","showOkEvents","hideAcknowledged","showHostname","getDefaultAnnotationTarget","fromAnnotations","Transform","Aggregate","Filter","Trends","Time","Alias","Special","addFuncDef","funcDef","defaultParams","shortName","funcList","catName","FuncInstance","bindFunction","metricFunctions","func","bindedFunc","message","render","metricExp","parameters","paramType","parseFloat","isFinite","_hasMultipleParamsInString","strValue","optional","updateParam","partVal","idx","updateText","createFuncInstance","getCategories","extractText","timeShift","duration","utils","time","setAlias","alias","frame","fields","valueField","find","TIME_SERIES_VALUE_FIELD_NAME","config","custom","scopedVars","getTemplateSrv","displayNameFromDS","fieldIndex","field","FieldType","setAliasByRegex","replaceAlias","regexp","newAlias","state","convertHistory","history","addHostName","convertPointCallback","grouped_history","hist","itemid","__zbx_item","__zbx_item_name","__zbx_item_key","__zbx_item_interval","delay","datapoints","convertText","point","textFilter","useCaptureGroups","clock","ns","extractedValue","convertHistoryPoint","convertTrendPoint","valueType","value_min","value_max","value_avg","MutableDataFrame","refId","dataRow","Macros","table","TableModel","addColumn","itemHistory","lastPoint","lastValue","skipEmptyValues","rows","itservice","slaObject","targetSLA","serviceid","sla","targetStatus","parseInt","status","slaArr","groups","timeRange","stats","priority","getTriggerStats","ArrayVector","decimals","groupNames","g","Disaster","High","Average","Warning","Information","triggersCount","err","log","TIME_SERIES_TIME_FIELD_NAME","timeseries","series","valueMappings","fieldType","seriesName","timeFiled","valueFiled","labels","itemInterval","item_key","mappings","valuemapid","mapping","MappingType","newvalue","useZabbixValueMapping","response","request","frameJSON","dataFrameFromJSON","timeField","timeIndex","getTimeField","j","intervalMs","timeSeriesData","ts","meta","dp","intervalNS","data","maxLengthIndex","maxLength","getLongestFrame","minTimestamp","firstTs","timestamps","missingTimestamps","missingValues","frameInterval","concat","zabbixUnits","joinTriggersWithProblems","problems","problemDTOList","objectid","problemDTO","timestamp","triggerid","eventid","severity","acknowledged","acknowledges","suppressed","suppression_data","description","comments","opdata","alerts","expression","correlation_mode","correlation_tag","manual_close","joinTriggersWithEvents","events","valueFromEvent","datasource","proxies","proxy_hostid","hostProxy","proxy","users","ack","userData","userid","username","surname","dateTime","hostInMaintenance","maintenance_status","maintenance","showAckButton","triggerList","replacedTarget","triggerFilter","filterTriggers","hostsInMaintenance","problemsField","CachingProxy","cacheRequest","funcName","funcScope","cacheObject","hash","getRequestHash","cacheEnabled","_isExpired","Promise","resolve","apply","then","proxify","promises","promiseKeeper","catch","callOnce","proxifyWithCache","proxified","object_age","ttl","cacheOptions","enabled","chr","charCodeAt","getHash","JSON","stringify","HISTORY_TO_TABLE_MAP","TREND_TO_TABLE_MAP","consolidateByTrendColumns","avg","sum","DBConnector","static","dsId","dsName","ds","getDataSourceSrv","getList","reject","loadDBDataSource","loadDatasource","datasourceId","datasourceName","datasourceTypeId","DEFAULT_QUERY_LIMIT","consolidateByFunc","roundInterval","kbn","ZabbixAPIConnector","method","backendAPIRequest","initVersion","requestOptions","backendAPIUrl","headers","hideFromInspector","basicAuth","withCredentials","Authorization","getBackendSrv","fetch","toPromise","getVersion","getVersionPromise","isZabbix54OrHigher","acknowledgeEvent","action","eventids","getGroups","output","sortfield","real_hosts","getHosts","groupids","getApps","hostids","getItems","appids","itemtype","itemTagFilter","webitems","selectHosts","applicationids","value_type","selectTags","allTags","tagsParam","evaltype","getItemsByIDs","itemids","getMacros","getUserMacros","hostmacroids","getGlobalMacros","globalmacro","getLastValue","lastvalue","getHistory","timeFrom","timeTill","grouped_items","sortorder","time_from","time_till","all","getTrend_ZBXNEXT1193","trend","getTrend_30","getITService","serviceids","getServices","getSLAList","getSLA","timeTo","intervals","buildSLAIntervals","getSLAInterval","getSLA60","slaObjects","sliParams","slaid","period_from","period_to","periods","sliResponse","slaLikeResponse","sli","sliItem","downtimeTime","downtime","okTime","getSLI","getProblems","recent","limit","selectAcknowledges","selectSuppressionData","source","object","getTriggersByIds","triggerids","expandDescription","expandData","expandComment","expandExpression","monitored","skipDependent","selectGroups","selectItems","preservekeys","getTriggers","showTriggers","selectLastEvent","lastChangeSince","lastChangeTill","getEvents","objectids","showEvents","select_acknowledges","getEventsHistory","getExtendedEventData","getEventAlerts","selectUsers","getAcknowledges","event","getAlerts","getHostAlerts","min_severity","countOutput","withLastEventUnacknowledged","filterTriggersByAcknowledge","getHostICAlerts","getHostPCAlerts","getProxies","getScripts","executeScript","scriptid","getValueMappings","selectMappings","getUsers","getTrend","lastEvent","floor","ceil","historyQuery","intervalSec","aggFunction","time_expression","trendsQuery","valueColumn","testQuery","ITEMID_FORMAT","TEST_QUERY","SQLConnector","loadSQLDialect","sqlDialect","postgres","mysql","testDataSource","invokeSQLQuery","getAggFunc","results","getTrends","consolidateBy","dbConnector","queryDef","rawSql","maxDataPoints","datasourceRequest","queries","frames","super","numOfIntervals","InfluxDBConnector","influxDS","testDatasource","retentionPolicy","buildHistoryQuery","invokeInfluxDBQuery","influxSeriesList","y","influxSeries","tsBuffer","valuesBuffer","dataFrameToJSON","handleInfluxHistoryResponse","buildWhereClause","_seriesQuery","REQUESTS_TO_PROXYFY","REQUESTS_TO_CACHE","REQUESTS_TO_BIND","Zabbix","initDBConnector","connectorOptions","dbConnectionRetentionPolicy","proxifyRequests","zabbixAPI","cachingProxy","cacheRequests","bindRequests","bind","zabbixVersion","dbConnectorStatus","getAllGroups","enableDirectDBConnection","testResult","dsType","datasourceTypeName","supportsApplications","supportSLA","isZabbix54OrHigherSync","getItemsFromTarget","filters","getMacrosFromTarget","getUMacros","getHostsApsFromTarget","apps","appFilterEmpty","getHostsFromICTarget","getHostsFromPCTarget","getCProblems","groupFilter","findByFilter","getAllHosts","appFilter","skipAppFilter","filterByQuery","appsResponse","getAllMacros","regex","filterPattern","zbx_obj","filterByMRegex","filterByMacro","getItemTags","getAllItems","getAllItemsBefore54","showDisabledItems","expandUserMacro","hostIds","getHostIds","getItemValues","subtract","unix","getITServices","itServiceFilter","getSLAs","slaFilter","proxyFilter","filteredGroups","filteredHosts","filteredApps","problem","filterTriggersByProxy","getProblemsHistory","getFilteredProxies","proxy_ids","proxyid","includes","getHistoryTS","getHistoryDB","responseHandler","getTrendsDB","getHistoryText","itservices","slas","itServiceIds","valueFields","service","handleServiceResponse","slaIds","slaId","period","mapLegacySLAProperty","slis","serviceId","handleSLIResponse","slaResponse","cacheTTL","dbConnectionDatasourceId","dbConnectionDatasourceName","filterByRegex","finded","findByName","filterByName","__assign","assign","useAsyncFn","deps","initialState","loading","mountedRef","lastCallId","useRef","isMounted","useCallback","current","useEffect","_a","useState","callback","_i","callId","prevState","QueryEditorRow","children","InlineFieldRow","div","className","stylesFactory","theme","actionBlue","GrafanaThemeType","hoverBlue","button","css","palette","gray1","colors","icon","React","Consumer","ModalController","renderModal","component","props","modalRoot","appendChild","modalNode","modal","createElement","provideTheme","ReactDOM","createPortal","ChildrenComponent","showModal","hideModal","document","body","setState","removeChild","MetricPickerMenu","offset","minWidth","selected","onSelect","useTheme2","styles","getSelectStyles","customStyles","useStyles2","getStyles","cx","menu","menuWrapper","menuLeft","horizontal","vertical","abs","aria-label","CustomScrollbar","autoHide","autoHeightMax","hideHorizontalTrack","optionBody","option","MenuOption","onClick","isFocused","hideDescription","disabled","ref","wrapperClassName","menuOptionWrapper","optionFocused","menuOptionDisabled","preventDefault","stopPropagation","menuOptionBody","span","label","optionDescription","Tooltip","content","Icon","menuOptionInfoSign","displayName","menuWidth","zIndex","dropdown","spacing","container","border","weak","shape","borderRadius","background","primary","typography","fontWeightRegular","MetricPicker","isLoading","width","onChange","isOpen","setOpen","setQuery","filteredOptions","setFilteredOptions","selectedOptionIdx","setSelectedOptionIdx","inputClass","inputRegexp","inputVariable","startsWith","onClose","onMenuOptionSelect","newValue","data-testid","style","position","ClickOutsideWrapper","Input","newQuery","currentTarget","filtered","onBlur","onMouseDown","suffix","Spinner","onKeyDown","warning","main","getVariableOptions","variables","getVariables","severityOptions","AnnotationQueryEditor","annotation","onAnnotationChange","loadGroupOptions","zabbix","groupsLoading","groupsOptions","fetchGroups","loadHostOptions","replaceTemplateVars","hostsLoading","hostOptions","fetchHosts","loadAppOptions","getAllApps","appsLoading","appOptions","fetchApps","onFilterChange","onOptionSwitch","InlineField","labelWidth","defaultValue","placeholder","Select","isSearchable","InlineSwitch","ZabbixDatasource","DataSourceApi","requestTargets","targets","migrations","backendResponsePromise","backendQuery","dbConnectionResponsePromise","dbConnectionQuery","frontendResponsePromise","frontendQuery","annotationResposePromise","annotationRequest","rsp","backendRes","dbConnectionRes","frontendRes","annotationRes","LoadingState","requestId","isBackendTarget","hide","replaceTargetVariables","toDataQueryResponse","resp","sortByRefId","applyFrontendFunctions","frontendTargets","isDBConnectionTarget","buildTimeRange","queryTextData","queryITServiceData","queryTriggersData","queryProblems","queryUserMacrosData","isDataFrame","useTrends","isUseTrends","queryItemIdData","queryNumericData","dateMath","timeFunctions","bindFunctionDefs","time_to","queryStart","getTime","queryNumericDataForItems","queryEnd","enableDebugLog","handleBackendPostProcessingResponse","getTrendValueType","getConsolidateBy","invokeDataProcessingQuery","trendFunctions","trendValueFunc","getRequestTarget","zabbixItemIdsTemplateFormat","isOldVersion","itservicesdp","backendRequest","processedResponse","userMacros","queryTriggersICData","queryTriggersPCData","applicationid","getTriggersOptions","problemsOptions","useTimeRange","userIsEditor","contextSrv","showProblems","getProxiesPromise","disableReadOnlyUsersAck","tagsFilter","getProblemsPromise","getUsersPromise","zabbixUsers","sourceProxies","problemsHandler","title","code","metricFindQuery","resultPromise","queryModel","metrics","formatMetric","targetContainsTemplate","templateSrv","variableExists","annotationQueryLegacy","toDataFrame","rangeRaw","problemName","formattedAcknowledges","formatted_acknowledges","annotationTags","useTrendsFrom","trendsFrom","useTrendsRange","trendsRange","trends","instanceSettings","annotations","QueryEditor","jsonData","dbConnection","shouldMigrateDSConfig","oldVersion","dbConnectionOptions","dbConnectionEnable","enable","timeout","disableDataAlignment","zabbixOptions","functionDefs","aggregationFunctions","aggFuncDefs","dataProcessor","metricObj","expandable","zabbixTemplateFormat","MetricsQueryEditor","loadTagOptions","tagList","tagsLoading","tagOptions","fetchTags","loadItemOptions","tagFilter","itemOptions","itemsLoading","fetchItems","FunctionHelpButton","window","open","FunctionEditorControls","onMoveLeft","onMoveRight","onRemove","display","justifyContent","fontWeight","fontWeightMedium","fontSize","bodySmall","cursor","FunctionEditor","updatePopperPosition","placement","interactive","FunctionParamEditor","editableParam","onExpandedChange","autofocus","Segment","inputPlaceholder","segment","inputMinWidth","allowCustomValue","allowEmptyValue","SegmentInput","input","height","paddingTop","marginTop","paddingLeft","margin","padding","createEditableParam","paramDef","additional","multiple","ZabbixFunctionEditor","onParamChange","mouseOver","setIsMouseOver","expanded","setIsExpanded","mapFuncInstanceToParams","added","onMouseOver","onMouseLeave","HorizontalGroup","InlineLabel","backgroundColor","secondary","marginRight","formInputHeight","AddZabbixFunction","onFuncAdd","showMenu","setShowMenu","onFuncAddInternal","menuItems","useMemo","categoryName","subItems","Menu","childItems","buildMenuItems","Button","variant","useCapture","QueryFunctionsEditor","onFuncParamChange","funcIndex","findIndex","onMoveFuncLeft","onMoveFuncRight","onRemoveFunc","InlineFormLabel","newFunc","aliasFuncIndex","aliasFunc","moveAliasFuncLast","ackOptions","sortOptions","trendsOptions","QueryOptionsEditor","queryOptions","setIsOpen","onLimitChange","onPropChange","renderMetricOptions","elements","optionContainer","renderOptions","editorContainer","renderEditor","marginBottom","color","info","TextMetricsQueryEditor","showProblemsOptions","ProblemsQueryEditor","loadProxyOptions","proxiesLoading","proxiesOptions","fetchProxies","onTextFilterChange","MultiSelect","isClearable","ItemIdQueryEditor","slaPropertyList","slaIntervals","ServicesQueryEditor","loadITServiceOptions","services","itServicesLoading","itServicesOptions","fetchITServices","loadSLAOptions","slaOptions","slaLoading","fetchSLAOptions","onStringPropChange","countByOptions","TriggersQueryEditor","fetchItemTags","UserMacrosQueryEditor","loadMacrosOptions","macrosLoading","macrosOptions","fetchmacros","zabbixQueryTypeOptions","variablePattern","inputRegex","focus","zabbixInputValidationEvents","EventsWithValidation","rule","errorMessage","ZabbixInput","validationEvents","restProps","ZabbixVariableQueryEditor","PureComponent","getSelectedQueryType","queryTypes","q","selectedQueryType","legacyQuery","supportsItemTags","handleQueryTypeChange","evt","handleQueryUpdate","handleQueryChange","tooltip","readOnly","defaults","selectedItem","FormField","Switch","LegacyForms","SUPPORTED_SQL_DS","jsonDataChangeHandler","jsonDataSwitchHandler","checked","secureJsonDataChangeHandler","secureJsonData","directDBDatasourceChanegeHandler","setSelectedDS","setSelectedDSType","selectedDs","getDirectDBDatasources","dsOption","dsList","getAll","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","selectedDBDatasource","setSelectedDBDatasource","currentDSType","setCurrentDSType","secureJsonFields","password","restJsonData","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","h3","inputWidth","required","labelClass","setQueryEditor","onRunQuery","queryDefaults","migratedQuery","onChangeInternal","setVariableQueryEditor"],"sourceRoot":""}